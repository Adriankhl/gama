<?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>
<model name="boids">
	<global>
		<var type="bool" name="USE_QUALITY_RENDERING" init="true"/>
		<var type="int" name="number_of_agents" parameter="true" init="500" min="1" max="1000000" />
		<var type="int" name="number_of_obstacles" parameter="true" init="0" min="0" />
		<var type="float" name="maximal_speed" parameter="true" init="15" min="0.1" max="15" />
		<var type="int" name="cohesion_factor" parameter="true" init="200" />
		<var type="int" name="alignment_factor" parameter="true" init="100" />
		<var type="float" name="minimal_distance" parameter="true" init="10.0" />
		<var type="int" name="maximal_turn" parameter="true" init="90" min="0" max="359" />
		<var type="int" name="width_and_height_of_environment" parameter="true" init="2000" />
		<var type="bool" name="torus_environment" parameter="true" init="false" />
		<var type="bool" name="apply_cohesion" init="true" parameter="true" />
		<var type="bool" name="apply_alignment" init="true" parameter="true" />
		<var type="bool" name="apply_separation" init="true" parameter="true" />
		<var type="bool" name="apply_goal" init="true" parameter="true" />
		<var type="bool" name="apply_avoid" init="true" parameter="true" />
		<var type="bool" name="apply_wind" init="true" parameter="true" />
		<var type="bool" name="moving_obstacles" init="false" parameter="true" />
		<var type="int" name="bounds" parameter="true" init="width_and_height_of_environment / 20" />
		<var type="point" name="wind_vector" init="{0,0}" parameter="true" />
		<var type="int" name="goal_duration" init="30" value="goal_duration - 1" />
		<var type="point" name="goal"
			init="{rnd (width_and_height_of_environment - 2) + 1, rnd (width_and_height_of_environment -2) + 1 }" />
		<var type="list" name="images" of="string" value="['../images/bird1.png','../images/bird2.png','../images/bird3.png']"/>
		<var type="int" name="xmin" value="bounds" />
		<var type="int" name="ymin" value="bounds" />
		<var type="int" name="xmax" value="width_and_height_of_environment - bounds" />
		<var type="int" name="ymax" value="width_and_height_of_environment - bounds" />

		<var type="bool" name="create_flock" init="true" parameter="true" category="Flock"/>
		
		<var type="int" name="mergeFrequency" init="3" min="1" parameter="Evaluation frequency of merge command" category="Flock"/>
		<var type="int" name="creationFrequency" init="3" min="1" parameter="Evaluation frequency of creation command" category="Flock"/>
		<var type="int" name="updateFrequency" init="2" min="1" parameter="Evaluation frequency of update command" category="Flock"/>
		<var type="int" name="disposalFrequency" init="1" min="1" parameter="Evaluation frequency of disposal command" category="Flock"/>
		<var type="int" name="mergingDistance" init="6" min="1" parameter="Distance to merge two flocks" category="Flock"/>

		<init>
			<create species="boids" number="number_of_agents">
				<set name="location"
					value="{rnd (width_and_height_of_environment - 2) + 1, rnd (width_and_height_of_environment -2) + 1 }" />
			</create>
			<create species="obstacle" number="number_of_obstacles">
				<set name="location"
					value="{rnd (width_and_height_of_environment - 2) + 1, rnd (width_and_height_of_environment -2) + 1 }" />
			</create>
			<create species="boids_goal" number="1">
				<set name="location" value="goal" />
			</create>
		</init>


		
	</global>

	<environment width="width_and_height_of_environment" height="width_and_height_of_environment" torus="torus_environment"/>

	<entities>
		<species name="boids_goal" skills=" moving">
			<var type="float" name="range" init="20" const="true" />
			<var type="float" name="size" init="10" const="true" />
			
			<reflex>
				<do action="wander">
					<arg name="amplitude" value="45"/>
					<arg name="speed" value="20"	/>			
				</do>
				<set name="goal" value="location"/>
			</reflex>
			<aspect name="default">
				<draw shape="circle" color="'red'" size="10"/>
				<!-- <draw text="'GOAL'" color="'black'" size="15" style="bold" font="'Times'" at="location + {4,4}"/> -->
				<draw shape="circle" color="'orange'" size="40" empty="true"/>
			</aspect>
		</species>

		<species name="boids" skills="moving">
			<var type="float" name="speed" max="maximal_speed" init="maximal_speed" />
			<var type="float" name="range" init="minimal_distance * 2 " />
			<var type="int" name="heading" max="heading + maximal_turn" min="heading - maximal_turn" />
			<var type="point" name="velocity" init="{0,0}" />
			<var type="list" name="others" value="((self neighbours_at range) of_species boids) - self"  />
			<var type="int" name="size" init="5" const="true"/>

			<action name="others_at" return="list">
				<arg name="distance" type="float"/>
				<return value="others where ((self distance_to each) &lt; distance)"/>
			</action>

			<reflex name="separation" when="apply_separation">
				<let name="acc" value="{0,0}" />
				<loop over="(self others_at [distance:: minimal_distance]) of_species boids" var="boid">
					<set name="acc" value="acc - ((the location of boid) - my location)" />
				</loop>
				<set name="velocity" value="velocity + acc" />
			</reflex>

			<action name="compute_mass_center">
			    <return value = "(length others > 0) ? mean (others collect (each.location)) as point : location"/>
			</action>

			<reflex name="alignment" when="apply_alignment">
				<let name="acc" value="(mean (others collect (each.velocity)) as point) - velocity" />
				<set name="velocity" value="velocity + (acc / alignment_factor)" />
			</reflex>

			<reflex name="cohesion" when="apply_cohesion">
				<let name="acc" value="((self compute_mass_center []) as point) - location" />
				<set name="acc" value="acc / cohesion_factor" />
				<set name="velocity" value="velocity + acc" />
			</reflex>

			<reflex name="avoid" when="apply_avoid">
				<let name="acc" value="{0,0}" />
				<loop over="(self others_at [distance::minimal_distance * 2]) of_species obstacle" var="obs">
					<set name="acc" value="acc - ((the location of obs) - my location)" />
				</loop>
				<set name="velocity" value="velocity + acc" />
			</reflex>

			<action name="bounding">
				<if condition="!torus_environment">
					<if condition="first location &lt; xmin">
						<set name="velocity" value="velocity + {bounds,0}" />
					</if>
					<if condition="first location &gt; xmax">
						<set name="velocity" value="velocity - {bounds,0}" />
					</if>
					<if condition="last location &lt; ymin">
						<set name="velocity" value="velocity + {0,bounds}" />
					</if>
					<if condition="last location &gt; ymax">
						<set name="velocity" value="velocity - {0,bounds}" />
					</if>
				</if>
			</action>

			<reflex name="follow_goal" when="apply_goal">
				<set name="velocity" value="velocity + ((goal - location) / cohesion_factor)" />
			</reflex>

			<reflex name="wind" when="apply_wind">
				<set name="velocity" value="velocity + wind_vector" />
			</reflex>

			<action name="do_move">
				<if condition="(int first velocity =  0) and (int last velocity = 0) ">
					<set name="velocity" value="{(rnd 4) -2, (rnd 4) - 2}" />
				</if>
				<let name="old_location" value="location" />
				<do action="goto">
					<arg name="target" value="location + velocity"/>
				</do>
				<set name="velocity" value="location - old_location" />
				<!-- <set name="speed" value="location distance_to old_location" /> -->
			</action>

			<reflex name="movement">
				<do action="bounding" /> 
				<do action="do_move" />
			</reflex>
			
			<aspect name="image">
				<draw image="images at (rnd 2)" size="35 " rotate="heading" color="'black'"/>			
			</aspect>		
			
			<aspect name="default">
				<draw shape="triangle" size="10" rotate="heading" color="'yellow'"/>			
			</aspect>		
			
		</species>
		<species name="obstacle" skills="situated,visible, moving">
			<var type="float" name="speed" init="0.1" />
			<reflex when="moving_obstacles">
				<if condition="flip 0.5">
					<do action="goto">
						<arg name="target" value="one_of list boids" />
					</do>
					<else>
						<do action="wander">
							<arg name="amplitude" value="360" />
						</do>
					</else>
				</if>
			</reflex>
			<aspect name="default">
				<draw shape="triangle" color="rgb 'yellow'" size="10"/>
			</aspect>
		</species>
	</entities>

	<output>
	<!-- 
		<inspect name="Inspector" type="agent"/>
		 -->

		<display name="Sky" refresh_every="1">
<!-- 		<quadtree name="qt"/>  -->
			<species name= "boids"/>
			<species name="boids_goal"/>
			<species name="obstacle"/>
 			<species name="flock" transparency="0.5"/>		
		</display>
	</output>
</model>