/*
* generated by Xtext
*/
grammar InternalGaml;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package msi.gama.lang.gaml.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package msi.gama.lang.gaml.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import msi.gama.lang.gaml.services.GamlGrammarAccess;

}

@parser::members {
 
 	private GamlGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(GamlGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getAlternatives()); }
(rule__Model__Alternatives)
{ after(grammarAccess.getModelAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport 
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBuiltInStatementKey
entryRuleBuiltInStatementKey 
:
{ before(grammarAccess.getBuiltInStatementKeyRule()); }
	 ruleBuiltInStatementKey
{ after(grammarAccess.getBuiltInStatementKeyRule()); } 
	 EOF 
;

// Rule BuiltInStatementKey
ruleBuiltInStatementKey
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBuiltInStatementKeyAccess().getAlternatives()); }
(rule__BuiltInStatementKey__Alternatives)
{ after(grammarAccess.getBuiltInStatementKeyAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatement
entryRuleStatement 
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementAccess().getAlternatives()); }
(rule__Statement__Alternatives)
{ after(grammarAccess.getStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEquation
entryRuleEquation 
:
{ before(grammarAccess.getEquationRule()); }
	 ruleEquation
{ after(grammarAccess.getEquationRule()); } 
	 EOF 
;

// Rule Equation
ruleEquation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEquationAccess().getGroup()); }
(rule__Equation__Group__0)
{ after(grammarAccess.getEquationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIfStatement
entryRuleIfStatement 
:
{ before(grammarAccess.getIfStatementRule()); }
	 ruleIfStatement
{ after(grammarAccess.getIfStatementRule()); } 
	 EOF 
;

// Rule IfStatement
ruleIfStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIfStatementAccess().getGroup()); }
(rule__IfStatement__Group__0)
{ after(grammarAccess.getIfStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassicStatement
entryRuleClassicStatement 
:
{ before(grammarAccess.getClassicStatementRule()); }
	 ruleClassicStatement
{ after(grammarAccess.getClassicStatementRule()); } 
	 EOF 
;

// Rule ClassicStatement
ruleClassicStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassicStatementAccess().getGroup()); }
(rule__ClassicStatement__Group__0)
{ after(grammarAccess.getClassicStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDefinitionStatement
entryRuleDefinitionStatement 
:
{ before(grammarAccess.getDefinitionStatementRule()); }
	 ruleDefinitionStatement
{ after(grammarAccess.getDefinitionStatementRule()); } 
	 EOF 
;

// Rule DefinitionStatement
ruleDefinitionStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefinitionStatementAccess().getGroup()); }
(rule__DefinitionStatement__Group__0)
{ after(grammarAccess.getDefinitionStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleContents
entryRuleContents 
:
{ before(grammarAccess.getContentsRule()); }
	 ruleContents
{ after(grammarAccess.getContentsRule()); } 
	 EOF 
;

// Rule Contents
ruleContents
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getContentsAccess().getGroup()); }
(rule__Contents__Group__0)
{ after(grammarAccess.getContentsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReturnStatement
entryRuleReturnStatement 
:
{ before(grammarAccess.getReturnStatementRule()); }
	 ruleReturnStatement
{ after(grammarAccess.getReturnStatementRule()); } 
	 EOF 
;

// Rule ReturnStatement
ruleReturnStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReturnStatementAccess().getGroup()); }
(rule__ReturnStatement__Group__0)
{ after(grammarAccess.getReturnStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssignmentStatement
entryRuleAssignmentStatement 
:
{ before(grammarAccess.getAssignmentStatementRule()); }
	 ruleAssignmentStatement
{ after(grammarAccess.getAssignmentStatementRule()); } 
	 EOF 
;

// Rule AssignmentStatement
ruleAssignmentStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignmentStatementAccess().getGroup()); }
(rule__AssignmentStatement__Group__0)
{ after(grammarAccess.getAssignmentStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameters
entryRuleParameters 
:
{ before(grammarAccess.getParametersRule()); }
	 ruleParameters
{ after(grammarAccess.getParametersRule()); } 
	 EOF 
;

// Rule Parameters
ruleParameters
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParametersAccess().getGroup()); }
(rule__Parameters__Group__0)
{ after(grammarAccess.getParametersAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActionArguments
entryRuleActionArguments 
:
{ before(grammarAccess.getActionArgumentsRule()); }
	 ruleActionArguments
{ after(grammarAccess.getActionArgumentsRule()); } 
	 EOF 
;

// Rule ActionArguments
ruleActionArguments
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActionArgumentsAccess().getGroup()); }
(rule__ActionArguments__Group__0)
{ after(grammarAccess.getActionArgumentsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArgumentDefinition
entryRuleArgumentDefinition 
:
{ before(grammarAccess.getArgumentDefinitionRule()); }
	 ruleArgumentDefinition
{ after(grammarAccess.getArgumentDefinitionRule()); } 
	 EOF 
;

// Rule ArgumentDefinition
ruleArgumentDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArgumentDefinitionAccess().getGroup()); }
(rule__ArgumentDefinition__Group__0)
{ after(grammarAccess.getArgumentDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFacet
entryRuleFacet 
:
{ before(grammarAccess.getFacetRule()); }
	 ruleFacet
{ after(grammarAccess.getFacetRule()); } 
	 EOF 
;

// Rule Facet
ruleFacet
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFacetAccess().getAlternatives()); }
(rule__Facet__Alternatives)
{ after(grammarAccess.getFacetAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDefinitionFacetKey
entryRuleDefinitionFacetKey 
:
{ before(grammarAccess.getDefinitionFacetKeyRule()); }
	 ruleDefinitionFacetKey
{ after(grammarAccess.getDefinitionFacetKeyRule()); } 
	 EOF 
;

// Rule DefinitionFacetKey
ruleDefinitionFacetKey
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefinitionFacetKeyAccess().getAlternatives()); }
(rule__DefinitionFacetKey__Alternatives)
{ after(grammarAccess.getDefinitionFacetKeyAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassicFacet
entryRuleClassicFacet 
:
{ before(grammarAccess.getClassicFacetRule()); }
	 ruleClassicFacet
{ after(grammarAccess.getClassicFacetRule()); } 
	 EOF 
;

// Rule ClassicFacet
ruleClassicFacet
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassicFacetAccess().getAlternatives()); }
(rule__ClassicFacet__Alternatives)
{ after(grammarAccess.getClassicFacetAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionFacet
entryRuleFunctionFacet 
:
{ before(grammarAccess.getFunctionFacetRule()); }
	 ruleFunctionFacet
{ after(grammarAccess.getFunctionFacetRule()); } 
	 EOF 
;

// Rule FunctionFacet
ruleFunctionFacet
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionFacetAccess().getGroup()); }
(rule__FunctionFacet__Group__0)
{ after(grammarAccess.getFunctionFacetAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBlock
entryRuleBlock 
:
{ before(grammarAccess.getBlockRule()); }
	 ruleBlock
{ after(grammarAccess.getBlockRule()); } 
	 EOF 
;

// Rule Block
ruleBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBlockAccess().getGroup()); }
(rule__Block__Group__0)
{ after(grammarAccess.getBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
(rule__Expression__Alternatives)
{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArgumentPair
entryRuleArgumentPair 
:
{ before(grammarAccess.getArgumentPairRule()); }
	 ruleArgumentPair
{ after(grammarAccess.getArgumentPairRule()); } 
	 EOF 
;

// Rule ArgumentPair
ruleArgumentPair
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArgumentPairAccess().getGroup()); }
(rule__ArgumentPair__Group__0)
{ after(grammarAccess.getArgumentPairAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePair
entryRulePair 
:
{ before(grammarAccess.getPairRule()); }
	 rulePair
{ after(grammarAccess.getPairRule()); } 
	 EOF 
;

// Rule Pair
rulePair
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPairAccess().getGroup()); }
(rule__Pair__Group__0)
{ after(grammarAccess.getPairAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIf
entryRuleIf 
:
{ before(grammarAccess.getIfRule()); }
	 ruleIf
{ after(grammarAccess.getIfRule()); } 
	 EOF 
;

// Rule If
ruleIf
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIfAccess().getGroup()); }
(rule__If__Group__0)
{ after(grammarAccess.getIfAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOr
entryRuleOr 
:
{ before(grammarAccess.getOrRule()); }
	 ruleOr
{ after(grammarAccess.getOrRule()); } 
	 EOF 
;

// Rule Or
ruleOr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOrAccess().getGroup()); }
(rule__Or__Group__0)
{ after(grammarAccess.getOrAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnd
entryRuleAnd 
:
{ before(grammarAccess.getAndRule()); }
	 ruleAnd
{ after(grammarAccess.getAndRule()); } 
	 EOF 
;

// Rule And
ruleAnd
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAndAccess().getGroup()); }
(rule__And__Group__0)
{ after(grammarAccess.getAndAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComparison
entryRuleComparison 
:
{ before(grammarAccess.getComparisonRule()); }
	 ruleComparison
{ after(grammarAccess.getComparisonRule()); } 
	 EOF 
;

// Rule Comparison
ruleComparison
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getComparisonAccess().getGroup()); }
(rule__Comparison__Group__0)
{ after(grammarAccess.getComparisonAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAddition
entryRuleAddition 
:
{ before(grammarAccess.getAdditionRule()); }
	 ruleAddition
{ after(grammarAccess.getAdditionRule()); } 
	 EOF 
;

// Rule Addition
ruleAddition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAdditionAccess().getGroup()); }
(rule__Addition__Group__0)
{ after(grammarAccess.getAdditionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultiplication
entryRuleMultiplication 
:
{ before(grammarAccess.getMultiplicationRule()); }
	 ruleMultiplication
{ after(grammarAccess.getMultiplicationRule()); } 
	 EOF 
;

// Rule Multiplication
ruleMultiplication
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultiplicationAccess().getGroup()); }
(rule__Multiplication__Group__0)
{ after(grammarAccess.getMultiplicationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBinary
entryRuleBinary 
:
{ before(grammarAccess.getBinaryRule()); }
	 ruleBinary
{ after(grammarAccess.getBinaryRule()); } 
	 EOF 
;

// Rule Binary
ruleBinary
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBinaryAccess().getGroup()); }
(rule__Binary__Group__0)
{ after(grammarAccess.getBinaryAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnit
entryRuleUnit 
:
{ before(grammarAccess.getUnitRule()); }
	 ruleUnit
{ after(grammarAccess.getUnitRule()); } 
	 EOF 
;

// Rule Unit
ruleUnit
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnitAccess().getGroup()); }
(rule__Unit__Group__0)
{ after(grammarAccess.getUnitAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnary
entryRuleUnary 
:
{ before(grammarAccess.getUnaryRule()); }
	 ruleUnary
{ after(grammarAccess.getUnaryRule()); } 
	 EOF 
;

// Rule Unary
ruleUnary
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnaryAccess().getAlternatives()); }
(rule__Unary__Alternatives)
{ after(grammarAccess.getUnaryAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAccess
entryRuleAccess 
:
{ before(grammarAccess.getAccessRule()); }
	 ruleAccess
{ after(grammarAccess.getAccessRule()); } 
	 EOF 
;

// Rule Access
ruleAccess
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAccessAccess().getGroup()); }
(rule__Access__Group__0)
{ after(grammarAccess.getAccessAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDot
entryRuleDot 
:
{ before(grammarAccess.getDotRule()); }
	 ruleDot
{ after(grammarAccess.getDotRule()); } 
	 EOF 
;

// Rule Dot
ruleDot
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDotAccess().getGroup()); }
(rule__Dot__Group__0)
{ after(grammarAccess.getDotAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimary
entryRulePrimary 
:
{ before(grammarAccess.getPrimaryRule()); }
	 rulePrimary
{ after(grammarAccess.getPrimaryRule()); } 
	 EOF 
;

// Rule Primary
rulePrimary
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimaryAccess().getAlternatives()); }
(rule__Primary__Alternatives)
{ after(grammarAccess.getPrimaryAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAbstractRef
entryRuleAbstractRef 
:
{ before(grammarAccess.getAbstractRefRule()); }
	 ruleAbstractRef
{ after(grammarAccess.getAbstractRefRule()); } 
	 EOF 
;

// Rule AbstractRef
ruleAbstractRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAbstractRefAccess().getAlternatives()); }
(rule__AbstractRef__Alternatives)
{ after(grammarAccess.getAbstractRefAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunction
entryRuleFunction 
:
{ before(grammarAccess.getFunctionRule()); }
	 ruleFunction
{ after(grammarAccess.getFunctionRule()); } 
	 EOF 
;

// Rule Function
ruleFunction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionAccess().getGroup()); }
(rule__Function__Group__0)
{ after(grammarAccess.getFunctionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameter
entryRuleParameter 
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterAccess().getGroup()); }
(rule__Parameter__Group__0)
{ after(grammarAccess.getParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpressionList
entryRuleExpressionList 
:
{ before(grammarAccess.getExpressionListRule()); }
	 ruleExpressionList
{ after(grammarAccess.getExpressionListRule()); } 
	 EOF 
;

// Rule ExpressionList
ruleExpressionList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionListAccess().getGroup()); }
(rule__ExpressionList__Group__0)
{ after(grammarAccess.getExpressionListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameterList
entryRuleParameterList 
:
{ before(grammarAccess.getParameterListRule()); }
	 ruleParameterList
{ after(grammarAccess.getParameterListRule()); } 
	 EOF 
;

// Rule ParameterList
ruleParameterList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterListAccess().getGroup()); }
(rule__ParameterList__Group__0)
{ after(grammarAccess.getParameterListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnitName
entryRuleUnitName 
:
{ before(grammarAccess.getUnitNameRule()); }
	 ruleUnitName
{ after(grammarAccess.getUnitNameRule()); } 
	 EOF 
;

// Rule UnitName
ruleUnitName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnitNameAccess().getGroup()); }
(rule__UnitName__Group__0)
{ after(grammarAccess.getUnitNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableRef
entryRuleVariableRef 
:
{ before(grammarAccess.getVariableRefRule()); }
	 ruleVariableRef
{ after(grammarAccess.getVariableRefRule()); } 
	 EOF 
;

// Rule VariableRef
ruleVariableRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableRefAccess().getGroup()); }
(rule__VariableRef__Group__0)
{ after(grammarAccess.getVariableRefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleTerminalExpression
entryRuleTerminalExpression 
:
{ before(grammarAccess.getTerminalExpressionRule()); }
	 ruleTerminalExpression
{ after(grammarAccess.getTerminalExpressionRule()); } 
	 EOF 
;

// Rule TerminalExpression
ruleTerminalExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTerminalExpressionAccess().getAlternatives()); }
(rule__TerminalExpression__Alternatives)
{ after(grammarAccess.getTerminalExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Model__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getGroup_0()); }
(rule__Model__Group_0__0)
{ after(grammarAccess.getModelAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getModelAccess().getGroup_1()); }
(rule__Model__Group_1__0)
{ after(grammarAccess.getModelAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltInStatementKey__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuiltInStatementKeyAccess().getAddKeyword_0()); }

	'add' 

{ after(grammarAccess.getBuiltInStatementKeyAccess().getAddKeyword_0()); }
)

    |(
{ before(grammarAccess.getBuiltInStatementKeyAccess().getAskKeyword_1()); }

	'ask' 

{ after(grammarAccess.getBuiltInStatementKeyAccess().getAskKeyword_1()); }
)

    |(
{ before(grammarAccess.getBuiltInStatementKeyAccess().getCaptureKeyword_2()); }

	'capture' 

{ after(grammarAccess.getBuiltInStatementKeyAccess().getCaptureKeyword_2()); }
)

    |(
{ before(grammarAccess.getBuiltInStatementKeyAccess().getCreateKeyword_3()); }

	'create' 

{ after(grammarAccess.getBuiltInStatementKeyAccess().getCreateKeyword_3()); }
)

    |(
{ before(grammarAccess.getBuiltInStatementKeyAccess().getDrawKeyword_4()); }

	'draw' 

{ after(grammarAccess.getBuiltInStatementKeyAccess().getDrawKeyword_4()); }
)

    |(
{ before(grammarAccess.getBuiltInStatementKeyAccess().getErrorKeyword_5()); }

	'error' 

{ after(grammarAccess.getBuiltInStatementKeyAccess().getErrorKeyword_5()); }
)

    |(
{ before(grammarAccess.getBuiltInStatementKeyAccess().getMatchKeyword_6()); }

	'match' 

{ after(grammarAccess.getBuiltInStatementKeyAccess().getMatchKeyword_6()); }
)

    |(
{ before(grammarAccess.getBuiltInStatementKeyAccess().getMatch_betweenKeyword_7()); }

	'match_between' 

{ after(grammarAccess.getBuiltInStatementKeyAccess().getMatch_betweenKeyword_7()); }
)

    |(
{ before(grammarAccess.getBuiltInStatementKeyAccess().getMatch_oneKeyword_8()); }

	'match_one' 

{ after(grammarAccess.getBuiltInStatementKeyAccess().getMatch_oneKeyword_8()); }
)

    |(
{ before(grammarAccess.getBuiltInStatementKeyAccess().getPutKeyword_9()); }

	'put' 

{ after(grammarAccess.getBuiltInStatementKeyAccess().getPutKeyword_9()); }
)

    |(
{ before(grammarAccess.getBuiltInStatementKeyAccess().getReleaseKeyword_10()); }

	'release' 

{ after(grammarAccess.getBuiltInStatementKeyAccess().getReleaseKeyword_10()); }
)

    |(
{ before(grammarAccess.getBuiltInStatementKeyAccess().getRemoveKeyword_11()); }

	'remove' 

{ after(grammarAccess.getBuiltInStatementKeyAccess().getRemoveKeyword_11()); }
)

    |(
{ before(grammarAccess.getBuiltInStatementKeyAccess().getSaveKeyword_12()); }

	'save' 

{ after(grammarAccess.getBuiltInStatementKeyAccess().getSaveKeyword_12()); }
)

    |(
{ before(grammarAccess.getBuiltInStatementKeyAccess().getSetKeyword_13()); }

	'set' 

{ after(grammarAccess.getBuiltInStatementKeyAccess().getSetKeyword_13()); }
)

    |(
{ before(grammarAccess.getBuiltInStatementKeyAccess().getSwitchKeyword_14()); }

	'switch' 

{ after(grammarAccess.getBuiltInStatementKeyAccess().getSwitchKeyword_14()); }
)

    |(
{ before(grammarAccess.getBuiltInStatementKeyAccess().getWarnKeyword_15()); }

	'warn' 

{ after(grammarAccess.getBuiltInStatementKeyAccess().getWarnKeyword_15()); }
)

    |(
{ before(grammarAccess.getBuiltInStatementKeyAccess().getWriteKeyword_16()); }

	'write' 

{ after(grammarAccess.getBuiltInStatementKeyAccess().getWriteKeyword_16()); }
)

    |(
{ before(grammarAccess.getBuiltInStatementKeyAccess().getDisplay_populationKeyword_17()); }

	'display_population' 

{ after(grammarAccess.getBuiltInStatementKeyAccess().getDisplay_populationKeyword_17()); }
)

    |(
{ before(grammarAccess.getBuiltInStatementKeyAccess().getDisplay_gridKeyword_18()); }

	'display_grid' 

{ after(grammarAccess.getBuiltInStatementKeyAccess().getDisplay_gridKeyword_18()); }
)

    |(
{ before(grammarAccess.getBuiltInStatementKeyAccess().getUsingKeyword_19()); }

	'using' 

{ after(grammarAccess.getBuiltInStatementKeyAccess().getUsingKeyword_19()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getAssignmentStatementParserRuleCall_0()); }
(	ruleAssignmentStatement)
{ after(grammarAccess.getStatementAccess().getAssignmentStatementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getAlternatives_1()); }
(rule__Statement__Alternatives_1)
{ after(grammarAccess.getStatementAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getReturnStatementParserRuleCall_1_0()); }
	ruleReturnStatement
{ after(grammarAccess.getStatementAccess().getReturnStatementParserRuleCall_1_0()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getIfStatementParserRuleCall_1_1()); }
	ruleIfStatement
{ after(grammarAccess.getStatementAccess().getIfStatementParserRuleCall_1_1()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getClassicStatementParserRuleCall_1_2()); }
	ruleClassicStatement
{ after(grammarAccess.getStatementAccess().getClassicStatementParserRuleCall_1_2()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getDefinitionStatementParserRuleCall_1_3()); }
	ruleDefinitionStatement
{ after(grammarAccess.getStatementAccess().getDefinitionStatementParserRuleCall_1_3()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getEquationParserRuleCall_1_4()); }
	ruleEquation
{ after(grammarAccess.getStatementAccess().getEquationParserRuleCall_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__ElseAlternatives_4_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getElseIfStatementParserRuleCall_4_1_0_0()); }
	ruleIfStatement
{ after(grammarAccess.getIfStatementAccess().getElseIfStatementParserRuleCall_4_1_0_0()); }
)

    |(
{ before(grammarAccess.getIfStatementAccess().getElseBlockParserRuleCall_4_1_0_1()); }
	ruleBlock
{ after(grammarAccess.getIfStatementAccess().getElseBlockParserRuleCall_4_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassicStatement__Alternatives_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassicStatementAccess().getBlockAssignment_4_0()); }
(rule__ClassicStatement__BlockAssignment_4_0)
{ after(grammarAccess.getClassicStatementAccess().getBlockAssignment_4_0()); }
)

    |(
{ before(grammarAccess.getClassicStatementAccess().getSemicolonKeyword_4_1()); }

	';' 

{ after(grammarAccess.getClassicStatementAccess().getSemicolonKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionStatement__NameAlternatives_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionStatementAccess().getNameIDTerminalRuleCall_2_0_0()); }
	RULE_ID
{ after(grammarAccess.getDefinitionStatementAccess().getNameIDTerminalRuleCall_2_0_0()); }
)

    |(
{ before(grammarAccess.getDefinitionStatementAccess().getNameSTRINGTerminalRuleCall_2_0_1()); }
	RULE_STRING
{ after(grammarAccess.getDefinitionStatementAccess().getNameSTRINGTerminalRuleCall_2_0_1()); }
)

    |(
{ before(grammarAccess.getDefinitionStatementAccess().getNameBuiltInStatementKeyParserRuleCall_2_0_2()); }
	ruleBuiltInStatementKey
{ after(grammarAccess.getDefinitionStatementAccess().getNameBuiltInStatementKeyParserRuleCall_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionStatement__Alternatives_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionStatementAccess().getArgsAssignment_3_1_0()); }
(rule__DefinitionStatement__ArgsAssignment_3_1_0)
{ after(grammarAccess.getDefinitionStatementAccess().getArgsAssignment_3_1_0()); }
)

    |(
{ before(grammarAccess.getDefinitionStatementAccess().getParamsAssignment_3_1_1()); }
(rule__DefinitionStatement__ParamsAssignment_3_1_1)
{ after(grammarAccess.getDefinitionStatementAccess().getParamsAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionStatement__Alternatives_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionStatementAccess().getBlockAssignment_5_0()); }
(rule__DefinitionStatement__BlockAssignment_5_0)
{ after(grammarAccess.getDefinitionStatementAccess().getBlockAssignment_5_0()); }
)

    |(
{ before(grammarAccess.getDefinitionStatementAccess().getSemicolonKeyword_5_1()); }

	';' 

{ after(grammarAccess.getDefinitionStatementAccess().getSemicolonKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentStatement__KeyAlternatives_0_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentStatementAccess().getKeyLessThanSignHyphenMinusKeyword_0_0_1_0_0()); }

	'<-' 

{ after(grammarAccess.getAssignmentStatementAccess().getKeyLessThanSignHyphenMinusKeyword_0_0_1_0_0()); }
)

    |(
{ before(grammarAccess.getAssignmentStatementAccess().getKeyLessThanSignLessThanSignKeyword_0_0_1_0_1()); }

	'<<' 

{ after(grammarAccess.getAssignmentStatementAccess().getKeyLessThanSignLessThanSignKeyword_0_0_1_0_1()); }
)

    |(
{ before(grammarAccess.getAssignmentStatementAccess().getKeyGreaterThanSignGreaterThanSignKeyword_0_0_1_0_2()); }

	'>>' 

{ after(grammarAccess.getAssignmentStatementAccess().getKeyGreaterThanSignGreaterThanSignKeyword_0_0_1_0_2()); }
)

    |(
{ before(grammarAccess.getAssignmentStatementAccess().getKeyPlusSignEqualsSignKeyword_0_0_1_0_3()); }

	'+=' 

{ after(grammarAccess.getAssignmentStatementAccess().getKeyPlusSignEqualsSignKeyword_0_0_1_0_3()); }
)

    |(
{ before(grammarAccess.getAssignmentStatementAccess().getKeyHyphenMinusEqualsSignKeyword_0_0_1_0_4()); }

	'-=' 

{ after(grammarAccess.getAssignmentStatementAccess().getKeyHyphenMinusEqualsSignKeyword_0_0_1_0_4()); }
)

    |(
{ before(grammarAccess.getAssignmentStatementAccess().getKeyPlusSignPlusSignKeyword_0_0_1_0_5()); }

	'++' 

{ after(grammarAccess.getAssignmentStatementAccess().getKeyPlusSignPlusSignKeyword_0_0_1_0_5()); }
)

    |(
{ before(grammarAccess.getAssignmentStatementAccess().getKeyHyphenMinusHyphenMinusKeyword_0_0_1_0_6()); }

	'--' 

{ after(grammarAccess.getAssignmentStatementAccess().getKeyHyphenMinusHyphenMinusKeyword_0_0_1_0_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentDefinition__NameAlternatives_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentDefinitionAccess().getNameIDTerminalRuleCall_2_0_0()); }
	RULE_ID
{ after(grammarAccess.getArgumentDefinitionAccess().getNameIDTerminalRuleCall_2_0_0()); }
)

    |(
{ before(grammarAccess.getArgumentDefinitionAccess().getNameBuiltInStatementKeyParserRuleCall_2_0_1()); }
	ruleBuiltInStatementKey
{ after(grammarAccess.getArgumentDefinitionAccess().getNameBuiltInStatementKeyParserRuleCall_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Facet__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetAccess().getFunctionFacetParserRuleCall_0()); }
	ruleFunctionFacet
{ after(grammarAccess.getFacetAccess().getFunctionFacetParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getFacetAccess().getClassicFacetParserRuleCall_1()); }
	ruleClassicFacet
{ after(grammarAccess.getFacetAccess().getClassicFacetParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionFacetKey__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionFacetKeyAccess().getNameKeyword_0()); }

	'name:' 

{ after(grammarAccess.getDefinitionFacetKeyAccess().getNameKeyword_0()); }
)

    |(
{ before(grammarAccess.getDefinitionFacetKeyAccess().getReturnsKeyword_1()); }

	'returns:' 

{ after(grammarAccess.getDefinitionFacetKeyAccess().getReturnsKeyword_1()); }
)

    |(
{ before(grammarAccess.getDefinitionFacetKeyAccess().getActionKeyword_2()); }

	'action:' 

{ after(grammarAccess.getDefinitionFacetKeyAccess().getActionKeyword_2()); }
)

    |(
{ before(grammarAccess.getDefinitionFacetKeyAccess().getTypeKeyword_3()); }

	'type:' 

{ after(grammarAccess.getDefinitionFacetKeyAccess().getTypeKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassicFacet__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassicFacetAccess().getGroup_0()); }
(rule__ClassicFacet__Group_0__0)
{ after(grammarAccess.getClassicFacetAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getClassicFacetAccess().getGroup_1()); }
(rule__ClassicFacet__Group_1__0)
{ after(grammarAccess.getClassicFacetAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassicFacet__Alternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassicFacetAccess().getGroup_0_0_0()); }
(rule__ClassicFacet__Group_0_0_0__0)
{ after(grammarAccess.getClassicFacetAccess().getGroup_0_0_0()); }
)

    |(
{ before(grammarAccess.getClassicFacetAccess().getKeyAssignment_0_0_1()); }
(rule__ClassicFacet__KeyAssignment_0_0_1)
{ after(grammarAccess.getClassicFacetAccess().getKeyAssignment_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassicFacet__NameAlternatives_1_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassicFacetAccess().getNameIDTerminalRuleCall_1_0_1_0_0()); }
	RULE_ID
{ after(grammarAccess.getClassicFacetAccess().getNameIDTerminalRuleCall_1_0_1_0_0()); }
)

    |(
{ before(grammarAccess.getClassicFacetAccess().getNameSTRINGTerminalRuleCall_1_0_1_0_1()); }
	RULE_STRING
{ after(grammarAccess.getClassicFacetAccess().getNameSTRINGTerminalRuleCall_1_0_1_0_1()); }
)

    |(
{ before(grammarAccess.getClassicFacetAccess().getNameBuiltInStatementKeyParserRuleCall_1_0_1_0_2()); }
	ruleBuiltInStatementKey
{ after(grammarAccess.getClassicFacetAccess().getNameBuiltInStatementKeyParserRuleCall_1_0_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionFacet__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionFacetAccess().getKeyAssignment_0_0()); }
(rule__FunctionFacet__KeyAssignment_0_0)
{ after(grammarAccess.getFunctionFacetAccess().getKeyAssignment_0_0()); }
)

    |(
{ before(grammarAccess.getFunctionFacetAccess().getKeyAssignment_0_1()); }
(rule__FunctionFacet__KeyAssignment_0_1)
{ after(grammarAccess.getFunctionFacetAccess().getKeyAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getGroup_2_0()); }
(rule__Block__Group_2_0__0)
{ after(grammarAccess.getBlockAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getBlockAccess().getGroup_2_1()); }
(rule__Block__Group_2_1__0)
{ after(grammarAccess.getBlockAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getArgumentPairParserRuleCall_0()); }
(	ruleArgumentPair)
{ after(grammarAccess.getExpressionAccess().getArgumentPairParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getPairParserRuleCall_1()); }
	rulePair
{ after(grammarAccess.getExpressionAccess().getPairParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentPair__Alternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentPairAccess().getGroup_0_0_0()); }
(rule__ArgumentPair__Group_0_0_0__0)
{ after(grammarAccess.getArgumentPairAccess().getGroup_0_0_0()); }
)

    |(
{ before(grammarAccess.getArgumentPairAccess().getGroup_0_0_1()); }
(rule__ArgumentPair__Group_0_0_1__0)
{ after(grammarAccess.getArgumentPairAccess().getGroup_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentPair__OpAlternatives_0_0_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentPairAccess().getOpIDTerminalRuleCall_0_0_0_0_0_0()); }
	RULE_ID
{ after(grammarAccess.getArgumentPairAccess().getOpIDTerminalRuleCall_0_0_0_0_0_0()); }
)

    |(
{ before(grammarAccess.getArgumentPairAccess().getOpBuiltInStatementKeyParserRuleCall_0_0_0_0_0_1()); }
	ruleBuiltInStatementKey
{ after(grammarAccess.getArgumentPairAccess().getOpBuiltInStatementKeyParserRuleCall_0_0_0_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__OpAlternatives_1_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getOpExclamationMarkEqualsSignKeyword_1_0_1_0_0()); }

	'!=' 

{ after(grammarAccess.getComparisonAccess().getOpExclamationMarkEqualsSignKeyword_1_0_1_0_0()); }
)

    |(
{ before(grammarAccess.getComparisonAccess().getOpEqualsSignKeyword_1_0_1_0_1()); }

	'=' 

{ after(grammarAccess.getComparisonAccess().getOpEqualsSignKeyword_1_0_1_0_1()); }
)

    |(
{ before(grammarAccess.getComparisonAccess().getOpGreaterThanSignEqualsSignKeyword_1_0_1_0_2()); }

	'>=' 

{ after(grammarAccess.getComparisonAccess().getOpGreaterThanSignEqualsSignKeyword_1_0_1_0_2()); }
)

    |(
{ before(grammarAccess.getComparisonAccess().getOpLessThanSignEqualsSignKeyword_1_0_1_0_3()); }

	'<=' 

{ after(grammarAccess.getComparisonAccess().getOpLessThanSignEqualsSignKeyword_1_0_1_0_3()); }
)

    |(
{ before(grammarAccess.getComparisonAccess().getOpLessThanSignKeyword_1_0_1_0_4()); }

	'<' 

{ after(grammarAccess.getComparisonAccess().getOpLessThanSignKeyword_1_0_1_0_4()); }
)

    |(
{ before(grammarAccess.getComparisonAccess().getOpGreaterThanSignKeyword_1_0_1_0_5()); }

	'>' 

{ after(grammarAccess.getComparisonAccess().getOpGreaterThanSignKeyword_1_0_1_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__OpAlternatives_1_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getOpPlusSignKeyword_1_0_1_0_0()); }

	'+' 

{ after(grammarAccess.getAdditionAccess().getOpPlusSignKeyword_1_0_1_0_0()); }
)

    |(
{ before(grammarAccess.getAdditionAccess().getOpHyphenMinusKeyword_1_0_1_0_1()); }

	'-' 

{ after(grammarAccess.getAdditionAccess().getOpHyphenMinusKeyword_1_0_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__OpAlternatives_1_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getOpAsteriskKeyword_1_0_1_0_0()); }

	'*' 

{ after(grammarAccess.getMultiplicationAccess().getOpAsteriskKeyword_1_0_1_0_0()); }
)

    |(
{ before(grammarAccess.getMultiplicationAccess().getOpSolidusKeyword_1_0_1_0_1()); }

	'/' 

{ after(grammarAccess.getMultiplicationAccess().getOpSolidusKeyword_1_0_1_0_1()); }
)

    |(
{ before(grammarAccess.getMultiplicationAccess().getOpCircumflexAccentKeyword_1_0_1_0_2()); }

	'^' 

{ after(grammarAccess.getMultiplicationAccess().getOpCircumflexAccentKeyword_1_0_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryAccess().getAccessParserRuleCall_0()); }
	ruleAccess
{ after(grammarAccess.getUnaryAccess().getAccessParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getUnaryAccess().getGroup_1()); }
(rule__Unary__Group_1__0)
{ after(grammarAccess.getUnaryAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__Alternatives_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryAccess().getGroup_1_1_0()); }
(rule__Unary__Group_1_1_0__0)
{ after(grammarAccess.getUnaryAccess().getGroup_1_1_0()); }
)

    |(
{ before(grammarAccess.getUnaryAccess().getGroup_1_1_1()); }
(rule__Unary__Group_1_1_1__0)
{ after(grammarAccess.getUnaryAccess().getGroup_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__OpAlternatives_1_1_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryAccess().getOpHyphenMinusKeyword_1_1_1_0_0_0()); }

	'-' 

{ after(grammarAccess.getUnaryAccess().getOpHyphenMinusKeyword_1_1_1_0_0_0()); }
)

    |(
{ before(grammarAccess.getUnaryAccess().getOpExclamationMarkKeyword_1_1_1_0_0_1()); }

	'!' 

{ after(grammarAccess.getUnaryAccess().getOpExclamationMarkKeyword_1_1_1_0_0_1()); }
)

    |(
{ before(grammarAccess.getUnaryAccess().getOpMyKeyword_1_1_1_0_0_2()); }

	'my' 

{ after(grammarAccess.getUnaryAccess().getOpMyKeyword_1_1_1_0_0_2()); }
)

    |(
{ before(grammarAccess.getUnaryAccess().getOpTheKeyword_1_1_1_0_0_3()); }

	'the' 

{ after(grammarAccess.getUnaryAccess().getOpTheKeyword_1_1_1_0_0_3()); }
)

    |(
{ before(grammarAccess.getUnaryAccess().getOpNotKeyword_1_1_1_0_0_4()); }

	'not' 

{ after(grammarAccess.getUnaryAccess().getOpNotKeyword_1_1_1_0_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getTerminalExpressionParserRuleCall_0()); }
	ruleTerminalExpression
{ after(grammarAccess.getPrimaryAccess().getTerminalExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPrimaryAccess().getAbstractRefParserRuleCall_1()); }
	ruleAbstractRef
{ after(grammarAccess.getPrimaryAccess().getAbstractRefParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getPrimaryAccess().getGroup_2()); }
(rule__Primary__Group_2__0)
{ after(grammarAccess.getPrimaryAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getPrimaryAccess().getGroup_3()); }
(rule__Primary__Group_3__0)
{ after(grammarAccess.getPrimaryAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getPrimaryAccess().getGroup_4()); }
(rule__Primary__Group_4__0)
{ after(grammarAccess.getPrimaryAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getPrimaryAccess().getGroup_5()); }
(rule__Primary__Group_5__0)
{ after(grammarAccess.getPrimaryAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractRef__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractRefAccess().getVariableRefParserRuleCall_0()); }
	ruleVariableRef
{ after(grammarAccess.getAbstractRefAccess().getVariableRefParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAbstractRefAccess().getFunctionParserRuleCall_1()); }
	ruleFunction
{ after(grammarAccess.getAbstractRefAccess().getFunctionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getBuiltInFacetKeyAssignment_1_0()); }
(rule__Parameter__BuiltInFacetKeyAssignment_1_0)
{ after(grammarAccess.getParameterAccess().getBuiltInFacetKeyAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getParameterAccess().getGroup_1_1()); }
(rule__Parameter__Group_1_1__0)
{ after(grammarAccess.getParameterAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getGroup_0()); }
(rule__TerminalExpression__Group_0__0)
{ after(grammarAccess.getTerminalExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getGroup_1()); }
(rule__TerminalExpression__Group_1__0)
{ after(grammarAccess.getTerminalExpressionAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getGroup_2()); }
(rule__TerminalExpression__Group_2__0)
{ after(grammarAccess.getTerminalExpressionAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getGroup_3()); }
(rule__TerminalExpression__Group_3__0)
{ after(grammarAccess.getTerminalExpressionAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getGroup_4()); }
(rule__TerminalExpression__Group_4__0)
{ after(grammarAccess.getTerminalExpressionAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group_0__0__Impl
	rule__Model__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getModelKeyword_0_0()); }

	'model' 

{ after(grammarAccess.getModelAccess().getModelKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group_0__1__Impl
	rule__Model__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getNameAssignment_0_1()); }
(rule__Model__NameAssignment_0_1)
{ after(grammarAccess.getModelAccess().getNameAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group_0__2__Impl
	rule__Model__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getImportsAssignment_0_2()); }
(rule__Model__ImportsAssignment_0_2)*
{ after(grammarAccess.getModelAccess().getImportsAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getStatementsAssignment_0_3()); }
(rule__Model__StatementsAssignment_0_3)*
{ after(grammarAccess.getModelAccess().getStatementsAssignment_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Model__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group_1__0__Impl
	rule__Model__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getStringEvaluatorAction_1_0()); }
(

)
{ after(grammarAccess.getModelAccess().getStringEvaluatorAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group_1__1__Impl
	rule__Model__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getNameAssignment_1_1()); }
(rule__Model__NameAssignment_1_1)
{ after(grammarAccess.getModelAccess().getNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group_1__2__Impl
	rule__Model__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getLessThanSignHyphenMinusKeyword_1_2()); }

	'<-' 

{ after(grammarAccess.getModelAccess().getLessThanSignHyphenMinusKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getExprAssignment_1_3()); }
(rule__Model__ExprAssignment_1_3)
{ after(grammarAccess.getModelAccess().getExprAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportURIAssignment_1()); }
(rule__Import__ImportURIAssignment_1)
{ after(grammarAccess.getImportAccess().getImportURIAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Equation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Equation__Group__0__Impl
	rule__Equation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquationAccess().getFunctionAssignment_0()); }
(rule__Equation__FunctionAssignment_0)
{ after(grammarAccess.getEquationAccess().getFunctionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Equation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Equation__Group__1__Impl
	rule__Equation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquationAccess().getKeyAssignment_1()); }
(rule__Equation__KeyAssignment_1)
{ after(grammarAccess.getEquationAccess().getKeyAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Equation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Equation__Group__2__Impl
	rule__Equation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquationAccess().getExprAssignment_2()); }
(rule__Equation__ExprAssignment_2)
{ after(grammarAccess.getEquationAccess().getExprAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Equation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Equation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquationAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getEquationAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__IfStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__0__Impl
	rule__IfStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getKeyAssignment_0()); }
(rule__IfStatement__KeyAssignment_0)
{ after(grammarAccess.getIfStatementAccess().getKeyAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__1__Impl
	rule__IfStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getConditionKeyword_1()); }
(
	'condition:' 
)?
{ after(grammarAccess.getIfStatementAccess().getConditionKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__2__Impl
	rule__IfStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getExprAssignment_2()); }
(rule__IfStatement__ExprAssignment_2)
{ after(grammarAccess.getIfStatementAccess().getExprAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__3__Impl
	rule__IfStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getBlockAssignment_3()); }
(rule__IfStatement__BlockAssignment_3)
{ after(grammarAccess.getIfStatementAccess().getBlockAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getGroup_4()); }
(rule__IfStatement__Group_4__0)?
{ after(grammarAccess.getIfStatementAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__IfStatement__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_4__0__Impl
	rule__IfStatement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getElseKeyword_4_0()); }
(
	'else' 
)
{ after(grammarAccess.getIfStatementAccess().getElseKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getElseAssignment_4_1()); }
(rule__IfStatement__ElseAssignment_4_1)
{ after(grammarAccess.getIfStatementAccess().getElseAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClassicStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassicStatement__Group__0__Impl
	rule__ClassicStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassicStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassicStatementAccess().getKeyAssignment_0()); }
(rule__ClassicStatement__KeyAssignment_0)
{ after(grammarAccess.getClassicStatementAccess().getKeyAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassicStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassicStatement__Group__1__Impl
	rule__ClassicStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassicStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassicStatementAccess().getGroup_1()); }
(rule__ClassicStatement__Group_1__0)?
{ after(grammarAccess.getClassicStatementAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassicStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassicStatement__Group__2__Impl
	rule__ClassicStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassicStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassicStatementAccess().getExprAssignment_2()); }
(rule__ClassicStatement__ExprAssignment_2)
{ after(grammarAccess.getClassicStatementAccess().getExprAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassicStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassicStatement__Group__3__Impl
	rule__ClassicStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassicStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassicStatementAccess().getFacetsAssignment_3()); }
(rule__ClassicStatement__FacetsAssignment_3)*
{ after(grammarAccess.getClassicStatementAccess().getFacetsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassicStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassicStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassicStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassicStatementAccess().getAlternatives_4()); }
(rule__ClassicStatement__Alternatives_4)
{ after(grammarAccess.getClassicStatementAccess().getAlternatives_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ClassicStatement__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassicStatement__Group_1__0__Impl
	rule__ClassicStatement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassicStatement__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassicStatementAccess().getIDTerminalRuleCall_1_0()); }
	RULE_ID
{ after(grammarAccess.getClassicStatementAccess().getIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassicStatement__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassicStatement__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassicStatement__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassicStatementAccess().getColonKeyword_1_1()); }

	':' 

{ after(grammarAccess.getClassicStatementAccess().getColonKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DefinitionStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefinitionStatement__Group__0__Impl
	rule__DefinitionStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionStatementAccess().getKeyAssignment_0()); }
(rule__DefinitionStatement__KeyAssignment_0)
{ after(grammarAccess.getDefinitionStatementAccess().getKeyAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefinitionStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefinitionStatement__Group__1__Impl
	rule__DefinitionStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionStatementAccess().getOfAssignment_1()); }
(rule__DefinitionStatement__OfAssignment_1)?
{ after(grammarAccess.getDefinitionStatementAccess().getOfAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefinitionStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefinitionStatement__Group__2__Impl
	rule__DefinitionStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionStatementAccess().getNameAssignment_2()); }
(rule__DefinitionStatement__NameAssignment_2)?
{ after(grammarAccess.getDefinitionStatementAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefinitionStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefinitionStatement__Group__3__Impl
	rule__DefinitionStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionStatementAccess().getGroup_3()); }
(rule__DefinitionStatement__Group_3__0)?
{ after(grammarAccess.getDefinitionStatementAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefinitionStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefinitionStatement__Group__4__Impl
	rule__DefinitionStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionStatementAccess().getFacetsAssignment_4()); }
(rule__DefinitionStatement__FacetsAssignment_4)*
{ after(grammarAccess.getDefinitionStatementAccess().getFacetsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefinitionStatement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefinitionStatement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionStatement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionStatementAccess().getAlternatives_5()); }
(rule__DefinitionStatement__Alternatives_5)
{ after(grammarAccess.getDefinitionStatementAccess().getAlternatives_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__DefinitionStatement__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefinitionStatement__Group_3__0__Impl
	rule__DefinitionStatement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionStatement__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionStatementAccess().getLeftParenthesisKeyword_3_0()); }

	'(' 

{ after(grammarAccess.getDefinitionStatementAccess().getLeftParenthesisKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefinitionStatement__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefinitionStatement__Group_3__1__Impl
	rule__DefinitionStatement__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionStatement__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionStatementAccess().getAlternatives_3_1()); }
(rule__DefinitionStatement__Alternatives_3_1)?
{ after(grammarAccess.getDefinitionStatementAccess().getAlternatives_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefinitionStatement__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefinitionStatement__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionStatement__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionStatementAccess().getRightParenthesisKeyword_3_2()); }

	')' 

{ after(grammarAccess.getDefinitionStatementAccess().getRightParenthesisKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Contents__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Contents__Group__0__Impl
	rule__Contents__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Contents__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContentsAccess().getLessThanSignKeyword_0()); }

	'<' 

{ after(grammarAccess.getContentsAccess().getLessThanSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Contents__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Contents__Group__1__Impl
	rule__Contents__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Contents__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContentsAccess().getTypeAssignment_1()); }
(rule__Contents__TypeAssignment_1)
{ after(grammarAccess.getContentsAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Contents__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Contents__Group__2__Impl
	rule__Contents__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Contents__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContentsAccess().getGroup_2()); }
(rule__Contents__Group_2__0)?
{ after(grammarAccess.getContentsAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Contents__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Contents__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Contents__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContentsAccess().getGreaterThanSignKeyword_3()); }

	'>' 

{ after(grammarAccess.getContentsAccess().getGreaterThanSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Contents__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Contents__Group_2__0__Impl
	rule__Contents__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Contents__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContentsAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getContentsAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Contents__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Contents__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Contents__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContentsAccess().getType2Assignment_2_1()); }
(rule__Contents__Type2Assignment_2_1)
{ after(grammarAccess.getContentsAccess().getType2Assignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ReturnStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnStatement__Group__0__Impl
	rule__ReturnStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStatementAccess().getKeyAssignment_0()); }
(rule__ReturnStatement__KeyAssignment_0)
{ after(grammarAccess.getReturnStatementAccess().getKeyAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnStatement__Group__1__Impl
	rule__ReturnStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStatementAccess().getExprAssignment_1()); }
(rule__ReturnStatement__ExprAssignment_1)?
{ after(grammarAccess.getReturnStatementAccess().getExprAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStatementAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getReturnStatementAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AssignmentStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentStatement__Group__0__Impl
	rule__AssignmentStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentStatementAccess().getGroup_0()); }
(rule__AssignmentStatement__Group_0__0)
{ after(grammarAccess.getAssignmentStatementAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssignmentStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentStatement__Group__1__Impl
	rule__AssignmentStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentStatementAccess().getValueAssignment_1()); }
(rule__AssignmentStatement__ValueAssignment_1)
{ after(grammarAccess.getAssignmentStatementAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssignmentStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentStatement__Group__2__Impl
	rule__AssignmentStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentStatementAccess().getFacetsAssignment_2()); }
(rule__AssignmentStatement__FacetsAssignment_2)*
{ after(grammarAccess.getAssignmentStatementAccess().getFacetsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssignmentStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentStatement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentStatementAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getAssignmentStatementAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AssignmentStatement__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentStatement__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentStatement__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentStatementAccess().getGroup_0_0()); }
(rule__AssignmentStatement__Group_0_0__0)
{ after(grammarAccess.getAssignmentStatementAccess().getGroup_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__AssignmentStatement__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentStatement__Group_0_0__0__Impl
	rule__AssignmentStatement__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentStatement__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentStatementAccess().getExprAssignment_0_0_0()); }
(rule__AssignmentStatement__ExprAssignment_0_0_0)
{ after(grammarAccess.getAssignmentStatementAccess().getExprAssignment_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssignmentStatement__Group_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentStatement__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentStatement__Group_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentStatementAccess().getKeyAssignment_0_0_1()); }
(rule__AssignmentStatement__KeyAssignment_0_0_1)
{ after(grammarAccess.getAssignmentStatementAccess().getKeyAssignment_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Parameters__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameters__Group__0__Impl
	rule__Parameters__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParametersAccess().getParametersAction_0()); }
(

)
{ after(grammarAccess.getParametersAccess().getParametersAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameters__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameters__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParametersAccess().getParamsAssignment_1()); }
(rule__Parameters__ParamsAssignment_1)?
{ after(grammarAccess.getParametersAccess().getParamsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ActionArguments__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActionArguments__Group__0__Impl
	rule__ActionArguments__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionArguments__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionArgumentsAccess().getArgsAssignment_0()); }
(rule__ActionArguments__ArgsAssignment_0)
{ after(grammarAccess.getActionArgumentsAccess().getArgsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActionArguments__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActionArguments__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionArguments__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionArgumentsAccess().getGroup_1()); }
(rule__ActionArguments__Group_1__0)*
{ after(grammarAccess.getActionArgumentsAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ActionArguments__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActionArguments__Group_1__0__Impl
	rule__ActionArguments__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionArguments__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionArgumentsAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getActionArgumentsAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActionArguments__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActionArguments__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionArguments__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionArgumentsAccess().getArgsAssignment_1_1()); }
(rule__ActionArguments__ArgsAssignment_1_1)
{ after(grammarAccess.getActionArgumentsAccess().getArgsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ArgumentDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgumentDefinition__Group__0__Impl
	rule__ArgumentDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentDefinitionAccess().getTypeAssignment_0()); }
(rule__ArgumentDefinition__TypeAssignment_0)
{ after(grammarAccess.getArgumentDefinitionAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgumentDefinition__Group__1__Impl
	rule__ArgumentDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentDefinitionAccess().getOfAssignment_1()); }
(rule__ArgumentDefinition__OfAssignment_1)?
{ after(grammarAccess.getArgumentDefinitionAccess().getOfAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgumentDefinition__Group__2__Impl
	rule__ArgumentDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentDefinitionAccess().getNameAssignment_2()); }
(rule__ArgumentDefinition__NameAssignment_2)
{ after(grammarAccess.getArgumentDefinitionAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgumentDefinition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentDefinitionAccess().getGroup_3()); }
(rule__ArgumentDefinition__Group_3__0)?
{ after(grammarAccess.getArgumentDefinitionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ArgumentDefinition__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgumentDefinition__Group_3__0__Impl
	rule__ArgumentDefinition__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentDefinition__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentDefinitionAccess().getLessThanSignHyphenMinusKeyword_3_0()); }

	'<-' 

{ after(grammarAccess.getArgumentDefinitionAccess().getLessThanSignHyphenMinusKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentDefinition__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgumentDefinition__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentDefinition__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentDefinitionAccess().getDefaultAssignment_3_1()); }
(rule__ArgumentDefinition__DefaultAssignment_3_1)
{ after(grammarAccess.getArgumentDefinitionAccess().getDefaultAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClassicFacet__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassicFacet__Group_0__0__Impl
	rule__ClassicFacet__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassicFacet__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassicFacetAccess().getAlternatives_0_0()); }
(rule__ClassicFacet__Alternatives_0_0)
{ after(grammarAccess.getClassicFacetAccess().getAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassicFacet__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassicFacet__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassicFacet__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassicFacetAccess().getExprAssignment_0_1()); }
(rule__ClassicFacet__ExprAssignment_0_1)
{ after(grammarAccess.getClassicFacetAccess().getExprAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClassicFacet__Group_0_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassicFacet__Group_0_0_0__0__Impl
	rule__ClassicFacet__Group_0_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassicFacet__Group_0_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassicFacetAccess().getKeyAssignment_0_0_0_0()); }
(rule__ClassicFacet__KeyAssignment_0_0_0_0)
{ after(grammarAccess.getClassicFacetAccess().getKeyAssignment_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassicFacet__Group_0_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassicFacet__Group_0_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassicFacet__Group_0_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassicFacetAccess().getColonKeyword_0_0_0_1()); }

	':' 

{ after(grammarAccess.getClassicFacetAccess().getColonKeyword_0_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClassicFacet__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassicFacet__Group_1__0__Impl
	rule__ClassicFacet__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassicFacet__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassicFacetAccess().getGroup_1_0()); }
(rule__ClassicFacet__Group_1_0__0)
{ after(grammarAccess.getClassicFacetAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassicFacet__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassicFacet__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassicFacet__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassicFacetAccess().getOfAssignment_1_1()); }
(rule__ClassicFacet__OfAssignment_1_1)?
{ after(grammarAccess.getClassicFacetAccess().getOfAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClassicFacet__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassicFacet__Group_1_0__0__Impl
	rule__ClassicFacet__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassicFacet__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassicFacetAccess().getKeyAssignment_1_0_0()); }
(rule__ClassicFacet__KeyAssignment_1_0_0)
{ after(grammarAccess.getClassicFacetAccess().getKeyAssignment_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassicFacet__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassicFacet__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassicFacet__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassicFacetAccess().getNameAssignment_1_0_1()); }
(rule__ClassicFacet__NameAssignment_1_0_1)
{ after(grammarAccess.getClassicFacetAccess().getNameAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionFacet__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionFacet__Group__0__Impl
	rule__FunctionFacet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionFacet__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionFacetAccess().getAlternatives_0()); }
(rule__FunctionFacet__Alternatives_0)
{ after(grammarAccess.getFunctionFacetAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionFacet__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionFacet__Group__1__Impl
	rule__FunctionFacet__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionFacet__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionFacetAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getFunctionFacetAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionFacet__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionFacet__Group__2__Impl
	rule__FunctionFacet__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionFacet__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionFacetAccess().getExprAssignment_2()); }
(rule__FunctionFacet__ExprAssignment_2)
{ after(grammarAccess.getFunctionFacetAccess().getExprAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionFacet__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionFacet__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionFacet__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionFacetAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getFunctionFacetAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Block__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__0__Impl
	rule__Block__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getBlockAction_0()); }
(

)
{ after(grammarAccess.getBlockAccess().getBlockAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__1__Impl
	rule__Block__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getAlternatives_2()); }
(rule__Block__Alternatives_2)
{ after(grammarAccess.getBlockAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Block__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group_2_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getGroup_2_0_0()); }
(rule__Block__Group_2_0_0__0)
{ after(grammarAccess.getBlockAccess().getGroup_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Block__Group_2_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group_2_0_0__0__Impl
	rule__Block__Group_2_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group_2_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getFunctionAssignment_2_0_0_0()); }
(rule__Block__FunctionAssignment_2_0_0_0)
{ after(grammarAccess.getBlockAccess().getFunctionAssignment_2_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group_2_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group_2_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group_2_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_2_0_0_1()); }

	'}' 

{ after(grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_2_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Block__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group_2_1__0__Impl
	rule__Block__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getStatementsAssignment_2_1_0()); }
(rule__Block__StatementsAssignment_2_1_0)*
{ after(grammarAccess.getBlockAccess().getStatementsAssignment_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_2_1_1()); }

	'}' 

{ after(grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ArgumentPair__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgumentPair__Group__0__Impl
	rule__ArgumentPair__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentPair__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentPairAccess().getGroup_0()); }
(rule__ArgumentPair__Group_0__0)?
{ after(grammarAccess.getArgumentPairAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentPair__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgumentPair__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentPair__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentPairAccess().getRightAssignment_1()); }
(rule__ArgumentPair__RightAssignment_1)
{ after(grammarAccess.getArgumentPairAccess().getRightAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ArgumentPair__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgumentPair__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentPair__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentPairAccess().getAlternatives_0_0()); }
(rule__ArgumentPair__Alternatives_0_0)
{ after(grammarAccess.getArgumentPairAccess().getAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__ArgumentPair__Group_0_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgumentPair__Group_0_0_0__0__Impl
	rule__ArgumentPair__Group_0_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentPair__Group_0_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentPairAccess().getOpAssignment_0_0_0_0()); }
(rule__ArgumentPair__OpAssignment_0_0_0_0)
{ after(grammarAccess.getArgumentPairAccess().getOpAssignment_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentPair__Group_0_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgumentPair__Group_0_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentPair__Group_0_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentPairAccess().getColonColonKeyword_0_0_0_1()); }

	'::' 

{ after(grammarAccess.getArgumentPairAccess().getColonColonKeyword_0_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ArgumentPair__Group_0_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgumentPair__Group_0_0_1__0__Impl
	rule__ArgumentPair__Group_0_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentPair__Group_0_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentPairAccess().getOpAssignment_0_0_1_0()); }
(rule__ArgumentPair__OpAssignment_0_0_1_0)
{ after(grammarAccess.getArgumentPairAccess().getOpAssignment_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentPair__Group_0_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgumentPair__Group_0_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentPair__Group_0_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentPairAccess().getColonKeyword_0_0_1_1()); }

	':' 

{ after(grammarAccess.getArgumentPairAccess().getColonKeyword_0_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Pair__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pair__Group__0__Impl
	rule__Pair__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pair__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPairAccess().getIfParserRuleCall_0()); }
	ruleIf
{ after(grammarAccess.getPairAccess().getIfParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pair__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pair__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pair__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPairAccess().getGroup_1()); }
(rule__Pair__Group_1__0)?
{ after(grammarAccess.getPairAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Pair__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pair__Group_1__0__Impl
	rule__Pair__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pair__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPairAccess().getGroup_1_0()); }
(rule__Pair__Group_1_0__0)
{ after(grammarAccess.getPairAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pair__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pair__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pair__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPairAccess().getRightAssignment_1_1()); }
(rule__Pair__RightAssignment_1_1)
{ after(grammarAccess.getPairAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Pair__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pair__Group_1_0__0__Impl
	rule__Pair__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pair__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPairAccess().getPairLeftAction_1_0_0()); }
(

)
{ after(grammarAccess.getPairAccess().getPairLeftAction_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pair__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pair__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pair__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPairAccess().getOpAssignment_1_0_1()); }
(rule__Pair__OpAssignment_1_0_1)
{ after(grammarAccess.getPairAccess().getOpAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__If__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group__0__Impl
	rule__If__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getOrParserRuleCall_0()); }
	ruleOr
{ after(grammarAccess.getIfAccess().getOrParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getGroup_1()); }
(rule__If__Group_1__0)?
{ after(grammarAccess.getIfAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__If__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group_1__0__Impl
	rule__If__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getIfLeftAction_1_0()); }
(

)
{ after(grammarAccess.getIfAccess().getIfLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group_1__1__Impl
	rule__If__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getOpAssignment_1_1()); }
(rule__If__OpAssignment_1_1)
{ after(grammarAccess.getIfAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group_1__2__Impl
	rule__If__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getRightAssignment_1_2()); }
(rule__If__RightAssignment_1_2)
{ after(grammarAccess.getIfAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group_1__3__Impl
	rule__If__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getColonKeyword_1_3()); }

	':' 

{ after(grammarAccess.getIfAccess().getColonKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getIfFalseAssignment_1_4()); }
(rule__If__IfFalseAssignment_1_4)
{ after(grammarAccess.getIfAccess().getIfFalseAssignment_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Or__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Or__Group__0__Impl
	rule__Or__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getAndParserRuleCall_0()); }
	ruleAnd
{ after(grammarAccess.getOrAccess().getAndParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Or__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getGroup_1()); }
(rule__Or__Group_1__0)*
{ after(grammarAccess.getOrAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Or__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Or__Group_1__0__Impl
	rule__Or__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getOrAccess().getExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Or__Group_1__1__Impl
	rule__Or__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getOpAssignment_1_1()); }
(rule__Or__OpAssignment_1_1)
{ after(grammarAccess.getOrAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Or__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getRightAssignment_1_2()); }
(rule__Or__RightAssignment_1_2)
{ after(grammarAccess.getOrAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__And__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__And__Group__0__Impl
	rule__And__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAccess().getComparisonParserRuleCall_0()); }
	ruleComparison
{ after(grammarAccess.getAndAccess().getComparisonParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__And__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAccess().getGroup_1()); }
(rule__And__Group_1__0)*
{ after(grammarAccess.getAndAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__And__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__And__Group_1__0__Impl
	rule__And__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAccess().getExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getAndAccess().getExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__And__Group_1__1__Impl
	rule__And__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAccess().getOpAssignment_1_1()); }
(rule__And__OpAssignment_1_1)
{ after(grammarAccess.getAndAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__And__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAccess().getRightAssignment_1_2()); }
(rule__And__RightAssignment_1_2)
{ after(grammarAccess.getAndAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Comparison__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comparison__Group__0__Impl
	rule__Comparison__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getAdditionParserRuleCall_0()); }
	ruleAddition
{ after(grammarAccess.getComparisonAccess().getAdditionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comparison__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getGroup_1()); }
(rule__Comparison__Group_1__0)?
{ after(grammarAccess.getComparisonAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Comparison__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comparison__Group_1__0__Impl
	rule__Comparison__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getGroup_1_0()); }
(rule__Comparison__Group_1_0__0)
{ after(grammarAccess.getComparisonAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comparison__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getRightAssignment_1_1()); }
(rule__Comparison__RightAssignment_1_1)
{ after(grammarAccess.getComparisonAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Comparison__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comparison__Group_1_0__0__Impl
	rule__Comparison__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getExpressionLeftAction_1_0_0()); }
(

)
{ after(grammarAccess.getComparisonAccess().getExpressionLeftAction_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comparison__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getOpAssignment_1_0_1()); }
(rule__Comparison__OpAssignment_1_0_1)
{ after(grammarAccess.getComparisonAccess().getOpAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Addition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group__0__Impl
	rule__Addition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0()); }
	ruleMultiplication
{ after(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getGroup_1()); }
(rule__Addition__Group_1__0)*
{ after(grammarAccess.getAdditionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Addition__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group_1__0__Impl
	rule__Addition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getGroup_1_0()); }
(rule__Addition__Group_1_0__0)
{ after(grammarAccess.getAdditionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getRightAssignment_1_1()); }
(rule__Addition__RightAssignment_1_1)
{ after(grammarAccess.getAdditionAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Addition__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group_1_0__0__Impl
	rule__Addition__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getExpressionLeftAction_1_0_0()); }
(

)
{ after(grammarAccess.getAdditionAccess().getExpressionLeftAction_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getOpAssignment_1_0_1()); }
(rule__Addition__OpAssignment_1_0_1)
{ after(grammarAccess.getAdditionAccess().getOpAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Multiplication__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group__0__Impl
	rule__Multiplication__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getBinaryParserRuleCall_0()); }
	ruleBinary
{ after(grammarAccess.getMultiplicationAccess().getBinaryParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getGroup_1()); }
(rule__Multiplication__Group_1__0)*
{ after(grammarAccess.getMultiplicationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Multiplication__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group_1__0__Impl
	rule__Multiplication__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getGroup_1_0()); }
(rule__Multiplication__Group_1_0__0)
{ after(grammarAccess.getMultiplicationAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getRightAssignment_1_1()); }
(rule__Multiplication__RightAssignment_1_1)
{ after(grammarAccess.getMultiplicationAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Multiplication__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group_1_0__0__Impl
	rule__Multiplication__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getExpressionLeftAction_1_0_0()); }
(

)
{ after(grammarAccess.getMultiplicationAccess().getExpressionLeftAction_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getOpAssignment_1_0_1()); }
(rule__Multiplication__OpAssignment_1_0_1)
{ after(grammarAccess.getMultiplicationAccess().getOpAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Binary__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Binary__Group__0__Impl
	rule__Binary__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryAccess().getUnitParserRuleCall_0()); }
	ruleUnit
{ after(grammarAccess.getBinaryAccess().getUnitParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Binary__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Binary__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryAccess().getGroup_1()); }
(rule__Binary__Group_1__0)*
{ after(grammarAccess.getBinaryAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Binary__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Binary__Group_1__0__Impl
	rule__Binary__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryAccess().getGroup_1_0()); }
(rule__Binary__Group_1_0__0)
{ after(grammarAccess.getBinaryAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Binary__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Binary__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryAccess().getRightAssignment_1_1()); }
(rule__Binary__RightAssignment_1_1)
{ after(grammarAccess.getBinaryAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Binary__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Binary__Group_1_0__0__Impl
	rule__Binary__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryAccess().getBinaryLeftAction_1_0_0()); }
(

)
{ after(grammarAccess.getBinaryAccess().getBinaryLeftAction_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Binary__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Binary__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryAccess().getOpAssignment_1_0_1()); }
(rule__Binary__OpAssignment_1_0_1)
{ after(grammarAccess.getBinaryAccess().getOpAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Unit__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unit__Group__0__Impl
	rule__Unit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getUnaryParserRuleCall_0()); }
	ruleUnary
{ after(grammarAccess.getUnitAccess().getUnaryParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unit__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getGroup_1()); }
(rule__Unit__Group_1__0)?
{ after(grammarAccess.getUnitAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Unit__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unit__Group_1__0__Impl
	rule__Unit__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getGroup_1_0()); }
(rule__Unit__Group_1_0__0)
{ after(grammarAccess.getUnitAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unit__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getRightAssignment_1_1()); }
(rule__Unit__RightAssignment_1_1)
{ after(grammarAccess.getUnitAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Unit__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unit__Group_1_0__0__Impl
	rule__Unit__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getUnitLeftAction_1_0_0()); }
(

)
{ after(grammarAccess.getUnitAccess().getUnitLeftAction_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unit__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getOpAssignment_1_0_1()); }
(rule__Unit__OpAssignment_1_0_1)
{ after(grammarAccess.getUnitAccess().getOpAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Unary__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unary__Group_1__0__Impl
	rule__Unary__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryAccess().getUnaryAction_1_0()); }
(

)
{ after(grammarAccess.getUnaryAccess().getUnaryAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Unary__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unary__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryAccess().getAlternatives_1_1()); }
(rule__Unary__Alternatives_1_1)
{ after(grammarAccess.getUnaryAccess().getAlternatives_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Unary__Group_1_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unary__Group_1_1_0__0__Impl
	rule__Unary__Group_1_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__Group_1_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryAccess().getOpAssignment_1_1_0_0()); }
(rule__Unary__OpAssignment_1_1_0_0)
{ after(grammarAccess.getUnaryAccess().getOpAssignment_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Unary__Group_1_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unary__Group_1_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__Group_1_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryAccess().getRightAssignment_1_1_0_1()); }
(rule__Unary__RightAssignment_1_1_0_1)
{ after(grammarAccess.getUnaryAccess().getRightAssignment_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Unary__Group_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unary__Group_1_1_1__0__Impl
	rule__Unary__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__Group_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryAccess().getOpAssignment_1_1_1_0()); }
(rule__Unary__OpAssignment_1_1_1_0)
{ after(grammarAccess.getUnaryAccess().getOpAssignment_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Unary__Group_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unary__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__Group_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryAccess().getRightAssignment_1_1_1_1()); }
(rule__Unary__RightAssignment_1_1_1_1)
{ after(grammarAccess.getUnaryAccess().getRightAssignment_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Access__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Access__Group__0__Impl
	rule__Access__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Access__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessAccess().getDotParserRuleCall_0()); }
	ruleDot
{ after(grammarAccess.getAccessAccess().getDotParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Access__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Access__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Access__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessAccess().getGroup_1()); }
(rule__Access__Group_1__0)*
{ after(grammarAccess.getAccessAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Access__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Access__Group_1__0__Impl
	rule__Access__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Access__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessAccess().getGroup_1_0()); }
(rule__Access__Group_1_0__0)
{ after(grammarAccess.getAccessAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Access__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Access__Group_1__1__Impl
	rule__Access__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Access__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessAccess().getArgsAssignment_1_1()); }
(rule__Access__ArgsAssignment_1_1)
{ after(grammarAccess.getAccessAccess().getArgsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Access__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Access__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Access__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessAccess().getRightSquareBracketKeyword_1_2()); }

	']' 

{ after(grammarAccess.getAccessAccess().getRightSquareBracketKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Access__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Access__Group_1_0__0__Impl
	rule__Access__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Access__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessAccess().getAccessLeftAction_1_0_0()); }
(

)
{ after(grammarAccess.getAccessAccess().getAccessLeftAction_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Access__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Access__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Access__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessAccess().getLeftSquareBracketKeyword_1_0_1()); }

	'[' 

{ after(grammarAccess.getAccessAccess().getLeftSquareBracketKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Dot__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Dot__Group__0__Impl
	rule__Dot__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Dot__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDotAccess().getPrimaryParserRuleCall_0()); }
	rulePrimary
{ after(grammarAccess.getDotAccess().getPrimaryParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Dot__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Dot__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Dot__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDotAccess().getGroup_1()); }
(rule__Dot__Group_1__0)*
{ after(grammarAccess.getDotAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Dot__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Dot__Group_1__0__Impl
	rule__Dot__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Dot__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDotAccess().getDotLeftAction_1_0()); }
(

)
{ after(grammarAccess.getDotAccess().getDotLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Dot__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Dot__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Dot__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDotAccess().getGroup_1_1()); }
(rule__Dot__Group_1_1__0)
{ after(grammarAccess.getDotAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Dot__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Dot__Group_1_1__0__Impl
	rule__Dot__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Dot__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDotAccess().getOpAssignment_1_1_0()); }
(rule__Dot__OpAssignment_1_1_0)
{ after(grammarAccess.getDotAccess().getOpAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Dot__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Dot__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Dot__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDotAccess().getRightAssignment_1_1_1()); }
(rule__Dot__RightAssignment_1_1_1)
{ after(grammarAccess.getDotAccess().getRightAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Primary__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_2__0__Impl
	rule__Primary__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_2__1__Impl
	rule__Primary__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getExpressionParserRuleCall_2_1()); }
	ruleExpression
{ after(grammarAccess.getPrimaryAccess().getExpressionParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_2_2()); }

	')' 

{ after(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Primary__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_3__0__Impl
	rule__Primary__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_3_0()); }

	'(' 

{ after(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_3__1__Impl
	rule__Primary__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getParametersAction_3_1()); }
(

)
{ after(grammarAccess.getPrimaryAccess().getParametersAction_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_3__2__Impl
	rule__Primary__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getParamsAssignment_3_2()); }
(rule__Primary__ParamsAssignment_3_2)?
{ after(grammarAccess.getPrimaryAccess().getParamsAssignment_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_3_3()); }

	')' 

{ after(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Primary__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_4__0__Impl
	rule__Primary__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getLeftSquareBracketKeyword_4_0()); }

	'[' 

{ after(grammarAccess.getPrimaryAccess().getLeftSquareBracketKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_4__1__Impl
	rule__Primary__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getArrayAction_4_1()); }
(

)
{ after(grammarAccess.getPrimaryAccess().getArrayAction_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_4__2__Impl
	rule__Primary__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getExprsAssignment_4_2()); }
(rule__Primary__ExprsAssignment_4_2)?
{ after(grammarAccess.getPrimaryAccess().getExprsAssignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getRightSquareBracketKeyword_4_3()); }

	']' 

{ after(grammarAccess.getPrimaryAccess().getRightSquareBracketKeyword_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Primary__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_5__0__Impl
	rule__Primary__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getLeftCurlyBracketKeyword_5_0()); }

	'{' 

{ after(grammarAccess.getPrimaryAccess().getLeftCurlyBracketKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_5__1__Impl
	rule__Primary__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getPointAction_5_1()); }
(

)
{ after(grammarAccess.getPrimaryAccess().getPointAction_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_5__2__Impl
	rule__Primary__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getLeftAssignment_5_2()); }
(rule__Primary__LeftAssignment_5_2)
{ after(grammarAccess.getPrimaryAccess().getLeftAssignment_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_5__3__Impl
	rule__Primary__Group_5__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_5__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getOpAssignment_5_3()); }
(rule__Primary__OpAssignment_5_3)
{ after(grammarAccess.getPrimaryAccess().getOpAssignment_5_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_5__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_5__4__Impl
	rule__Primary__Group_5__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_5__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getRightAssignment_5_4()); }
(rule__Primary__RightAssignment_5_4)
{ after(grammarAccess.getPrimaryAccess().getRightAssignment_5_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_5__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_5__5__Impl
	rule__Primary__Group_5__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_5__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getGroup_5_5()); }
(rule__Primary__Group_5_5__0)?
{ after(grammarAccess.getPrimaryAccess().getGroup_5_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_5__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_5__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_5__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getRightCurlyBracketKeyword_5_6()); }

	'}' 

{ after(grammarAccess.getPrimaryAccess().getRightCurlyBracketKeyword_5_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Primary__Group_5_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_5_5__0__Impl
	rule__Primary__Group_5_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_5_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getCommaKeyword_5_5_0()); }

	',' 

{ after(grammarAccess.getPrimaryAccess().getCommaKeyword_5_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_5_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_5_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_5_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getZAssignment_5_5_1()); }
(rule__Primary__ZAssignment_5_5_1)
{ after(grammarAccess.getPrimaryAccess().getZAssignment_5_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Function__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__0__Impl
	rule__Function__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getFunctionAction_0()); }
(

)
{ after(grammarAccess.getFunctionAccess().getFunctionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__1__Impl
	rule__Function__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getOpAssignment_1()); }
(rule__Function__OpAssignment_1)
{ after(grammarAccess.getFunctionAccess().getOpAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__2__Impl
	rule__Function__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__3__Impl
	rule__Function__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getArgsAssignment_3()); }
(rule__Function__ArgsAssignment_3)
{ after(grammarAccess.getFunctionAccess().getArgsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Parameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getParameterAction_0()); }
(

)
{ after(grammarAccess.getParameterAccess().getParameterAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__1__Impl
	rule__Parameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getAlternatives_1()); }
(rule__Parameter__Alternatives_1)
{ after(grammarAccess.getParameterAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getRightAssignment_2()); }
(rule__Parameter__RightAssignment_2)
{ after(grammarAccess.getParameterAccess().getRightAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Parameter__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group_1_1__0__Impl
	rule__Parameter__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getLeftAssignment_1_1_0()); }
(rule__Parameter__LeftAssignment_1_1_0)
{ after(grammarAccess.getParameterAccess().getLeftAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getColonKeyword_1_1_1()); }

	':' 

{ after(grammarAccess.getParameterAccess().getColonKeyword_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExpressionList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionList__Group__0__Impl
	rule__ExpressionList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionListAccess().getExprsAssignment_0()); }
(rule__ExpressionList__ExprsAssignment_0)
{ after(grammarAccess.getExpressionListAccess().getExprsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionListAccess().getGroup_1()); }
(rule__ExpressionList__Group_1__0)*
{ after(grammarAccess.getExpressionListAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExpressionList__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionList__Group_1__0__Impl
	rule__ExpressionList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionListAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getExpressionListAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionList__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionListAccess().getExprsAssignment_1_1()); }
(rule__ExpressionList__ExprsAssignment_1_1)
{ after(grammarAccess.getExpressionListAccess().getExprsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParameterList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterList__Group__0__Impl
	rule__ParameterList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterListAccess().getExprsAssignment_0()); }
(rule__ParameterList__ExprsAssignment_0)
{ after(grammarAccess.getParameterListAccess().getExprsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterListAccess().getGroup_1()); }
(rule__ParameterList__Group_1__0)*
{ after(grammarAccess.getParameterListAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParameterList__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterList__Group_1__0__Impl
	rule__ParameterList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterListAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getParameterListAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterListAccess().getExprsAssignment_1_1()); }
(rule__ParameterList__ExprsAssignment_1_1)
{ after(grammarAccess.getParameterListAccess().getExprsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnitName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnitName__Group__0__Impl
	rule__UnitName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitNameAccess().getUnitNameAction_0()); }
(

)
{ after(grammarAccess.getUnitNameAccess().getUnitNameAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnitName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnitName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitNameAccess().getOpAssignment_1()); }
(rule__UnitName__OpAssignment_1)
{ after(grammarAccess.getUnitNameAccess().getOpAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariableRef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableRef__Group__0__Impl
	rule__VariableRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableRef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableRefAccess().getVariableRefAction_0()); }
(

)
{ after(grammarAccess.getVariableRefAccess().getVariableRefAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableRef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableRef__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableRef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableRefAccess().getRefAssignment_1()); }
(rule__VariableRef__RefAssignment_1)
{ after(grammarAccess.getVariableRefAccess().getRefAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_0__0__Impl
	rule__TerminalExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getIntLiteralAction_0_0()); }
(

)
{ after(grammarAccess.getTerminalExpressionAccess().getIntLiteralAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getOpAssignment_0_1()); }
(rule__TerminalExpression__OpAssignment_0_1)
{ after(grammarAccess.getTerminalExpressionAccess().getOpAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_1__0__Impl
	rule__TerminalExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getDoubleLiteralAction_1_0()); }
(

)
{ after(grammarAccess.getTerminalExpressionAccess().getDoubleLiteralAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getOpAssignment_1_1()); }
(rule__TerminalExpression__OpAssignment_1_1)
{ after(grammarAccess.getTerminalExpressionAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_2__0__Impl
	rule__TerminalExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getColorLiteralAction_2_0()); }
(

)
{ after(grammarAccess.getTerminalExpressionAccess().getColorLiteralAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getOpAssignment_2_1()); }
(rule__TerminalExpression__OpAssignment_2_1)
{ after(grammarAccess.getTerminalExpressionAccess().getOpAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpression__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_3__0__Impl
	rule__TerminalExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getStringLiteralAction_3_0()); }
(

)
{ after(grammarAccess.getTerminalExpressionAccess().getStringLiteralAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getOpAssignment_3_1()); }
(rule__TerminalExpression__OpAssignment_3_1)
{ after(grammarAccess.getTerminalExpressionAccess().getOpAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpression__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_4__0__Impl
	rule__TerminalExpression__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getBooleanLiteralAction_4_0()); }
(

)
{ after(grammarAccess.getTerminalExpressionAccess().getBooleanLiteralAction_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getOpAssignment_4_1()); }
(rule__TerminalExpression__OpAssignment_4_1)
{ after(grammarAccess.getTerminalExpressionAccess().getOpAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Model__NameAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getNameIDTerminalRuleCall_0_1_0()); }
	RULE_ID{ after(grammarAccess.getModelAccess().getNameIDTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ImportsAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getImportsImportParserRuleCall_0_2_0()); }
	ruleImport{ after(grammarAccess.getModelAccess().getImportsImportParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__StatementsAssignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getStatementsStatementParserRuleCall_0_3_0()); }
	ruleStatement{ after(grammarAccess.getModelAccess().getStatementsStatementParserRuleCall_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__NameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_1_0()); }
	RULE_ID{ after(grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ExprAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getExprExpressionParserRuleCall_1_3_0()); }
	ruleExpression{ after(grammarAccess.getModelAccess().getExprExpressionParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportURIAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__FunctionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquationAccess().getFunctionFunctionParserRuleCall_0_0()); }
	ruleFunction{ after(grammarAccess.getEquationAccess().getFunctionFunctionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__KeyAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquationAccess().getKeyEqualsSignKeyword_1_0()); }
(
{ before(grammarAccess.getEquationAccess().getKeyEqualsSignKeyword_1_0()); }

	'=' 

{ after(grammarAccess.getEquationAccess().getKeyEqualsSignKeyword_1_0()); }
)

{ after(grammarAccess.getEquationAccess().getKeyEqualsSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__ExprAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquationAccess().getExprExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getEquationAccess().getExprExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__KeyAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getKeyIfKeyword_0_0()); }
(
{ before(grammarAccess.getIfStatementAccess().getKeyIfKeyword_0_0()); }

	'if' 

{ after(grammarAccess.getIfStatementAccess().getKeyIfKeyword_0_0()); }
)

{ after(grammarAccess.getIfStatementAccess().getKeyIfKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__ExprAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getExprExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getIfStatementAccess().getExprExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__BlockAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getBlockBlockParserRuleCall_3_0()); }
	ruleBlock{ after(grammarAccess.getIfStatementAccess().getBlockBlockParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__ElseAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getElseAlternatives_4_1_0()); }
(rule__IfStatement__ElseAlternatives_4_1_0)
{ after(grammarAccess.getIfStatementAccess().getElseAlternatives_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassicStatement__KeyAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassicStatementAccess().getKeyBuiltInStatementKeyParserRuleCall_0_0()); }
	ruleBuiltInStatementKey{ after(grammarAccess.getClassicStatementAccess().getKeyBuiltInStatementKeyParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassicStatement__ExprAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassicStatementAccess().getExprExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getClassicStatementAccess().getExprExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassicStatement__FacetsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassicStatementAccess().getFacetsFacetParserRuleCall_3_0()); }
	ruleFacet{ after(grammarAccess.getClassicStatementAccess().getFacetsFacetParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassicStatement__BlockAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassicStatementAccess().getBlockBlockParserRuleCall_4_0_0()); }
	ruleBlock{ after(grammarAccess.getClassicStatementAccess().getBlockBlockParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionStatement__KeyAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionStatementAccess().getKeyIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getDefinitionStatementAccess().getKeyIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionStatement__OfAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionStatementAccess().getOfContentsParserRuleCall_1_0()); }
	ruleContents{ after(grammarAccess.getDefinitionStatementAccess().getOfContentsParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionStatement__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionStatementAccess().getNameAlternatives_2_0()); }
(rule__DefinitionStatement__NameAlternatives_2_0)
{ after(grammarAccess.getDefinitionStatementAccess().getNameAlternatives_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionStatement__ArgsAssignment_3_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionStatementAccess().getArgsActionArgumentsParserRuleCall_3_1_0_0()); }
	ruleActionArguments{ after(grammarAccess.getDefinitionStatementAccess().getArgsActionArgumentsParserRuleCall_3_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionStatement__ParamsAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionStatementAccess().getParamsParametersParserRuleCall_3_1_1_0()); }
	ruleParameters{ after(grammarAccess.getDefinitionStatementAccess().getParamsParametersParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionStatement__FacetsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionStatementAccess().getFacetsFacetParserRuleCall_4_0()); }
	ruleFacet{ after(grammarAccess.getDefinitionStatementAccess().getFacetsFacetParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionStatement__BlockAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionStatementAccess().getBlockBlockParserRuleCall_5_0_0()); }
	ruleBlock{ after(grammarAccess.getDefinitionStatementAccess().getBlockBlockParserRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Contents__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContentsAccess().getTypeIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getContentsAccess().getTypeIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Contents__Type2Assignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContentsAccess().getType2IDTerminalRuleCall_2_1_0()); }
	RULE_ID{ after(grammarAccess.getContentsAccess().getType2IDTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__KeyAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStatementAccess().getKeyReturnKeyword_0_0()); }
(
{ before(grammarAccess.getReturnStatementAccess().getKeyReturnKeyword_0_0()); }

	'return' 

{ after(grammarAccess.getReturnStatementAccess().getKeyReturnKeyword_0_0()); }
)

{ after(grammarAccess.getReturnStatementAccess().getKeyReturnKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__ExprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStatementAccess().getExprExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getReturnStatementAccess().getExprExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentStatement__ExprAssignment_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentStatementAccess().getExprExpressionParserRuleCall_0_0_0_0()); }
	ruleExpression{ after(grammarAccess.getAssignmentStatementAccess().getExprExpressionParserRuleCall_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentStatement__KeyAssignment_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentStatementAccess().getKeyAlternatives_0_0_1_0()); }
(rule__AssignmentStatement__KeyAlternatives_0_0_1_0)
{ after(grammarAccess.getAssignmentStatementAccess().getKeyAlternatives_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentStatement__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentStatementAccess().getValueExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getAssignmentStatementAccess().getValueExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentStatement__FacetsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentStatementAccess().getFacetsFacetParserRuleCall_2_0()); }
	ruleFacet{ after(grammarAccess.getAssignmentStatementAccess().getFacetsFacetParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__ParamsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParametersAccess().getParamsParameterListParserRuleCall_1_0()); }
	ruleParameterList{ after(grammarAccess.getParametersAccess().getParamsParameterListParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActionArguments__ArgsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionArgumentsAccess().getArgsArgumentDefinitionParserRuleCall_0_0()); }
	ruleArgumentDefinition{ after(grammarAccess.getActionArgumentsAccess().getArgsArgumentDefinitionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActionArguments__ArgsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionArgumentsAccess().getArgsArgumentDefinitionParserRuleCall_1_1_0()); }
	ruleArgumentDefinition{ after(grammarAccess.getActionArgumentsAccess().getArgsArgumentDefinitionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentDefinition__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentDefinitionAccess().getTypeIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getArgumentDefinitionAccess().getTypeIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentDefinition__OfAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentDefinitionAccess().getOfContentsParserRuleCall_1_0()); }
	ruleContents{ after(grammarAccess.getArgumentDefinitionAccess().getOfContentsParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentDefinition__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentDefinitionAccess().getNameAlternatives_2_0()); }
(rule__ArgumentDefinition__NameAlternatives_2_0)
{ after(grammarAccess.getArgumentDefinitionAccess().getNameAlternatives_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentDefinition__DefaultAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentDefinitionAccess().getDefaultExpressionParserRuleCall_3_1_0()); }
	ruleExpression{ after(grammarAccess.getArgumentDefinitionAccess().getDefaultExpressionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassicFacet__KeyAssignment_0_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassicFacetAccess().getKeyIDTerminalRuleCall_0_0_0_0_0()); }
	RULE_ID{ after(grammarAccess.getClassicFacetAccess().getKeyIDTerminalRuleCall_0_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassicFacet__KeyAssignment_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassicFacetAccess().getKeyLessThanSignHyphenMinusKeyword_0_0_1_0()); }
(
{ before(grammarAccess.getClassicFacetAccess().getKeyLessThanSignHyphenMinusKeyword_0_0_1_0()); }

	'<-' 

{ after(grammarAccess.getClassicFacetAccess().getKeyLessThanSignHyphenMinusKeyword_0_0_1_0()); }
)

{ after(grammarAccess.getClassicFacetAccess().getKeyLessThanSignHyphenMinusKeyword_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassicFacet__ExprAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassicFacetAccess().getExprExpressionParserRuleCall_0_1_0()); }
	ruleExpression{ after(grammarAccess.getClassicFacetAccess().getExprExpressionParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassicFacet__KeyAssignment_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassicFacetAccess().getKeyDefinitionFacetKeyParserRuleCall_1_0_0_0()); }
	ruleDefinitionFacetKey{ after(grammarAccess.getClassicFacetAccess().getKeyDefinitionFacetKeyParserRuleCall_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassicFacet__NameAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassicFacetAccess().getNameAlternatives_1_0_1_0()); }
(rule__ClassicFacet__NameAlternatives_1_0_1_0)
{ after(grammarAccess.getClassicFacetAccess().getNameAlternatives_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassicFacet__OfAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassicFacetAccess().getOfContentsParserRuleCall_1_1_0()); }
	ruleContents{ after(grammarAccess.getClassicFacetAccess().getOfContentsParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionFacet__KeyAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionFacetAccess().getKeyFunctionKeyword_0_0_0()); }
(
{ before(grammarAccess.getFunctionFacetAccess().getKeyFunctionKeyword_0_0_0()); }

	'function:' 

{ after(grammarAccess.getFunctionFacetAccess().getKeyFunctionKeyword_0_0_0()); }
)

{ after(grammarAccess.getFunctionFacetAccess().getKeyFunctionKeyword_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionFacet__KeyAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionFacetAccess().getKeyHyphenMinusGreaterThanSignKeyword_0_1_0()); }
(
{ before(grammarAccess.getFunctionFacetAccess().getKeyHyphenMinusGreaterThanSignKeyword_0_1_0()); }

	'->' 

{ after(grammarAccess.getFunctionFacetAccess().getKeyHyphenMinusGreaterThanSignKeyword_0_1_0()); }
)

{ after(grammarAccess.getFunctionFacetAccess().getKeyHyphenMinusGreaterThanSignKeyword_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionFacet__ExprAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionFacetAccess().getExprExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getFunctionFacetAccess().getExprExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Block__FunctionAssignment_2_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getFunctionExpressionParserRuleCall_2_0_0_0_0()); }
	ruleExpression{ after(grammarAccess.getBlockAccess().getFunctionExpressionParserRuleCall_2_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Block__StatementsAssignment_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getStatementsStatementParserRuleCall_2_1_0_0()); }
	ruleStatement{ after(grammarAccess.getBlockAccess().getStatementsStatementParserRuleCall_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentPair__OpAssignment_0_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentPairAccess().getOpAlternatives_0_0_0_0_0()); }
(rule__ArgumentPair__OpAlternatives_0_0_0_0_0)
{ after(grammarAccess.getArgumentPairAccess().getOpAlternatives_0_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentPair__OpAssignment_0_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentPairAccess().getOpDefinitionFacetKeyParserRuleCall_0_0_1_0_0()); }
	ruleDefinitionFacetKey{ after(grammarAccess.getArgumentPairAccess().getOpDefinitionFacetKeyParserRuleCall_0_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentPair__RightAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentPairAccess().getRightIfParserRuleCall_1_0()); }
	ruleIf{ after(grammarAccess.getArgumentPairAccess().getRightIfParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Pair__OpAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPairAccess().getOpColonColonKeyword_1_0_1_0()); }
(
{ before(grammarAccess.getPairAccess().getOpColonColonKeyword_1_0_1_0()); }

	'::' 

{ after(grammarAccess.getPairAccess().getOpColonColonKeyword_1_0_1_0()); }
)

{ after(grammarAccess.getPairAccess().getOpColonColonKeyword_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Pair__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPairAccess().getRightIfParserRuleCall_1_1_0()); }
	ruleIf{ after(grammarAccess.getPairAccess().getRightIfParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__If__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getOpQuestionMarkKeyword_1_1_0()); }
(
{ before(grammarAccess.getIfAccess().getOpQuestionMarkKeyword_1_1_0()); }

	'?' 

{ after(grammarAccess.getIfAccess().getOpQuestionMarkKeyword_1_1_0()); }
)

{ after(grammarAccess.getIfAccess().getOpQuestionMarkKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__If__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getRightOrParserRuleCall_1_2_0()); }
	ruleOr{ after(grammarAccess.getIfAccess().getRightOrParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__If__IfFalseAssignment_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getIfFalseOrParserRuleCall_1_4_0()); }
	ruleOr{ after(grammarAccess.getIfAccess().getIfFalseOrParserRuleCall_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Or__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getOpOrKeyword_1_1_0()); }
(
{ before(grammarAccess.getOrAccess().getOpOrKeyword_1_1_0()); }

	'or' 

{ after(grammarAccess.getOrAccess().getOpOrKeyword_1_1_0()); }
)

{ after(grammarAccess.getOrAccess().getOpOrKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Or__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getRightAndParserRuleCall_1_2_0()); }
	ruleAnd{ after(grammarAccess.getOrAccess().getRightAndParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__And__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAccess().getOpAndKeyword_1_1_0()); }
(
{ before(grammarAccess.getAndAccess().getOpAndKeyword_1_1_0()); }

	'and' 

{ after(grammarAccess.getAndAccess().getOpAndKeyword_1_1_0()); }
)

{ after(grammarAccess.getAndAccess().getOpAndKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__And__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAccess().getRightComparisonParserRuleCall_1_2_0()); }
	ruleComparison{ after(grammarAccess.getAndAccess().getRightComparisonParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__OpAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getOpAlternatives_1_0_1_0()); }
(rule__Comparison__OpAlternatives_1_0_1_0)
{ after(grammarAccess.getComparisonAccess().getOpAlternatives_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getRightAdditionParserRuleCall_1_1_0()); }
	ruleAddition{ after(grammarAccess.getComparisonAccess().getRightAdditionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__OpAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getOpAlternatives_1_0_1_0()); }
(rule__Addition__OpAlternatives_1_0_1_0)
{ after(grammarAccess.getAdditionAccess().getOpAlternatives_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getRightMultiplicationParserRuleCall_1_1_0()); }
	ruleMultiplication{ after(grammarAccess.getAdditionAccess().getRightMultiplicationParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__OpAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getOpAlternatives_1_0_1_0()); }
(rule__Multiplication__OpAlternatives_1_0_1_0)
{ after(grammarAccess.getMultiplicationAccess().getOpAlternatives_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getRightBinaryParserRuleCall_1_1_0()); }
	ruleBinary{ after(grammarAccess.getMultiplicationAccess().getRightBinaryParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__OpAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryAccess().getOpIDTerminalRuleCall_1_0_1_0()); }
	RULE_ID{ after(grammarAccess.getBinaryAccess().getOpIDTerminalRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryAccess().getRightUnitParserRuleCall_1_1_0()); }
	ruleUnit{ after(grammarAccess.getBinaryAccess().getRightUnitParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__OpAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getOpDegreeSignKeyword_1_0_1_0()); }
(
{ before(grammarAccess.getUnitAccess().getOpDegreeSignKeyword_1_0_1_0()); }

	'\u00B0' 

{ after(grammarAccess.getUnitAccess().getOpDegreeSignKeyword_1_0_1_0()); }
)

{ after(grammarAccess.getUnitAccess().getOpDegreeSignKeyword_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getRightUnitNameParserRuleCall_1_1_0()); }
	ruleUnitName{ after(grammarAccess.getUnitAccess().getRightUnitNameParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__OpAssignment_1_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryAccess().getOpDegreeSignKeyword_1_1_0_0_0()); }
(
{ before(grammarAccess.getUnaryAccess().getOpDegreeSignKeyword_1_1_0_0_0()); }

	'\u00B0' 

{ after(grammarAccess.getUnaryAccess().getOpDegreeSignKeyword_1_1_0_0_0()); }
)

{ after(grammarAccess.getUnaryAccess().getOpDegreeSignKeyword_1_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__RightAssignment_1_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryAccess().getRightUnitNameParserRuleCall_1_1_0_1_0()); }
	ruleUnitName{ after(grammarAccess.getUnaryAccess().getRightUnitNameParserRuleCall_1_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__OpAssignment_1_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryAccess().getOpAlternatives_1_1_1_0_0()); }
(rule__Unary__OpAlternatives_1_1_1_0_0)
{ after(grammarAccess.getUnaryAccess().getOpAlternatives_1_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__RightAssignment_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryAccess().getRightUnaryParserRuleCall_1_1_1_1_0()); }
	ruleUnary{ after(grammarAccess.getUnaryAccess().getRightUnaryParserRuleCall_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Access__ArgsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessAccess().getArgsExpressionListParserRuleCall_1_1_0()); }
	ruleExpressionList{ after(grammarAccess.getAccessAccess().getArgsExpressionListParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Dot__OpAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDotAccess().getOpFullStopKeyword_1_1_0_0()); }
(
{ before(grammarAccess.getDotAccess().getOpFullStopKeyword_1_1_0_0()); }

	'.' 

{ after(grammarAccess.getDotAccess().getOpFullStopKeyword_1_1_0_0()); }
)

{ after(grammarAccess.getDotAccess().getOpFullStopKeyword_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Dot__RightAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDotAccess().getRightPrimaryParserRuleCall_1_1_1_0()); }
	rulePrimary{ after(grammarAccess.getDotAccess().getRightPrimaryParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ParamsAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getParamsParameterListParserRuleCall_3_2_0()); }
	ruleParameterList{ after(grammarAccess.getPrimaryAccess().getParamsParameterListParserRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ExprsAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getExprsExpressionListParserRuleCall_4_2_0()); }
	ruleExpressionList{ after(grammarAccess.getPrimaryAccess().getExprsExpressionListParserRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__LeftAssignment_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getLeftExpressionParserRuleCall_5_2_0()); }
	ruleExpression{ after(grammarAccess.getPrimaryAccess().getLeftExpressionParserRuleCall_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__OpAssignment_5_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getOpCommaKeyword_5_3_0()); }
(
{ before(grammarAccess.getPrimaryAccess().getOpCommaKeyword_5_3_0()); }

	',' 

{ after(grammarAccess.getPrimaryAccess().getOpCommaKeyword_5_3_0()); }
)

{ after(grammarAccess.getPrimaryAccess().getOpCommaKeyword_5_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__RightAssignment_5_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getRightExpressionParserRuleCall_5_4_0()); }
	ruleExpression{ after(grammarAccess.getPrimaryAccess().getRightExpressionParserRuleCall_5_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ZAssignment_5_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getZExpressionParserRuleCall_5_5_1_0()); }
	ruleExpression{ after(grammarAccess.getPrimaryAccess().getZExpressionParserRuleCall_5_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__OpAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getOpIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getFunctionAccess().getOpIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__ArgsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getArgsExpressionListParserRuleCall_3_0()); }
	ruleExpressionList{ after(grammarAccess.getFunctionAccess().getArgsExpressionListParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__BuiltInFacetKeyAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getBuiltInFacetKeyDefinitionFacetKeyParserRuleCall_1_0_0()); }
	ruleDefinitionFacetKey{ after(grammarAccess.getParameterAccess().getBuiltInFacetKeyDefinitionFacetKeyParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__LeftAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getLeftVariableRefParserRuleCall_1_1_0_0()); }
	ruleVariableRef{ after(grammarAccess.getParameterAccess().getLeftVariableRefParserRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__RightAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getRightExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getParameterAccess().getRightExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__ExprsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionListAccess().getExprsExpressionParserRuleCall_0_0()); }
	ruleExpression{ after(grammarAccess.getExpressionListAccess().getExprsExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__ExprsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionListAccess().getExprsExpressionParserRuleCall_1_1_0()); }
	ruleExpression{ after(grammarAccess.getExpressionListAccess().getExprsExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__ExprsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterListAccess().getExprsParameterParserRuleCall_0_0()); }
	ruleParameter{ after(grammarAccess.getParameterListAccess().getExprsParameterParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__ExprsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterListAccess().getExprsParameterParserRuleCall_1_1_0()); }
	ruleParameter{ after(grammarAccess.getParameterListAccess().getExprsParameterParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnitName__OpAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitNameAccess().getOpIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getUnitNameAccess().getOpIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableRef__RefAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableRefAccess().getRefGamlVarRefCrossReference_1_0()); }
(
{ before(grammarAccess.getVariableRefAccess().getRefGamlVarRefIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getVariableRefAccess().getRefGamlVarRefIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getVariableRefAccess().getRefGamlVarRefCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__OpAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getOpINTEGERTerminalRuleCall_0_1_0()); }
	RULE_INTEGER{ after(grammarAccess.getTerminalExpressionAccess().getOpINTEGERTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getOpDOUBLETerminalRuleCall_1_1_0()); }
	RULE_DOUBLE{ after(grammarAccess.getTerminalExpressionAccess().getOpDOUBLETerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__OpAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getOpCOLORTerminalRuleCall_2_1_0()); }
	RULE_COLOR{ after(grammarAccess.getTerminalExpressionAccess().getOpCOLORTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__OpAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getOpSTRINGTerminalRuleCall_3_1_0()); }
	RULE_STRING{ after(grammarAccess.getTerminalExpressionAccess().getOpSTRINGTerminalRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__OpAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getOpBOOLEANTerminalRuleCall_4_1_0()); }
	RULE_BOOLEAN{ after(grammarAccess.getTerminalExpressionAccess().getOpBOOLEANTerminalRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_INTEGER : ('0'|'1'..'9' ('0'..'9')*);

RULE_BOOLEAN : ('true'|'false');

RULE_ID : ('a'..'z'|'A'..'Z'|'_'|'$') ('a'..'z'|'A'..'Z'|'_'|'$'|'0'..'9')*;

RULE_COLOR : '#' ('0'..'9'|'A'..'F')+;

RULE_DOUBLE : ('1'..'9' ('0'..'9')* ('.' ('0'..'9')+)? (('E'|'e') ('+'|'-')? ('0'..'9')+)?|'0' ('.' ('0'..'9')+)? (('E'|'e') ('+'|'-')? ('0'..'9')+)?);

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


