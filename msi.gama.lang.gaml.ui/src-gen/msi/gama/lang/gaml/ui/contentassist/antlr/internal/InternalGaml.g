/*
* generated by Xtext
*/
grammar InternalGaml;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package msi.gama.lang.gaml.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package msi.gama.lang.gaml.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import msi.gama.lang.gaml.services.GamlGrammarAccess;

}

@parser::members {
 
 	private GamlGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(GamlGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)
{ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport 
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBuiltIn
entryRuleBuiltIn 
:
{ before(grammarAccess.getBuiltInRule()); }
	 ruleBuiltIn
{ after(grammarAccess.getBuiltInRule()); } 
	 EOF 
;

// Rule BuiltIn
ruleBuiltIn
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBuiltInAccess().getAlternatives()); }
(rule__BuiltIn__Alternatives)
{ after(grammarAccess.getBuiltInAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatement
entryRuleStatement 
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementAccess().getAlternatives()); }
(rule__Statement__Alternatives)
{ after(grammarAccess.getStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassicStatement
entryRuleClassicStatement 
:
{ before(grammarAccess.getClassicStatementRule()); }
	 ruleClassicStatement
{ after(grammarAccess.getClassicStatementRule()); } 
	 EOF 
;

// Rule ClassicStatement
ruleClassicStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassicStatementAccess().getGroup()); }
(rule__ClassicStatement__Group__0)
{ after(grammarAccess.getClassicStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIfEval
entryRuleIfEval 
:
{ before(grammarAccess.getIfEvalRule()); }
	 ruleIfEval
{ after(grammarAccess.getIfEvalRule()); } 
	 EOF 
;

// Rule IfEval
ruleIfEval
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIfEvalAccess().getGroup()); }
(rule__IfEval__Group__0)
{ after(grammarAccess.getIfEvalAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDefinition
entryRuleDefinition 
:
{ before(grammarAccess.getDefinitionRule()); }
	 ruleDefinition
{ after(grammarAccess.getDefinitionRule()); } 
	 EOF 
;

// Rule Definition
ruleDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefinitionAccess().getGroup()); }
(rule__Definition__Group__0)
{ after(grammarAccess.getDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleGamlFacetRef
entryRuleGamlFacetRef 
:
{ before(grammarAccess.getGamlFacetRefRule()); }
	 ruleGamlFacetRef
{ after(grammarAccess.getGamlFacetRefRule()); } 
	 EOF 
;

// Rule GamlFacetRef
ruleGamlFacetRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGamlFacetRefAccess().getAlternatives()); }
(rule__GamlFacetRef__Alternatives)
{ after(grammarAccess.getGamlFacetRefAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionGamlFacetRef
entryRuleFunctionGamlFacetRef 
:
{ before(grammarAccess.getFunctionGamlFacetRefRule()); }
	 ruleFunctionGamlFacetRef
{ after(grammarAccess.getFunctionGamlFacetRefRule()); } 
	 EOF 
;

// Rule FunctionGamlFacetRef
ruleFunctionGamlFacetRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionGamlFacetRefAccess().getAlternatives()); }
(rule__FunctionGamlFacetRef__Alternatives)
{ after(grammarAccess.getFunctionGamlFacetRefAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFacetExpr
entryRuleFacetExpr 
:
{ before(grammarAccess.getFacetExprRule()); }
	 ruleFacetExpr
{ after(grammarAccess.getFacetExprRule()); } 
	 EOF 
;

// Rule FacetExpr
ruleFacetExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFacetExprAccess().getAlternatives()); }
(rule__FacetExpr__Alternatives)
{ after(grammarAccess.getFacetExprAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDefinitionFacetExpr
entryRuleDefinitionFacetExpr 
:
{ before(grammarAccess.getDefinitionFacetExprRule()); }
	 ruleDefinitionFacetExpr
{ after(grammarAccess.getDefinitionFacetExprRule()); } 
	 EOF 
;

// Rule DefinitionFacetExpr
ruleDefinitionFacetExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefinitionFacetExprAccess().getAlternatives()); }
(rule__DefinitionFacetExpr__Alternatives)
{ after(grammarAccess.getDefinitionFacetExprAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNameFacetExpr
entryRuleNameFacetExpr 
:
{ before(grammarAccess.getNameFacetExprRule()); }
	 ruleNameFacetExpr
{ after(grammarAccess.getNameFacetExprRule()); } 
	 EOF 
;

// Rule NameFacetExpr
ruleNameFacetExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNameFacetExprAccess().getGroup()); }
(rule__NameFacetExpr__Group__0)
{ after(grammarAccess.getNameFacetExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReturnsFacetExpr
entryRuleReturnsFacetExpr 
:
{ before(grammarAccess.getReturnsFacetExprRule()); }
	 ruleReturnsFacetExpr
{ after(grammarAccess.getReturnsFacetExprRule()); } 
	 EOF 
;

// Rule ReturnsFacetExpr
ruleReturnsFacetExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReturnsFacetExprAccess().getGroup()); }
(rule__ReturnsFacetExpr__Group__0)
{ after(grammarAccess.getReturnsFacetExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActionFacetExpr
entryRuleActionFacetExpr 
:
{ before(grammarAccess.getActionFacetExprRule()); }
	 ruleActionFacetExpr
{ after(grammarAccess.getActionFacetExprRule()); } 
	 EOF 
;

// Rule ActionFacetExpr
ruleActionFacetExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActionFacetExprAccess().getGroup()); }
(rule__ActionFacetExpr__Group__0)
{ after(grammarAccess.getActionFacetExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionFacetExpr
entryRuleFunctionFacetExpr 
:
{ before(grammarAccess.getFunctionFacetExprRule()); }
	 ruleFunctionFacetExpr
{ after(grammarAccess.getFunctionFacetExprRule()); } 
	 EOF 
;

// Rule FunctionFacetExpr
ruleFunctionFacetExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionFacetExprAccess().getGroup()); }
(rule__FunctionFacetExpr__Group__0)
{ after(grammarAccess.getFunctionFacetExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBlock
entryRuleBlock 
:
{ before(grammarAccess.getBlockRule()); }
	 ruleBlock
{ after(grammarAccess.getBlockRule()); } 
	 EOF 
;

// Rule Block
ruleBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBlockAccess().getGroup()); }
(rule__Block__Group__0)
{ after(grammarAccess.getBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getTernExpParserRuleCall()); }
	ruleTernExp
{ after(grammarAccess.getExpressionAccess().getTernExpParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTernExp
entryRuleTernExp 
:
{ before(grammarAccess.getTernExpRule()); }
	 ruleTernExp
{ after(grammarAccess.getTernExpRule()); } 
	 EOF 
;

// Rule TernExp
ruleTernExp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTernExpAccess().getGroup()); }
(rule__TernExp__Group__0)
{ after(grammarAccess.getTernExpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOrExp
entryRuleOrExp 
:
{ before(grammarAccess.getOrExpRule()); }
	 ruleOrExp
{ after(grammarAccess.getOrExpRule()); } 
	 EOF 
;

// Rule OrExp
ruleOrExp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOrExpAccess().getGroup()); }
(rule__OrExp__Group__0)
{ after(grammarAccess.getOrExpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAndExp
entryRuleAndExp 
:
{ before(grammarAccess.getAndExpRule()); }
	 ruleAndExp
{ after(grammarAccess.getAndExpRule()); } 
	 EOF 
;

// Rule AndExp
ruleAndExp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAndExpAccess().getGroup()); }
(rule__AndExp__Group__0)
{ after(grammarAccess.getAndExpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelational
entryRuleRelational 
:
{ before(grammarAccess.getRelationalRule()); }
	 ruleRelational
{ after(grammarAccess.getRelationalRule()); } 
	 EOF 
;

// Rule Relational
ruleRelational
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationalAccess().getGroup()); }
(rule__Relational__Group__0)
{ after(grammarAccess.getRelationalAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArgPairExpr
entryRuleArgPairExpr 
:
{ before(grammarAccess.getArgPairExprRule()); }
	 ruleArgPairExpr
{ after(grammarAccess.getArgPairExprRule()); } 
	 EOF 
;

// Rule ArgPairExpr
ruleArgPairExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArgPairExprAccess().getGroup()); }
(rule__ArgPairExpr__Group__0)
{ after(grammarAccess.getArgPairExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePairExpr
entryRulePairExpr 
:
{ before(grammarAccess.getPairExprRule()); }
	 rulePairExpr
{ after(grammarAccess.getPairExprRule()); } 
	 EOF 
;

// Rule PairExpr
rulePairExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPairExprAccess().getAlternatives()); }
(rule__PairExpr__Alternatives)
{ after(grammarAccess.getPairExprAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAddition
entryRuleAddition 
:
{ before(grammarAccess.getAdditionRule()); }
	 ruleAddition
{ after(grammarAccess.getAdditionRule()); } 
	 EOF 
;

// Rule Addition
ruleAddition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAdditionAccess().getGroup()); }
(rule__Addition__Group__0)
{ after(grammarAccess.getAdditionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultiplication
entryRuleMultiplication 
:
{ before(grammarAccess.getMultiplicationRule()); }
	 ruleMultiplication
{ after(grammarAccess.getMultiplicationRule()); } 
	 EOF 
;

// Rule Multiplication
ruleMultiplication
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultiplicationAccess().getGroup()); }
(rule__Multiplication__Group__0)
{ after(grammarAccess.getMultiplicationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGamlBinaryExpr
entryRuleGamlBinaryExpr 
:
{ before(grammarAccess.getGamlBinaryExprRule()); }
	 ruleGamlBinaryExpr
{ after(grammarAccess.getGamlBinaryExprRule()); } 
	 EOF 
;

// Rule GamlBinaryExpr
ruleGamlBinaryExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGamlBinaryExprAccess().getGroup()); }
(rule__GamlBinaryExpr__Group__0)
{ after(grammarAccess.getGamlBinaryExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGamlUnitExpr
entryRuleGamlUnitExpr 
:
{ before(grammarAccess.getGamlUnitExprRule()); }
	 ruleGamlUnitExpr
{ after(grammarAccess.getGamlUnitExprRule()); } 
	 EOF 
;

// Rule GamlUnitExpr
ruleGamlUnitExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGamlUnitExprAccess().getGroup()); }
(rule__GamlUnitExpr__Group__0)
{ after(grammarAccess.getGamlUnitExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGamlUnaryExpr
entryRuleGamlUnaryExpr 
:
{ before(grammarAccess.getGamlUnaryExprRule()); }
	 ruleGamlUnaryExpr
{ after(grammarAccess.getGamlUnaryExprRule()); } 
	 EOF 
;

// Rule GamlUnaryExpr
ruleGamlUnaryExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGamlUnaryExprAccess().getAlternatives()); }
(rule__GamlUnaryExpr__Alternatives)
{ after(grammarAccess.getGamlUnaryExprAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrePrimaryExpr
entryRulePrePrimaryExpr 
:
{ before(grammarAccess.getPrePrimaryExprRule()); }
	 rulePrePrimaryExpr
{ after(grammarAccess.getPrePrimaryExprRule()); } 
	 EOF 
;

// Rule PrePrimaryExpr
rulePrePrimaryExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrePrimaryExprAccess().getAlternatives()); }
(rule__PrePrimaryExpr__Alternatives)
{ after(grammarAccess.getPrePrimaryExprAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMemberRef
entryRuleMemberRef 
:
{ before(grammarAccess.getMemberRefRule()); }
	 ruleMemberRef
{ after(grammarAccess.getMemberRefRule()); } 
	 EOF 
;

// Rule MemberRef
ruleMemberRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMemberRefAccess().getGroup()); }
(rule__MemberRef__Group__0)
{ after(grammarAccess.getMemberRefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression 
:
{ before(grammarAccess.getPrimaryExpressionRule()); }
	 rulePrimaryExpression
{ after(grammarAccess.getPrimaryExpressionRule()); } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
(rule__PrimaryExpression__Alternatives)
{ after(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAbstractRef
entryRuleAbstractRef 
:
{ before(grammarAccess.getAbstractRefRule()); }
	 ruleAbstractRef
{ after(grammarAccess.getAbstractRefRule()); } 
	 EOF 
;

// Rule AbstractRef
ruleAbstractRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAbstractRefAccess().getAlternatives()); }
(rule__AbstractRef__Alternatives)
{ after(grammarAccess.getAbstractRefAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunction
entryRuleFunction 
:
{ before(grammarAccess.getFunctionRule()); }
	 ruleFunction
{ after(grammarAccess.getFunctionRule()); } 
	 EOF 
;

// Rule Function
ruleFunction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionAccess().getGroup()); }
(rule__Function__Group__0)
{ after(grammarAccess.getFunctionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnitName
entryRuleUnitName 
:
{ before(grammarAccess.getUnitNameRule()); }
	 ruleUnitName
{ after(grammarAccess.getUnitNameRule()); } 
	 EOF 
;

// Rule UnitName
ruleUnitName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnitNameAccess().getGroup()); }
(rule__UnitName__Group__0)
{ after(grammarAccess.getUnitNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableRef
entryRuleVariableRef 
:
{ before(grammarAccess.getVariableRefRule()); }
	 ruleVariableRef
{ after(grammarAccess.getVariableRefRule()); } 
	 EOF 
;

// Rule VariableRef
ruleVariableRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableRefAccess().getGroup()); }
(rule__VariableRef__Group__0)
{ after(grammarAccess.getVariableRefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleTerminalExpression
entryRuleTerminalExpression 
:
{ before(grammarAccess.getTerminalExpressionRule()); }
	 ruleTerminalExpression
{ after(grammarAccess.getTerminalExpressionRule()); } 
	 EOF 
;

// Rule TerminalExpression
ruleTerminalExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTerminalExpressionAccess().getAlternatives()); }
(rule__TerminalExpression__Alternatives)
{ after(grammarAccess.getTerminalExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__BuiltIn__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuiltInAccess().getWriteKeyword_0()); }

	'write' 

{ after(grammarAccess.getBuiltInAccess().getWriteKeyword_0()); }
)

    |(
{ before(grammarAccess.getBuiltInAccess().getWarnKeyword_1()); }

	'warn' 

{ after(grammarAccess.getBuiltInAccess().getWarnKeyword_1()); }
)

    |(
{ before(grammarAccess.getBuiltInAccess().getErrorKeyword_2()); }

	'error' 

{ after(grammarAccess.getBuiltInAccess().getErrorKeyword_2()); }
)

    |(
{ before(grammarAccess.getBuiltInAccess().getMatchKeyword_3()); }

	'match' 

{ after(grammarAccess.getBuiltInAccess().getMatchKeyword_3()); }
)

    |(
{ before(grammarAccess.getBuiltInAccess().getMatch_oneKeyword_4()); }

	'match_one' 

{ after(grammarAccess.getBuiltInAccess().getMatch_oneKeyword_4()); }
)

    |(
{ before(grammarAccess.getBuiltInAccess().getMatch_betweenKeyword_5()); }

	'match_between' 

{ after(grammarAccess.getBuiltInAccess().getMatch_betweenKeyword_5()); }
)

    |(
{ before(grammarAccess.getBuiltInAccess().getCaptureKeyword_6()); }

	'capture' 

{ after(grammarAccess.getBuiltInAccess().getCaptureKeyword_6()); }
)

    |(
{ before(grammarAccess.getBuiltInAccess().getReleaseKeyword_7()); }

	'release' 

{ after(grammarAccess.getBuiltInAccess().getReleaseKeyword_7()); }
)

    |(
{ before(grammarAccess.getBuiltInAccess().getAskKeyword_8()); }

	'ask' 

{ after(grammarAccess.getBuiltInAccess().getAskKeyword_8()); }
)

    |(
{ before(grammarAccess.getBuiltInAccess().getSwitchKeyword_9()); }

	'switch' 

{ after(grammarAccess.getBuiltInAccess().getSwitchKeyword_9()); }
)

    |(
{ before(grammarAccess.getBuiltInAccess().getCreateKeyword_10()); }

	'create' 

{ after(grammarAccess.getBuiltInAccess().getCreateKeyword_10()); }
)

    |(
{ before(grammarAccess.getBuiltInAccess().getAddKeyword_11()); }

	'add' 

{ after(grammarAccess.getBuiltInAccess().getAddKeyword_11()); }
)

    |(
{ before(grammarAccess.getBuiltInAccess().getRemoveKeyword_12()); }

	'remove' 

{ after(grammarAccess.getBuiltInAccess().getRemoveKeyword_12()); }
)

    |(
{ before(grammarAccess.getBuiltInAccess().getPutKeyword_13()); }

	'put' 

{ after(grammarAccess.getBuiltInAccess().getPutKeyword_13()); }
)

    |(
{ before(grammarAccess.getBuiltInAccess().getSaveKeyword_14()); }

	'save' 

{ after(grammarAccess.getBuiltInAccess().getSaveKeyword_14()); }
)

    |(
{ before(grammarAccess.getBuiltInAccess().getSetKeyword_15()); }

	'set' 

{ after(grammarAccess.getBuiltInAccess().getSetKeyword_15()); }
)

    |(
{ before(grammarAccess.getBuiltInAccess().getReturnKeyword_16()); }

	'return' 

{ after(grammarAccess.getBuiltInAccess().getReturnKeyword_16()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getIfEvalParserRuleCall_0()); }
	ruleIfEval
{ after(grammarAccess.getStatementAccess().getIfEvalParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getClassicStatementParserRuleCall_1()); }
	ruleClassicStatement
{ after(grammarAccess.getStatementAccess().getClassicStatementParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getDefinitionParserRuleCall_2()); }
	ruleDefinition
{ after(grammarAccess.getStatementAccess().getDefinitionParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassicStatement__Alternatives_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassicStatementAccess().getBlockAssignment_4_0()); }
(rule__ClassicStatement__BlockAssignment_4_0)
{ after(grammarAccess.getClassicStatementAccess().getBlockAssignment_4_0()); }
)

    |(
{ before(grammarAccess.getClassicStatementAccess().getSemicolonKeyword_4_1()); }

	';' 

{ after(grammarAccess.getClassicStatementAccess().getSemicolonKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfEval__ElseAlternatives_4_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfEvalAccess().getElseStatementParserRuleCall_4_1_0_0()); }
	ruleStatement
{ after(grammarAccess.getIfEvalAccess().getElseStatementParserRuleCall_4_1_0_0()); }
)

    |(
{ before(grammarAccess.getIfEvalAccess().getElseBlockParserRuleCall_4_1_0_1()); }
	ruleBlock
{ after(grammarAccess.getIfEvalAccess().getElseBlockParserRuleCall_4_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__NameAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getNameIDTerminalRuleCall_1_0_0()); }
	RULE_ID
{ after(grammarAccess.getDefinitionAccess().getNameIDTerminalRuleCall_1_0_0()); }
)

    |(
{ before(grammarAccess.getDefinitionAccess().getNameSTRINGTerminalRuleCall_1_0_1()); }
	RULE_STRING
{ after(grammarAccess.getDefinitionAccess().getNameSTRINGTerminalRuleCall_1_0_1()); }
)

    |(
{ before(grammarAccess.getDefinitionAccess().getNameBuiltInParserRuleCall_1_0_2()); }
	ruleBuiltIn
{ after(grammarAccess.getDefinitionAccess().getNameBuiltInParserRuleCall_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getBlockAssignment_3_0()); }
(rule__Definition__BlockAssignment_3_0)
{ after(grammarAccess.getDefinitionAccess().getBlockAssignment_3_0()); }
)

    |(
{ before(grammarAccess.getDefinitionAccess().getSemicolonKeyword_3_1()); }

	';' 

{ after(grammarAccess.getDefinitionAccess().getSemicolonKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GamlFacetRef__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlFacetRefAccess().getGroup_0()); }
(rule__GamlFacetRef__Group_0__0)
{ after(grammarAccess.getGamlFacetRefAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getGamlFacetRefAccess().getRefAssignment_1()); }
(rule__GamlFacetRef__RefAssignment_1)
{ after(grammarAccess.getGamlFacetRefAccess().getRefAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionGamlFacetRef__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionGamlFacetRefAccess().getGroup_0()); }
(rule__FunctionGamlFacetRef__Group_0__0)
{ after(grammarAccess.getFunctionGamlFacetRefAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getFunctionGamlFacetRefAccess().getRefAssignment_1()); }
(rule__FunctionGamlFacetRef__RefAssignment_1)
{ after(grammarAccess.getFunctionGamlFacetRefAccess().getRefAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FacetExpr__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetExprAccess().getFunctionFacetExprParserRuleCall_0()); }
	ruleFunctionFacetExpr
{ after(grammarAccess.getFacetExprAccess().getFunctionFacetExprParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getFacetExprAccess().getDefinitionFacetExprParserRuleCall_1()); }
	ruleDefinitionFacetExpr
{ after(grammarAccess.getFacetExprAccess().getDefinitionFacetExprParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getFacetExprAccess().getGroup_2()); }
(rule__FacetExpr__Group_2__0)
{ after(grammarAccess.getFacetExprAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionFacetExpr__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionFacetExprAccess().getReturnsFacetExprParserRuleCall_0()); }
	ruleReturnsFacetExpr
{ after(grammarAccess.getDefinitionFacetExprAccess().getReturnsFacetExprParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDefinitionFacetExprAccess().getNameFacetExprParserRuleCall_1()); }
	ruleNameFacetExpr
{ after(grammarAccess.getDefinitionFacetExprAccess().getNameFacetExprParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getDefinitionFacetExprAccess().getActionFacetExprParserRuleCall_2()); }
	ruleActionFacetExpr
{ after(grammarAccess.getDefinitionFacetExprAccess().getActionFacetExprParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NameFacetExpr__NameAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameFacetExprAccess().getNameIDTerminalRuleCall_1_0_0()); }
	RULE_ID
{ after(grammarAccess.getNameFacetExprAccess().getNameIDTerminalRuleCall_1_0_0()); }
)

    |(
{ before(grammarAccess.getNameFacetExprAccess().getNameSTRINGTerminalRuleCall_1_0_1()); }
	RULE_STRING
{ after(grammarAccess.getNameFacetExprAccess().getNameSTRINGTerminalRuleCall_1_0_1()); }
)

    |(
{ before(grammarAccess.getNameFacetExprAccess().getNameBuiltInParserRuleCall_1_0_2()); }
	ruleBuiltIn
{ after(grammarAccess.getNameFacetExprAccess().getNameBuiltInParserRuleCall_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActionFacetExpr__NameAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionFacetExprAccess().getNameIDTerminalRuleCall_1_0_0()); }
	RULE_ID
{ after(grammarAccess.getActionFacetExprAccess().getNameIDTerminalRuleCall_1_0_0()); }
)

    |(
{ before(grammarAccess.getActionFacetExprAccess().getNameSTRINGTerminalRuleCall_1_0_1()); }
	RULE_STRING
{ after(grammarAccess.getActionFacetExprAccess().getNameSTRINGTerminalRuleCall_1_0_1()); }
)

    |(
{ before(grammarAccess.getActionFacetExprAccess().getNameBuiltInParserRuleCall_1_0_2()); }
	ruleBuiltIn
{ after(grammarAccess.getActionFacetExprAccess().getNameBuiltInParserRuleCall_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relational__OpAlternatives_1_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalAccess().getOpExclamationMarkEqualsSignKeyword_1_0_1_0_0()); }

	'!=' 

{ after(grammarAccess.getRelationalAccess().getOpExclamationMarkEqualsSignKeyword_1_0_1_0_0()); }
)

    |(
{ before(grammarAccess.getRelationalAccess().getOpEqualsSignKeyword_1_0_1_0_1()); }

	'=' 

{ after(grammarAccess.getRelationalAccess().getOpEqualsSignKeyword_1_0_1_0_1()); }
)

    |(
{ before(grammarAccess.getRelationalAccess().getOpGreaterThanSignEqualsSignKeyword_1_0_1_0_2()); }

	'>=' 

{ after(grammarAccess.getRelationalAccess().getOpGreaterThanSignEqualsSignKeyword_1_0_1_0_2()); }
)

    |(
{ before(grammarAccess.getRelationalAccess().getOpLessThanSignEqualsSignKeyword_1_0_1_0_3()); }

	'<=' 

{ after(grammarAccess.getRelationalAccess().getOpLessThanSignEqualsSignKeyword_1_0_1_0_3()); }
)

    |(
{ before(grammarAccess.getRelationalAccess().getOpLessThanSignKeyword_1_0_1_0_4()); }

	'<' 

{ after(grammarAccess.getRelationalAccess().getOpLessThanSignKeyword_1_0_1_0_4()); }
)

    |(
{ before(grammarAccess.getRelationalAccess().getOpGreaterThanSignKeyword_1_0_1_0_5()); }

	'>' 

{ after(grammarAccess.getRelationalAccess().getOpGreaterThanSignKeyword_1_0_1_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PairExpr__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPairExprAccess().getArgPairExprParserRuleCall_0()); }
(	ruleArgPairExpr)
{ after(grammarAccess.getPairExprAccess().getArgPairExprParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPairExprAccess().getGroup_1()); }
(rule__PairExpr__Group_1__0)
{ after(grammarAccess.getPairExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__OpAlternatives_1_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getOpPlusSignKeyword_1_0_1_0_0()); }

	'+' 

{ after(grammarAccess.getAdditionAccess().getOpPlusSignKeyword_1_0_1_0_0()); }
)

    |(
{ before(grammarAccess.getAdditionAccess().getOpHyphenMinusKeyword_1_0_1_0_1()); }

	'-' 

{ after(grammarAccess.getAdditionAccess().getOpHyphenMinusKeyword_1_0_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__OpAlternatives_1_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getOpAsteriskKeyword_1_0_1_0_0()); }

	'*' 

{ after(grammarAccess.getMultiplicationAccess().getOpAsteriskKeyword_1_0_1_0_0()); }
)

    |(
{ before(grammarAccess.getMultiplicationAccess().getOpSolidusKeyword_1_0_1_0_1()); }

	'/' 

{ after(grammarAccess.getMultiplicationAccess().getOpSolidusKeyword_1_0_1_0_1()); }
)

    |(
{ before(grammarAccess.getMultiplicationAccess().getOpCircumflexAccentKeyword_1_0_1_0_2()); }

	'^' 

{ after(grammarAccess.getMultiplicationAccess().getOpCircumflexAccentKeyword_1_0_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GamlUnaryExpr__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlUnaryExprAccess().getPrePrimaryExprParserRuleCall_0()); }
	rulePrePrimaryExpr
{ after(grammarAccess.getGamlUnaryExprAccess().getPrePrimaryExprParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getGamlUnaryExprAccess().getGroup_1()); }
(rule__GamlUnaryExpr__Group_1__0)
{ after(grammarAccess.getGamlUnaryExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GamlUnaryExpr__OpAlternatives_1_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlUnaryExprAccess().getOpHyphenMinusKeyword_1_1_1_0_0()); }

	'-' 

{ after(grammarAccess.getGamlUnaryExprAccess().getOpHyphenMinusKeyword_1_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getGamlUnaryExprAccess().getOpExclamationMarkKeyword_1_1_1_0_1()); }

	'!' 

{ after(grammarAccess.getGamlUnaryExprAccess().getOpExclamationMarkKeyword_1_1_1_0_1()); }
)

    |(
{ before(grammarAccess.getGamlUnaryExprAccess().getOpMyKeyword_1_1_1_0_2()); }

	'my' 

{ after(grammarAccess.getGamlUnaryExprAccess().getOpMyKeyword_1_1_1_0_2()); }
)

    |(
{ before(grammarAccess.getGamlUnaryExprAccess().getOpTheKeyword_1_1_1_0_3()); }

	'the' 

{ after(grammarAccess.getGamlUnaryExprAccess().getOpTheKeyword_1_1_1_0_3()); }
)

    |(
{ before(grammarAccess.getGamlUnaryExprAccess().getOpNotKeyword_1_1_1_0_4()); }

	'not' 

{ after(grammarAccess.getGamlUnaryExprAccess().getOpNotKeyword_1_1_1_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrePrimaryExpr__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrePrimaryExprAccess().getTerminalExpressionParserRuleCall_0()); }
	ruleTerminalExpression
{ after(grammarAccess.getPrePrimaryExprAccess().getTerminalExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPrePrimaryExprAccess().getMemberRefParserRuleCall_1()); }
	ruleMemberRef
{ after(grammarAccess.getPrePrimaryExprAccess().getMemberRefParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getAbstractRefParserRuleCall_0()); }
	ruleAbstractRef
{ after(grammarAccess.getPrimaryExpressionAccess().getAbstractRefParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_1()); }
(rule__PrimaryExpression__Group_1__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_2()); }
(rule__PrimaryExpression__Group_2__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_3()); }
(rule__PrimaryExpression__Group_3__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractRef__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractRefAccess().getVariableRefParserRuleCall_0()); }
	ruleVariableRef
{ after(grammarAccess.getAbstractRefAccess().getVariableRefParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAbstractRefAccess().getFunctionParserRuleCall_1()); }
	ruleFunction
{ after(grammarAccess.getAbstractRefAccess().getFunctionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getGroup_0()); }
(rule__TerminalExpression__Group_0__0)
{ after(grammarAccess.getTerminalExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getGroup_1()); }
(rule__TerminalExpression__Group_1__0)
{ after(grammarAccess.getTerminalExpressionAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getGroup_2()); }
(rule__TerminalExpression__Group_2__0)
{ after(grammarAccess.getTerminalExpressionAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getGroup_3()); }
(rule__TerminalExpression__Group_3__0)
{ after(grammarAccess.getTerminalExpressionAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getGroup_4()); }
(rule__TerminalExpression__Group_4__0)
{ after(grammarAccess.getTerminalExpressionAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getModelKeyword_0()); }

	'model' 

{ after(grammarAccess.getModelAccess().getModelKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getNameAssignment_1()); }
(rule__Model__NameAssignment_1)
{ after(grammarAccess.getModelAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__2__Impl
	rule__Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getImportsAssignment_2()); }
(rule__Model__ImportsAssignment_2)*
{ after(grammarAccess.getModelAccess().getImportsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getStatementsAssignment_3()); }
(rule__Model__StatementsAssignment_3)*
{ after(grammarAccess.getModelAccess().getStatementsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportURIAssignment_1()); }
(rule__Import__ImportURIAssignment_1)
{ after(grammarAccess.getImportAccess().getImportURIAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClassicStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassicStatement__Group__0__Impl
	rule__ClassicStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassicStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassicStatementAccess().getKeyAssignment_0()); }
(rule__ClassicStatement__KeyAssignment_0)
{ after(grammarAccess.getClassicStatementAccess().getKeyAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassicStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassicStatement__Group__1__Impl
	rule__ClassicStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassicStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassicStatementAccess().getRefAssignment_1()); }
(rule__ClassicStatement__RefAssignment_1)?
{ after(grammarAccess.getClassicStatementAccess().getRefAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassicStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassicStatement__Group__2__Impl
	rule__ClassicStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassicStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassicStatementAccess().getExprAssignment_2()); }
(rule__ClassicStatement__ExprAssignment_2)
{ after(grammarAccess.getClassicStatementAccess().getExprAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassicStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassicStatement__Group__3__Impl
	rule__ClassicStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassicStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassicStatementAccess().getFacetsAssignment_3()); }
(rule__ClassicStatement__FacetsAssignment_3)*
{ after(grammarAccess.getClassicStatementAccess().getFacetsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassicStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassicStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassicStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassicStatementAccess().getAlternatives_4()); }
(rule__ClassicStatement__Alternatives_4)
{ after(grammarAccess.getClassicStatementAccess().getAlternatives_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__IfEval__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfEval__Group__0__Impl
	rule__IfEval__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfEval__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfEvalAccess().getKeyAssignment_0()); }
(rule__IfEval__KeyAssignment_0)
{ after(grammarAccess.getIfEvalAccess().getKeyAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfEval__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfEval__Group__1__Impl
	rule__IfEval__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfEval__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfEvalAccess().getRefAssignment_1()); }
(rule__IfEval__RefAssignment_1)?
{ after(grammarAccess.getIfEvalAccess().getRefAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfEval__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfEval__Group__2__Impl
	rule__IfEval__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfEval__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfEvalAccess().getExprAssignment_2()); }
(rule__IfEval__ExprAssignment_2)
{ after(grammarAccess.getIfEvalAccess().getExprAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfEval__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfEval__Group__3__Impl
	rule__IfEval__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfEval__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfEvalAccess().getBlockAssignment_3()); }
(rule__IfEval__BlockAssignment_3)
{ after(grammarAccess.getIfEvalAccess().getBlockAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfEval__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfEval__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfEval__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfEvalAccess().getGroup_4()); }
(rule__IfEval__Group_4__0)?
{ after(grammarAccess.getIfEvalAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__IfEval__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfEval__Group_4__0__Impl
	rule__IfEval__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfEval__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfEvalAccess().getElseKeyword_4_0()); }
(
	'else' 
)
{ after(grammarAccess.getIfEvalAccess().getElseKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfEval__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfEval__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfEval__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfEvalAccess().getElseAssignment_4_1()); }
(rule__IfEval__ElseAssignment_4_1)
{ after(grammarAccess.getIfEvalAccess().getElseAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Definition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group__0__Impl
	rule__Definition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getKeyAssignment_0()); }
(rule__Definition__KeyAssignment_0)
{ after(grammarAccess.getDefinitionAccess().getKeyAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group__1__Impl
	rule__Definition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getNameAssignment_1()); }
(rule__Definition__NameAssignment_1)?
{ after(grammarAccess.getDefinitionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group__2__Impl
	rule__Definition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getFacetsAssignment_2()); }
(rule__Definition__FacetsAssignment_2)*
{ after(grammarAccess.getDefinitionAccess().getFacetsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getAlternatives_3()); }
(rule__Definition__Alternatives_3)
{ after(grammarAccess.getDefinitionAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__GamlFacetRef__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlFacetRef__Group_0__0__Impl
	rule__GamlFacetRef__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlFacetRef__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlFacetRefAccess().getRefAssignment_0_0()); }
(rule__GamlFacetRef__RefAssignment_0_0)
{ after(grammarAccess.getGamlFacetRefAccess().getRefAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GamlFacetRef__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlFacetRef__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlFacetRef__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlFacetRefAccess().getColonKeyword_0_1()); }

	':' 

{ after(grammarAccess.getGamlFacetRefAccess().getColonKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionGamlFacetRef__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionGamlFacetRef__Group_0__0__Impl
	rule__FunctionGamlFacetRef__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionGamlFacetRef__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionGamlFacetRefAccess().getRefAssignment_0_0()); }
(rule__FunctionGamlFacetRef__RefAssignment_0_0)
{ after(grammarAccess.getFunctionGamlFacetRefAccess().getRefAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionGamlFacetRef__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionGamlFacetRef__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionGamlFacetRef__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionGamlFacetRefAccess().getColonKeyword_0_1()); }

	':' 

{ after(grammarAccess.getFunctionGamlFacetRefAccess().getColonKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FacetExpr__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FacetExpr__Group_2__0__Impl
	rule__FacetExpr__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FacetExpr__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetExprAccess().getKeyAssignment_2_0()); }
(rule__FacetExpr__KeyAssignment_2_0)
{ after(grammarAccess.getFacetExprAccess().getKeyAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FacetExpr__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FacetExpr__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FacetExpr__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetExprAccess().getExprAssignment_2_1()); }
(rule__FacetExpr__ExprAssignment_2_1)
{ after(grammarAccess.getFacetExprAccess().getExprAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NameFacetExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NameFacetExpr__Group__0__Impl
	rule__NameFacetExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NameFacetExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameFacetExprAccess().getNameKeyword_0()); }

	'name:' 

{ after(grammarAccess.getNameFacetExprAccess().getNameKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NameFacetExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NameFacetExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NameFacetExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameFacetExprAccess().getNameAssignment_1()); }
(rule__NameFacetExpr__NameAssignment_1)
{ after(grammarAccess.getNameFacetExprAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ReturnsFacetExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnsFacetExpr__Group__0__Impl
	rule__ReturnsFacetExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnsFacetExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnsFacetExprAccess().getReturnsKeyword_0()); }

	'returns:' 

{ after(grammarAccess.getReturnsFacetExprAccess().getReturnsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnsFacetExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnsFacetExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnsFacetExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnsFacetExprAccess().getNameAssignment_1()); }
(rule__ReturnsFacetExpr__NameAssignment_1)
{ after(grammarAccess.getReturnsFacetExprAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ActionFacetExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActionFacetExpr__Group__0__Impl
	rule__ActionFacetExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionFacetExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionFacetExprAccess().getActionKeyword_0()); }

	'action:' 

{ after(grammarAccess.getActionFacetExprAccess().getActionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActionFacetExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActionFacetExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionFacetExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionFacetExprAccess().getNameAssignment_1()); }
(rule__ActionFacetExpr__NameAssignment_1)
{ after(grammarAccess.getActionFacetExprAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionFacetExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionFacetExpr__Group__0__Impl
	rule__FunctionFacetExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionFacetExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionFacetExprAccess().getKeyAssignment_0()); }
(rule__FunctionFacetExpr__KeyAssignment_0)
{ after(grammarAccess.getFunctionFacetExprAccess().getKeyAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionFacetExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionFacetExpr__Group__1__Impl
	rule__FunctionFacetExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionFacetExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionFacetExprAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getFunctionFacetExprAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionFacetExpr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionFacetExpr__Group__2__Impl
	rule__FunctionFacetExpr__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionFacetExpr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionFacetExprAccess().getExprAssignment_2()); }
(rule__FunctionFacetExpr__ExprAssignment_2)
{ after(grammarAccess.getFunctionFacetExprAccess().getExprAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionFacetExpr__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionFacetExpr__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionFacetExpr__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionFacetExprAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getFunctionFacetExprAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Block__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__0__Impl
	rule__Block__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getBlockAction_0()); }
(

)
{ after(grammarAccess.getBlockAccess().getBlockAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__1__Impl
	rule__Block__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__2__Impl
	rule__Block__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getStatementsAssignment_2()); }
(rule__Block__StatementsAssignment_2)*
{ after(grammarAccess.getBlockAccess().getStatementsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TernExp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TernExp__Group__0__Impl
	rule__TernExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TernExp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTernExpAccess().getOrExpParserRuleCall_0()); }
	ruleOrExp
{ after(grammarAccess.getTernExpAccess().getOrExpParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TernExp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TernExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TernExp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTernExpAccess().getGroup_1()); }
(rule__TernExp__Group_1__0)?
{ after(grammarAccess.getTernExpAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TernExp__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TernExp__Group_1__0__Impl
	rule__TernExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TernExp__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTernExpAccess().getTernExpLeftAction_1_0()); }
(

)
{ after(grammarAccess.getTernExpAccess().getTernExpLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TernExp__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TernExp__Group_1__1__Impl
	rule__TernExp__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TernExp__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTernExpAccess().getOpAssignment_1_1()); }
(rule__TernExp__OpAssignment_1_1)
{ after(grammarAccess.getTernExpAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TernExp__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TernExp__Group_1__2__Impl
	rule__TernExp__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TernExp__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTernExpAccess().getRightAssignment_1_2()); }
(rule__TernExp__RightAssignment_1_2)
{ after(grammarAccess.getTernExpAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TernExp__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TernExp__Group_1__3__Impl
	rule__TernExp__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TernExp__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTernExpAccess().getColonKeyword_1_3()); }

	':' 

{ after(grammarAccess.getTernExpAccess().getColonKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TernExp__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TernExp__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TernExp__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTernExpAccess().getIfFalseAssignment_1_4()); }
(rule__TernExp__IfFalseAssignment_1_4)
{ after(grammarAccess.getTernExpAccess().getIfFalseAssignment_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__OrExp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExp__Group__0__Impl
	rule__OrExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpAccess().getAndExpParserRuleCall_0()); }
	ruleAndExp
{ after(grammarAccess.getOrExpAccess().getAndExpParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpAccess().getGroup_1()); }
(rule__OrExp__Group_1__0)*
{ after(grammarAccess.getOrExpAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrExp__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExp__Group_1__0__Impl
	rule__OrExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExp__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpAccess().getExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getOrExpAccess().getExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExp__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExp__Group_1__1__Impl
	rule__OrExp__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExp__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpAccess().getOpAssignment_1_1()); }
(rule__OrExp__OpAssignment_1_1)
{ after(grammarAccess.getOrExpAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExp__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExp__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExp__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpAccess().getRightAssignment_1_2()); }
(rule__OrExp__RightAssignment_1_2)
{ after(grammarAccess.getOrExpAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AndExp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExp__Group__0__Impl
	rule__AndExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpAccess().getRelationalParserRuleCall_0()); }
	ruleRelational
{ after(grammarAccess.getAndExpAccess().getRelationalParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpAccess().getGroup_1()); }
(rule__AndExp__Group_1__0)*
{ after(grammarAccess.getAndExpAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndExp__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExp__Group_1__0__Impl
	rule__AndExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExp__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpAccess().getExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getAndExpAccess().getExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExp__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExp__Group_1__1__Impl
	rule__AndExp__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExp__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpAccess().getOpAssignment_1_1()); }
(rule__AndExp__OpAssignment_1_1)
{ after(grammarAccess.getAndExpAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExp__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExp__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExp__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpAccess().getRightAssignment_1_2()); }
(rule__AndExp__RightAssignment_1_2)
{ after(grammarAccess.getAndExpAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Relational__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relational__Group__0__Impl
	rule__Relational__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalAccess().getPairExprParserRuleCall_0()); }
	rulePairExpr
{ after(grammarAccess.getRelationalAccess().getPairExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relational__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relational__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalAccess().getGroup_1()); }
(rule__Relational__Group_1__0)?
{ after(grammarAccess.getRelationalAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Relational__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relational__Group_1__0__Impl
	rule__Relational__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalAccess().getGroup_1_0()); }
(rule__Relational__Group_1_0__0)
{ after(grammarAccess.getRelationalAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relational__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relational__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalAccess().getRightAssignment_1_1()); }
(rule__Relational__RightAssignment_1_1)
{ after(grammarAccess.getRelationalAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Relational__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relational__Group_1_0__0__Impl
	rule__Relational__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalAccess().getExpressionLeftAction_1_0_0()); }
(

)
{ after(grammarAccess.getRelationalAccess().getExpressionLeftAction_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relational__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relational__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalAccess().getOpAssignment_1_0_1()); }
(rule__Relational__OpAssignment_1_0_1)
{ after(grammarAccess.getRelationalAccess().getOpAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ArgPairExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgPairExpr__Group__0__Impl
	rule__ArgPairExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgPairExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgPairExprAccess().getArgPairExprAction_0()); }
(

)
{ after(grammarAccess.getArgPairExprAccess().getArgPairExprAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArgPairExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgPairExpr__Group__1__Impl
	rule__ArgPairExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgPairExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgPairExprAccess().getArgAssignment_1()); }
(rule__ArgPairExpr__ArgAssignment_1)
{ after(grammarAccess.getArgPairExprAccess().getArgAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArgPairExpr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgPairExpr__Group__2__Impl
	rule__ArgPairExpr__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgPairExpr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgPairExprAccess().getOpAssignment_2()); }
(rule__ArgPairExpr__OpAssignment_2)
{ after(grammarAccess.getArgPairExprAccess().getOpAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArgPairExpr__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgPairExpr__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgPairExpr__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgPairExprAccess().getRightAssignment_3()); }
(rule__ArgPairExpr__RightAssignment_3)
{ after(grammarAccess.getArgPairExprAccess().getRightAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PairExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PairExpr__Group_1__0__Impl
	rule__PairExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PairExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPairExprAccess().getAdditionParserRuleCall_1_0()); }
	ruleAddition
{ after(grammarAccess.getPairExprAccess().getAdditionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PairExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PairExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PairExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPairExprAccess().getGroup_1_1()); }
(rule__PairExpr__Group_1_1__0)?
{ after(grammarAccess.getPairExprAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PairExpr__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PairExpr__Group_1_1__0__Impl
	rule__PairExpr__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PairExpr__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPairExprAccess().getGroup_1_1_0()); }
(rule__PairExpr__Group_1_1_0__0)
{ after(grammarAccess.getPairExprAccess().getGroup_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PairExpr__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PairExpr__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PairExpr__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPairExprAccess().getRightAssignment_1_1_1()); }
(rule__PairExpr__RightAssignment_1_1_1)
{ after(grammarAccess.getPairExprAccess().getRightAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PairExpr__Group_1_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PairExpr__Group_1_1_0__0__Impl
	rule__PairExpr__Group_1_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PairExpr__Group_1_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPairExprAccess().getPairExprLeftAction_1_1_0_0()); }
(

)
{ after(grammarAccess.getPairExprAccess().getPairExprLeftAction_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PairExpr__Group_1_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PairExpr__Group_1_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PairExpr__Group_1_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPairExprAccess().getOpAssignment_1_1_0_1()); }
(rule__PairExpr__OpAssignment_1_1_0_1)
{ after(grammarAccess.getPairExprAccess().getOpAssignment_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Addition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group__0__Impl
	rule__Addition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0()); }
	ruleMultiplication
{ after(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getGroup_1()); }
(rule__Addition__Group_1__0)*
{ after(grammarAccess.getAdditionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Addition__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group_1__0__Impl
	rule__Addition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getGroup_1_0()); }
(rule__Addition__Group_1_0__0)
{ after(grammarAccess.getAdditionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getRightAssignment_1_1()); }
(rule__Addition__RightAssignment_1_1)
{ after(grammarAccess.getAdditionAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Addition__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group_1_0__0__Impl
	rule__Addition__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getExpressionLeftAction_1_0_0()); }
(

)
{ after(grammarAccess.getAdditionAccess().getExpressionLeftAction_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getOpAssignment_1_0_1()); }
(rule__Addition__OpAssignment_1_0_1)
{ after(grammarAccess.getAdditionAccess().getOpAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Multiplication__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group__0__Impl
	rule__Multiplication__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getGamlBinaryExprParserRuleCall_0()); }
	ruleGamlBinaryExpr
{ after(grammarAccess.getMultiplicationAccess().getGamlBinaryExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getGroup_1()); }
(rule__Multiplication__Group_1__0)*
{ after(grammarAccess.getMultiplicationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Multiplication__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group_1__0__Impl
	rule__Multiplication__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getGroup_1_0()); }
(rule__Multiplication__Group_1_0__0)
{ after(grammarAccess.getMultiplicationAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getRightAssignment_1_1()); }
(rule__Multiplication__RightAssignment_1_1)
{ after(grammarAccess.getMultiplicationAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Multiplication__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group_1_0__0__Impl
	rule__Multiplication__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getExpressionLeftAction_1_0_0()); }
(

)
{ after(grammarAccess.getMultiplicationAccess().getExpressionLeftAction_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getOpAssignment_1_0_1()); }
(rule__Multiplication__OpAssignment_1_0_1)
{ after(grammarAccess.getMultiplicationAccess().getOpAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GamlBinaryExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlBinaryExpr__Group__0__Impl
	rule__GamlBinaryExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlBinaryExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlBinaryExprAccess().getGamlUnitExprParserRuleCall_0()); }
	ruleGamlUnitExpr
{ after(grammarAccess.getGamlBinaryExprAccess().getGamlUnitExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GamlBinaryExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlBinaryExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlBinaryExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlBinaryExprAccess().getGroup_1()); }
(rule__GamlBinaryExpr__Group_1__0)*
{ after(grammarAccess.getGamlBinaryExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GamlBinaryExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlBinaryExpr__Group_1__0__Impl
	rule__GamlBinaryExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlBinaryExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlBinaryExprAccess().getGroup_1_0()); }
(rule__GamlBinaryExpr__Group_1_0__0)
{ after(grammarAccess.getGamlBinaryExprAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GamlBinaryExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlBinaryExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlBinaryExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlBinaryExprAccess().getRightAssignment_1_1()); }
(rule__GamlBinaryExpr__RightAssignment_1_1)
{ after(grammarAccess.getGamlBinaryExprAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GamlBinaryExpr__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlBinaryExpr__Group_1_0__0__Impl
	rule__GamlBinaryExpr__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlBinaryExpr__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlBinaryExprAccess().getGamlBinaryExprLeftAction_1_0_0()); }
(

)
{ after(grammarAccess.getGamlBinaryExprAccess().getGamlBinaryExprLeftAction_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GamlBinaryExpr__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlBinaryExpr__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlBinaryExpr__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlBinaryExprAccess().getOpAssignment_1_0_1()); }
(rule__GamlBinaryExpr__OpAssignment_1_0_1)
{ after(grammarAccess.getGamlBinaryExprAccess().getOpAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GamlUnitExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlUnitExpr__Group__0__Impl
	rule__GamlUnitExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlUnitExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlUnitExprAccess().getGamlUnaryExprParserRuleCall_0()); }
	ruleGamlUnaryExpr
{ after(grammarAccess.getGamlUnitExprAccess().getGamlUnaryExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GamlUnitExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlUnitExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlUnitExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlUnitExprAccess().getGroup_1()); }
(rule__GamlUnitExpr__Group_1__0)?
{ after(grammarAccess.getGamlUnitExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GamlUnitExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlUnitExpr__Group_1__0__Impl
	rule__GamlUnitExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlUnitExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlUnitExprAccess().getGroup_1_0()); }
(rule__GamlUnitExpr__Group_1_0__0)
{ after(grammarAccess.getGamlUnitExprAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GamlUnitExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlUnitExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlUnitExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlUnitExprAccess().getRightAssignment_1_1()); }
(rule__GamlUnitExpr__RightAssignment_1_1)
{ after(grammarAccess.getGamlUnitExprAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GamlUnitExpr__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlUnitExpr__Group_1_0__0__Impl
	rule__GamlUnitExpr__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlUnitExpr__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlUnitExprAccess().getGamlUnitExprLeftAction_1_0_0()); }
(

)
{ after(grammarAccess.getGamlUnitExprAccess().getGamlUnitExprLeftAction_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GamlUnitExpr__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlUnitExpr__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlUnitExpr__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlUnitExprAccess().getOpAssignment_1_0_1()); }
(rule__GamlUnitExpr__OpAssignment_1_0_1)
{ after(grammarAccess.getGamlUnitExprAccess().getOpAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GamlUnaryExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlUnaryExpr__Group_1__0__Impl
	rule__GamlUnaryExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlUnaryExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlUnaryExprAccess().getGamlUnaryExprAction_1_0()); }
(

)
{ after(grammarAccess.getGamlUnaryExprAccess().getGamlUnaryExprAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GamlUnaryExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlUnaryExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlUnaryExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlUnaryExprAccess().getGroup_1_1()); }
(rule__GamlUnaryExpr__Group_1_1__0)
{ after(grammarAccess.getGamlUnaryExprAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GamlUnaryExpr__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlUnaryExpr__Group_1_1__0__Impl
	rule__GamlUnaryExpr__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlUnaryExpr__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlUnaryExprAccess().getGamlUnaryExprLeftAction_1_1_0()); }
(

)
{ after(grammarAccess.getGamlUnaryExprAccess().getGamlUnaryExprLeftAction_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GamlUnaryExpr__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlUnaryExpr__Group_1_1__1__Impl
	rule__GamlUnaryExpr__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlUnaryExpr__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlUnaryExprAccess().getOpAssignment_1_1_1()); }
(rule__GamlUnaryExpr__OpAssignment_1_1_1)
{ after(grammarAccess.getGamlUnaryExprAccess().getOpAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GamlUnaryExpr__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlUnaryExpr__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlUnaryExpr__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlUnaryExprAccess().getRightAssignment_1_1_2()); }
(rule__GamlUnaryExpr__RightAssignment_1_1_2)
{ after(grammarAccess.getGamlUnaryExprAccess().getRightAssignment_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MemberRef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberRef__Group__0__Impl
	rule__MemberRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberRef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberRefAccess().getPrimaryExpressionParserRuleCall_0()); }
	rulePrimaryExpression
{ after(grammarAccess.getMemberRefAccess().getPrimaryExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberRef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberRef__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberRef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberRefAccess().getGroup_1()); }
(rule__MemberRef__Group_1__0)*
{ after(grammarAccess.getMemberRefAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MemberRef__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberRef__Group_1__0__Impl
	rule__MemberRef__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberRef__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberRefAccess().getMemberRefLeftAction_1_0()); }
(

)
{ after(grammarAccess.getMemberRefAccess().getMemberRefLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberRef__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberRef__Group_1__1__Impl
	rule__MemberRef__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberRef__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberRefAccess().getOpAssignment_1_1()); }
(rule__MemberRef__OpAssignment_1_1)
{ after(grammarAccess.getMemberRefAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberRef__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberRef__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberRef__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberRefAccess().getRightAssignment_1_2()); }
(rule__MemberRef__RightAssignment_1_2)
{ after(grammarAccess.getMemberRefAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PrimaryExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1__0__Impl
	rule__PrimaryExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1__1__Impl
	rule__PrimaryExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getExpressionParserRuleCall_1_1()); }
	ruleExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getExpressionParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_1_2()); }

	')' 

{ after(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PrimaryExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_2__0__Impl
	rule__PrimaryExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLeftSquareBracketKeyword_2_0()); }

	'[' 

{ after(grammarAccess.getPrimaryExpressionAccess().getLeftSquareBracketKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_2__1__Impl
	rule__PrimaryExpression__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getArrayAction_2_1()); }
(

)
{ after(grammarAccess.getPrimaryExpressionAccess().getArrayAction_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_2__2__Impl
	rule__PrimaryExpression__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_2_2()); }
(rule__PrimaryExpression__Group_2_2__0)?
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getRightSquareBracketKeyword_2_3()); }

	']' 

{ after(grammarAccess.getPrimaryExpressionAccess().getRightSquareBracketKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PrimaryExpression__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_2_2__0__Impl
	rule__PrimaryExpression__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getExprsAssignment_2_2_0()); }
(rule__PrimaryExpression__ExprsAssignment_2_2_0)
{ after(grammarAccess.getPrimaryExpressionAccess().getExprsAssignment_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_2_2_1()); }
(rule__PrimaryExpression__Group_2_2_1__0)*
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryExpression__Group_2_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_2_2_1__0__Impl
	rule__PrimaryExpression__Group_2_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_2_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getCommaKeyword_2_2_1_0()); }

	',' 

{ after(grammarAccess.getPrimaryExpressionAccess().getCommaKeyword_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_2_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_2_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_2_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getExprsAssignment_2_2_1_1()); }
(rule__PrimaryExpression__ExprsAssignment_2_2_1_1)
{ after(grammarAccess.getPrimaryExpressionAccess().getExprsAssignment_2_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryExpression__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_3__0__Impl
	rule__PrimaryExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLeftCurlyBracketKeyword_3_0()); }

	'{' 

{ after(grammarAccess.getPrimaryExpressionAccess().getLeftCurlyBracketKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_3__1__Impl
	rule__PrimaryExpression__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getPointAction_3_1()); }
(

)
{ after(grammarAccess.getPrimaryExpressionAccess().getPointAction_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_3__2__Impl
	rule__PrimaryExpression__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_3_2()); }
(rule__PrimaryExpression__Group_3_2__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getRightCurlyBracketKeyword_3_3()); }

	'}' 

{ after(grammarAccess.getPrimaryExpressionAccess().getRightCurlyBracketKeyword_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PrimaryExpression__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_3_2__0__Impl
	rule__PrimaryExpression__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLeftAssignment_3_2_0()); }
(rule__PrimaryExpression__LeftAssignment_3_2_0)
{ after(grammarAccess.getPrimaryExpressionAccess().getLeftAssignment_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_3_2__1__Impl
	rule__PrimaryExpression__Group_3_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getOpAssignment_3_2_1()); }
(rule__PrimaryExpression__OpAssignment_3_2_1)
{ after(grammarAccess.getPrimaryExpressionAccess().getOpAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_3_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_3_2__2__Impl
	rule__PrimaryExpression__Group_3_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getRightAssignment_3_2_2()); }
(rule__PrimaryExpression__RightAssignment_3_2_2)
{ after(grammarAccess.getPrimaryExpressionAccess().getRightAssignment_3_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_3_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_3_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_3_2_3()); }
(rule__PrimaryExpression__Group_3_2_3__0)?
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_3_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PrimaryExpression__Group_3_2_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_3_2_3__0__Impl
	rule__PrimaryExpression__Group_3_2_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3_2_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getCommaKeyword_3_2_3_0()); }

	',' 

{ after(grammarAccess.getPrimaryExpressionAccess().getCommaKeyword_3_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_3_2_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_3_2_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3_2_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getZAssignment_3_2_3_1()); }
(rule__PrimaryExpression__ZAssignment_3_2_3_1)
{ after(grammarAccess.getPrimaryExpressionAccess().getZAssignment_3_2_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Function__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__0__Impl
	rule__Function__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getFunctionAction_0()); }
(

)
{ after(grammarAccess.getFunctionAccess().getFunctionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getGroup_1()); }
(rule__Function__Group_1__0)
{ after(grammarAccess.getFunctionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Function__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group_1__0__Impl
	rule__Function__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getOpAssignment_1_0()); }
(rule__Function__OpAssignment_1_0)
{ after(grammarAccess.getFunctionAccess().getOpAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group_1__1__Impl
	rule__Function__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_1_1()); }

	'(' 

{ after(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group_1__2__Impl
	rule__Function__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getArgsAssignment_1_2()); }
(rule__Function__ArgsAssignment_1_2)
{ after(grammarAccess.getFunctionAccess().getArgsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group_1__3__Impl
	rule__Function__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getGroup_1_3()); }
(rule__Function__Group_1_3__0)*
{ after(grammarAccess.getFunctionAccess().getGroup_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_1_4()); }

	')' 

{ after(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Function__Group_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group_1_3__0__Impl
	rule__Function__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getCommaKeyword_1_3_0()); }

	',' 

{ after(grammarAccess.getFunctionAccess().getCommaKeyword_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getArgsAssignment_1_3_1()); }
(rule__Function__ArgsAssignment_1_3_1)
{ after(grammarAccess.getFunctionAccess().getArgsAssignment_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnitName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnitName__Group__0__Impl
	rule__UnitName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitNameAccess().getUnitNameAction_0()); }
(

)
{ after(grammarAccess.getUnitNameAccess().getUnitNameAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnitName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnitName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitNameAccess().getOpAssignment_1()); }
(rule__UnitName__OpAssignment_1)
{ after(grammarAccess.getUnitNameAccess().getOpAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariableRef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableRef__Group__0__Impl
	rule__VariableRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableRef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableRefAccess().getVariableRefAction_0()); }
(

)
{ after(grammarAccess.getVariableRefAccess().getVariableRefAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableRef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableRef__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableRef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableRefAccess().getRefAssignment_1()); }
(rule__VariableRef__RefAssignment_1)
{ after(grammarAccess.getVariableRefAccess().getRefAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_0__0__Impl
	rule__TerminalExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getIntLiteralAction_0_0()); }
(

)
{ after(grammarAccess.getTerminalExpressionAccess().getIntLiteralAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getValueAssignment_0_1()); }
(rule__TerminalExpression__ValueAssignment_0_1)
{ after(grammarAccess.getTerminalExpressionAccess().getValueAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_1__0__Impl
	rule__TerminalExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getDoubleLiteralAction_1_0()); }
(

)
{ after(grammarAccess.getTerminalExpressionAccess().getDoubleLiteralAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getValueAssignment_1_1()); }
(rule__TerminalExpression__ValueAssignment_1_1)
{ after(grammarAccess.getTerminalExpressionAccess().getValueAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_2__0__Impl
	rule__TerminalExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getColorLiteralAction_2_0()); }
(

)
{ after(grammarAccess.getTerminalExpressionAccess().getColorLiteralAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getValueAssignment_2_1()); }
(rule__TerminalExpression__ValueAssignment_2_1)
{ after(grammarAccess.getTerminalExpressionAccess().getValueAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpression__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_3__0__Impl
	rule__TerminalExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getStringLiteralAction_3_0()); }
(

)
{ after(grammarAccess.getTerminalExpressionAccess().getStringLiteralAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getValueAssignment_3_1()); }
(rule__TerminalExpression__ValueAssignment_3_1)
{ after(grammarAccess.getTerminalExpressionAccess().getValueAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpression__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_4__0__Impl
	rule__TerminalExpression__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getBooleanLiteralAction_4_0()); }
(

)
{ after(grammarAccess.getTerminalExpressionAccess().getBooleanLiteralAction_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getValueAssignment_4_1()); }
(rule__TerminalExpression__ValueAssignment_4_1)
{ after(grammarAccess.getTerminalExpressionAccess().getValueAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Model__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ImportsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getImportsImportParserRuleCall_2_0()); }
	ruleImport{ after(grammarAccess.getModelAccess().getImportsImportParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__StatementsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getStatementsStatementParserRuleCall_3_0()); }
	ruleStatement{ after(grammarAccess.getModelAccess().getStatementsStatementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportURIAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassicStatement__KeyAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassicStatementAccess().getKeyBuiltInParserRuleCall_0_0()); }
	ruleBuiltIn{ after(grammarAccess.getClassicStatementAccess().getKeyBuiltInParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassicStatement__RefAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassicStatementAccess().getRefGamlFacetRefParserRuleCall_1_0()); }
	ruleGamlFacetRef{ after(grammarAccess.getClassicStatementAccess().getRefGamlFacetRefParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassicStatement__ExprAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassicStatementAccess().getExprExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getClassicStatementAccess().getExprExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassicStatement__FacetsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassicStatementAccess().getFacetsFacetExprParserRuleCall_3_0()); }
	ruleFacetExpr{ after(grammarAccess.getClassicStatementAccess().getFacetsFacetExprParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassicStatement__BlockAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassicStatementAccess().getBlockBlockParserRuleCall_4_0_0()); }
	ruleBlock{ after(grammarAccess.getClassicStatementAccess().getBlockBlockParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfEval__KeyAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfEvalAccess().getKeyIfKeyword_0_0()); }
(
{ before(grammarAccess.getIfEvalAccess().getKeyIfKeyword_0_0()); }

	'if' 

{ after(grammarAccess.getIfEvalAccess().getKeyIfKeyword_0_0()); }
)

{ after(grammarAccess.getIfEvalAccess().getKeyIfKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfEval__RefAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfEvalAccess().getRefGamlFacetRefParserRuleCall_1_0()); }
	ruleGamlFacetRef{ after(grammarAccess.getIfEvalAccess().getRefGamlFacetRefParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfEval__ExprAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfEvalAccess().getExprExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getIfEvalAccess().getExprExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfEval__BlockAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfEvalAccess().getBlockBlockParserRuleCall_3_0()); }
	ruleBlock{ after(grammarAccess.getIfEvalAccess().getBlockBlockParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfEval__ElseAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfEvalAccess().getElseAlternatives_4_1_0()); }
(rule__IfEval__ElseAlternatives_4_1_0)
{ after(grammarAccess.getIfEvalAccess().getElseAlternatives_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__KeyAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getKeyIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getDefinitionAccess().getKeyIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getNameAlternatives_1_0()); }
(rule__Definition__NameAlternatives_1_0)
{ after(grammarAccess.getDefinitionAccess().getNameAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__FacetsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getFacetsFacetExprParserRuleCall_2_0()); }
	ruleFacetExpr{ after(grammarAccess.getDefinitionAccess().getFacetsFacetExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__BlockAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getBlockBlockParserRuleCall_3_0_0()); }
	ruleBlock{ after(grammarAccess.getDefinitionAccess().getBlockBlockParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GamlFacetRef__RefAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlFacetRefAccess().getRefIDTerminalRuleCall_0_0_0()); }
	RULE_ID{ after(grammarAccess.getGamlFacetRefAccess().getRefIDTerminalRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GamlFacetRef__RefAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlFacetRefAccess().getRefLessThanSignHyphenMinusKeyword_1_0()); }
(
{ before(grammarAccess.getGamlFacetRefAccess().getRefLessThanSignHyphenMinusKeyword_1_0()); }

	'<-' 

{ after(grammarAccess.getGamlFacetRefAccess().getRefLessThanSignHyphenMinusKeyword_1_0()); }
)

{ after(grammarAccess.getGamlFacetRefAccess().getRefLessThanSignHyphenMinusKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionGamlFacetRef__RefAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionGamlFacetRefAccess().getRefFunctionKeyword_0_0_0()); }
(
{ before(grammarAccess.getFunctionGamlFacetRefAccess().getRefFunctionKeyword_0_0_0()); }

	'function' 

{ after(grammarAccess.getFunctionGamlFacetRefAccess().getRefFunctionKeyword_0_0_0()); }
)

{ after(grammarAccess.getFunctionGamlFacetRefAccess().getRefFunctionKeyword_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionGamlFacetRef__RefAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionGamlFacetRefAccess().getRefHyphenMinusGreaterThanSignKeyword_1_0()); }
(
{ before(grammarAccess.getFunctionGamlFacetRefAccess().getRefHyphenMinusGreaterThanSignKeyword_1_0()); }

	'->' 

{ after(grammarAccess.getFunctionGamlFacetRefAccess().getRefHyphenMinusGreaterThanSignKeyword_1_0()); }
)

{ after(grammarAccess.getFunctionGamlFacetRefAccess().getRefHyphenMinusGreaterThanSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FacetExpr__KeyAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetExprAccess().getKeyGamlFacetRefParserRuleCall_2_0_0()); }
	ruleGamlFacetRef{ after(grammarAccess.getFacetExprAccess().getKeyGamlFacetRefParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FacetExpr__ExprAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetExprAccess().getExprExpressionParserRuleCall_2_1_0()); }
	ruleExpression{ after(grammarAccess.getFacetExprAccess().getExprExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NameFacetExpr__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameFacetExprAccess().getNameAlternatives_1_0()); }
(rule__NameFacetExpr__NameAlternatives_1_0)
{ after(grammarAccess.getNameFacetExprAccess().getNameAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnsFacetExpr__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnsFacetExprAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getReturnsFacetExprAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActionFacetExpr__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionFacetExprAccess().getNameAlternatives_1_0()); }
(rule__ActionFacetExpr__NameAlternatives_1_0)
{ after(grammarAccess.getActionFacetExprAccess().getNameAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionFacetExpr__KeyAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionFacetExprAccess().getKeyFunctionGamlFacetRefParserRuleCall_0_0()); }
	ruleFunctionGamlFacetRef{ after(grammarAccess.getFunctionFacetExprAccess().getKeyFunctionGamlFacetRefParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionFacetExpr__ExprAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionFacetExprAccess().getExprExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getFunctionFacetExprAccess().getExprExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Block__StatementsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getStatementsStatementParserRuleCall_2_0()); }
	ruleStatement{ after(grammarAccess.getBlockAccess().getStatementsStatementParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TernExp__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTernExpAccess().getOpQuestionMarkKeyword_1_1_0()); }
(
{ before(grammarAccess.getTernExpAccess().getOpQuestionMarkKeyword_1_1_0()); }

	'?' 

{ after(grammarAccess.getTernExpAccess().getOpQuestionMarkKeyword_1_1_0()); }
)

{ after(grammarAccess.getTernExpAccess().getOpQuestionMarkKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TernExp__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTernExpAccess().getRightOrExpParserRuleCall_1_2_0()); }
	ruleOrExp{ after(grammarAccess.getTernExpAccess().getRightOrExpParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TernExp__IfFalseAssignment_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTernExpAccess().getIfFalseOrExpParserRuleCall_1_4_0()); }
	ruleOrExp{ after(grammarAccess.getTernExpAccess().getIfFalseOrExpParserRuleCall_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrExp__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpAccess().getOpOrKeyword_1_1_0()); }
(
{ before(grammarAccess.getOrExpAccess().getOpOrKeyword_1_1_0()); }

	'or' 

{ after(grammarAccess.getOrExpAccess().getOpOrKeyword_1_1_0()); }
)

{ after(grammarAccess.getOrExpAccess().getOpOrKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrExp__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpAccess().getRightAndExpParserRuleCall_1_2_0()); }
	ruleAndExp{ after(grammarAccess.getOrExpAccess().getRightAndExpParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExp__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpAccess().getOpAndKeyword_1_1_0()); }
(
{ before(grammarAccess.getAndExpAccess().getOpAndKeyword_1_1_0()); }

	'and' 

{ after(grammarAccess.getAndExpAccess().getOpAndKeyword_1_1_0()); }
)

{ after(grammarAccess.getAndExpAccess().getOpAndKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExp__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpAccess().getRightRelationalParserRuleCall_1_2_0()); }
	ruleRelational{ after(grammarAccess.getAndExpAccess().getRightRelationalParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relational__OpAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalAccess().getOpAlternatives_1_0_1_0()); }
(rule__Relational__OpAlternatives_1_0_1_0)
{ after(grammarAccess.getRelationalAccess().getOpAlternatives_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relational__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalAccess().getRightPairExprParserRuleCall_1_1_0()); }
	rulePairExpr{ after(grammarAccess.getRelationalAccess().getRightPairExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArgPairExpr__ArgAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgPairExprAccess().getArgIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getArgPairExprAccess().getArgIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArgPairExpr__OpAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgPairExprAccess().getOpColonColonKeyword_2_0()); }
(
{ before(grammarAccess.getArgPairExprAccess().getOpColonColonKeyword_2_0()); }

	'::' 

{ after(grammarAccess.getArgPairExprAccess().getOpColonColonKeyword_2_0()); }
)

{ after(grammarAccess.getArgPairExprAccess().getOpColonColonKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArgPairExpr__RightAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgPairExprAccess().getRightAdditionParserRuleCall_3_0()); }
	ruleAddition{ after(grammarAccess.getArgPairExprAccess().getRightAdditionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PairExpr__OpAssignment_1_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPairExprAccess().getOpColonColonKeyword_1_1_0_1_0()); }
(
{ before(grammarAccess.getPairExprAccess().getOpColonColonKeyword_1_1_0_1_0()); }

	'::' 

{ after(grammarAccess.getPairExprAccess().getOpColonColonKeyword_1_1_0_1_0()); }
)

{ after(grammarAccess.getPairExprAccess().getOpColonColonKeyword_1_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PairExpr__RightAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPairExprAccess().getRightAdditionParserRuleCall_1_1_1_0()); }
	ruleAddition{ after(grammarAccess.getPairExprAccess().getRightAdditionParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__OpAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getOpAlternatives_1_0_1_0()); }
(rule__Addition__OpAlternatives_1_0_1_0)
{ after(grammarAccess.getAdditionAccess().getOpAlternatives_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getRightMultiplicationParserRuleCall_1_1_0()); }
	ruleMultiplication{ after(grammarAccess.getAdditionAccess().getRightMultiplicationParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__OpAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getOpAlternatives_1_0_1_0()); }
(rule__Multiplication__OpAlternatives_1_0_1_0)
{ after(grammarAccess.getMultiplicationAccess().getOpAlternatives_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getRightGamlBinaryExprParserRuleCall_1_1_0()); }
	ruleGamlBinaryExpr{ after(grammarAccess.getMultiplicationAccess().getRightGamlBinaryExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GamlBinaryExpr__OpAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlBinaryExprAccess().getOpIDTerminalRuleCall_1_0_1_0()); }
	RULE_ID{ after(grammarAccess.getGamlBinaryExprAccess().getOpIDTerminalRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GamlBinaryExpr__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlBinaryExprAccess().getRightGamlUnitExprParserRuleCall_1_1_0()); }
	ruleGamlUnitExpr{ after(grammarAccess.getGamlBinaryExprAccess().getRightGamlUnitExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GamlUnitExpr__OpAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlUnitExprAccess().getOpNumberSignKeyword_1_0_1_0()); }
(
{ before(grammarAccess.getGamlUnitExprAccess().getOpNumberSignKeyword_1_0_1_0()); }

	'#' 

{ after(grammarAccess.getGamlUnitExprAccess().getOpNumberSignKeyword_1_0_1_0()); }
)

{ after(grammarAccess.getGamlUnitExprAccess().getOpNumberSignKeyword_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GamlUnitExpr__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlUnitExprAccess().getRightUnitNameParserRuleCall_1_1_0()); }
	ruleUnitName{ after(grammarAccess.getGamlUnitExprAccess().getRightUnitNameParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GamlUnaryExpr__OpAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlUnaryExprAccess().getOpAlternatives_1_1_1_0()); }
(rule__GamlUnaryExpr__OpAlternatives_1_1_1_0)
{ after(grammarAccess.getGamlUnaryExprAccess().getOpAlternatives_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GamlUnaryExpr__RightAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlUnaryExprAccess().getRightGamlUnaryExprParserRuleCall_1_1_2_0()); }
	ruleGamlUnaryExpr{ after(grammarAccess.getGamlUnaryExprAccess().getRightGamlUnaryExprParserRuleCall_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberRef__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberRefAccess().getOpFullStopKeyword_1_1_0()); }
(
{ before(grammarAccess.getMemberRefAccess().getOpFullStopKeyword_1_1_0()); }

	'.' 

{ after(grammarAccess.getMemberRefAccess().getOpFullStopKeyword_1_1_0()); }
)

{ after(grammarAccess.getMemberRefAccess().getOpFullStopKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberRef__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberRefAccess().getRightVariableRefParserRuleCall_1_2_0()); }
	ruleVariableRef{ after(grammarAccess.getMemberRefAccess().getRightVariableRefParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ExprsAssignment_2_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getExprsExpressionParserRuleCall_2_2_0_0()); }
	ruleExpression{ after(grammarAccess.getPrimaryExpressionAccess().getExprsExpressionParserRuleCall_2_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ExprsAssignment_2_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getExprsExpressionParserRuleCall_2_2_1_1_0()); }
	ruleExpression{ after(grammarAccess.getPrimaryExpressionAccess().getExprsExpressionParserRuleCall_2_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__LeftAssignment_3_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLeftExpressionParserRuleCall_3_2_0_0()); }
	ruleExpression{ after(grammarAccess.getPrimaryExpressionAccess().getLeftExpressionParserRuleCall_3_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__OpAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getOpCommaKeyword_3_2_1_0()); }
(
{ before(grammarAccess.getPrimaryExpressionAccess().getOpCommaKeyword_3_2_1_0()); }

	',' 

{ after(grammarAccess.getPrimaryExpressionAccess().getOpCommaKeyword_3_2_1_0()); }
)

{ after(grammarAccess.getPrimaryExpressionAccess().getOpCommaKeyword_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__RightAssignment_3_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getRightExpressionParserRuleCall_3_2_2_0()); }
	ruleExpression{ after(grammarAccess.getPrimaryExpressionAccess().getRightExpressionParserRuleCall_3_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ZAssignment_3_2_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getZExpressionParserRuleCall_3_2_3_1_0()); }
	ruleExpression{ after(grammarAccess.getPrimaryExpressionAccess().getZExpressionParserRuleCall_3_2_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__OpAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getOpIDTerminalRuleCall_1_0_0()); }
	RULE_ID{ after(grammarAccess.getFunctionAccess().getOpIDTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__ArgsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getArgsExpressionParserRuleCall_1_2_0()); }
	ruleExpression{ after(grammarAccess.getFunctionAccess().getArgsExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__ArgsAssignment_1_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getArgsExpressionParserRuleCall_1_3_1_0()); }
	ruleExpression{ after(grammarAccess.getFunctionAccess().getArgsExpressionParserRuleCall_1_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnitName__OpAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitNameAccess().getOpIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getUnitNameAccess().getOpIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableRef__RefAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableRefAccess().getRefGamlVarRefCrossReference_1_0()); }
(
{ before(grammarAccess.getVariableRefAccess().getRefGamlVarRefIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getVariableRefAccess().getRefGamlVarRefIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getVariableRefAccess().getRefGamlVarRefCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__ValueAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getValueINTEGERTerminalRuleCall_0_1_0()); }
	RULE_INTEGER{ after(grammarAccess.getTerminalExpressionAccess().getValueINTEGERTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__ValueAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getValueDOUBLETerminalRuleCall_1_1_0()); }
	RULE_DOUBLE{ after(grammarAccess.getTerminalExpressionAccess().getValueDOUBLETerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__ValueAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getValueCOLORTerminalRuleCall_2_1_0()); }
	RULE_COLOR{ after(grammarAccess.getTerminalExpressionAccess().getValueCOLORTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__ValueAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getValueSTRINGTerminalRuleCall_3_1_0()); }
	RULE_STRING{ after(grammarAccess.getTerminalExpressionAccess().getValueSTRINGTerminalRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__ValueAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getValueBOOLEANTerminalRuleCall_4_1_0()); }
	RULE_BOOLEAN{ after(grammarAccess.getTerminalExpressionAccess().getValueBOOLEANTerminalRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_INTEGER : ('0'|'1'..'9' ('0'..'9')*);

RULE_BOOLEAN : ('true'|'false');

RULE_ID : ('a'..'z'|'A'..'Z'|'_'|'0'..'9')+ ('$' ('a'..'z'|'A'..'Z'|'_'|'0'..'9')+)?;

RULE_COLOR : '#' ('0'..'9'|'A'..'F')+;

RULE_DOUBLE : ('1'..'9' ('0'..'9')* ('.' ('0'..'9')+)? (('E'|'e') ('+'|'-')? ('0'..'9')+)?|'0' ('.' ('0'..'9')+)? (('E'|'e') ('+'|'-')? ('0'..'9')+)?);

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


