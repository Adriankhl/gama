/*
* generated by Xtext
*/
grammar InternalGaml;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package msi.gama.lang.gaml.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package msi.gama.lang.gaml.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import msi.gama.lang.gaml.services.GamlGrammarAccess;

}

@parser::members {
 
 	private GamlGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(GamlGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)
{ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport 
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleGamlLangDef
entryRuleGamlLangDef 
:
{ before(grammarAccess.getGamlLangDefRule()); }
	 ruleGamlLangDef
{ after(grammarAccess.getGamlLangDefRule()); } 
	 EOF 
;

// Rule GamlLangDef
ruleGamlLangDef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGamlLangDefAccess().getGroup()); }
(rule__GamlLangDef__Group__0)
{ after(grammarAccess.getGamlLangDefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDefKeyword
entryRuleDefKeyword 
:
{ before(grammarAccess.getDefKeywordRule()); }
	 ruleDefKeyword
{ after(grammarAccess.getDefKeywordRule()); } 
	 EOF 
;

// Rule DefKeyword
ruleDefKeyword
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefKeywordAccess().getGroup()); }
(rule__DefKeyword__Group__0)
{ after(grammarAccess.getDefKeywordAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGamlBlock
entryRuleGamlBlock 
:
{ before(grammarAccess.getGamlBlockRule()); }
	 ruleGamlBlock
{ after(grammarAccess.getGamlBlockRule()); } 
	 EOF 
;

// Rule GamlBlock
ruleGamlBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGamlBlockAccess().getGroup()); }
(rule__GamlBlock__Group__0)
{ after(grammarAccess.getGamlBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDefFacet
entryRuleDefFacet 
:
{ before(grammarAccess.getDefFacetRule()); }
	 ruleDefFacet
{ after(grammarAccess.getDefFacetRule()); } 
	 EOF 
;

// Rule DefFacet
ruleDefFacet
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefFacetAccess().getGroup()); }
(rule__DefFacet__Group__0)
{ after(grammarAccess.getDefFacetAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDefBinaryOp
entryRuleDefBinaryOp 
:
{ before(grammarAccess.getDefBinaryOpRule()); }
	 ruleDefBinaryOp
{ after(grammarAccess.getDefBinaryOpRule()); } 
	 EOF 
;

// Rule DefBinaryOp
ruleDefBinaryOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefBinaryOpAccess().getGroup()); }
(rule__DefBinaryOp__Group__0)
{ after(grammarAccess.getDefBinaryOpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDefReserved
entryRuleDefReserved 
:
{ before(grammarAccess.getDefReservedRule()); }
	 ruleDefReserved
{ after(grammarAccess.getDefReservedRule()); } 
	 EOF 
;

// Rule DefReserved
ruleDefReserved
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefReservedAccess().getGroup()); }
(rule__DefReserved__Group__0)
{ after(grammarAccess.getDefReservedAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDefUnit
entryRuleDefUnit 
:
{ before(grammarAccess.getDefUnitRule()); }
	 ruleDefUnit
{ after(grammarAccess.getDefUnitRule()); } 
	 EOF 
;

// Rule DefUnit
ruleDefUnit
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefUnitAccess().getGroup()); }
(rule__DefUnit__Group__0)
{ after(grammarAccess.getDefUnitAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleGamlKeywordRef
entryRuleGamlKeywordRef 
:
{ before(grammarAccess.getGamlKeywordRefRule()); }
	 ruleGamlKeywordRef
{ after(grammarAccess.getGamlKeywordRefRule()); } 
	 EOF 
;

// Rule GamlKeywordRef
ruleGamlKeywordRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGamlKeywordRefAccess().getRefAssignment()); }
(rule__GamlKeywordRef__RefAssignment)
{ after(grammarAccess.getGamlKeywordRefAccess().getRefAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGamlFacetRef
entryRuleGamlFacetRef 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getGamlFacetRefRule()); }
	 ruleGamlFacetRef
{ after(grammarAccess.getGamlFacetRefRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule GamlFacetRef
ruleGamlFacetRef
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGamlFacetRefAccess().getGroup()); }
(rule__GamlFacetRef__Group__0)
{ after(grammarAccess.getGamlFacetRefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleGamlBinarOpRef
entryRuleGamlBinarOpRef 
:
{ before(grammarAccess.getGamlBinarOpRefRule()); }
	 ruleGamlBinarOpRef
{ after(grammarAccess.getGamlBinarOpRefRule()); } 
	 EOF 
;

// Rule GamlBinarOpRef
ruleGamlBinarOpRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGamlBinarOpRefAccess().getRefAssignment()); }
(rule__GamlBinarOpRef__RefAssignment)
{ after(grammarAccess.getGamlBinarOpRefAccess().getRefAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGamlUnitRef
entryRuleGamlUnitRef 
:
{ before(grammarAccess.getGamlUnitRefRule()); }
	 ruleGamlUnitRef
{ after(grammarAccess.getGamlUnitRefRule()); } 
	 EOF 
;

// Rule GamlUnitRef
ruleGamlUnitRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGamlUnitRefAccess().getRefAssignment()); }
(rule__GamlUnitRef__RefAssignment)
{ after(grammarAccess.getGamlUnitRefAccess().getRefAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGamlReservedRef
entryRuleGamlReservedRef 
:
{ before(grammarAccess.getGamlReservedRefRule()); }
	 ruleGamlReservedRef
{ after(grammarAccess.getGamlReservedRefRule()); } 
	 EOF 
;

// Rule GamlReservedRef
ruleGamlReservedRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGamlReservedRefAccess().getRefAssignment()); }
(rule__GamlReservedRef__RefAssignment)
{ after(grammarAccess.getGamlReservedRefAccess().getRefAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatement
entryRuleStatement 
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementAccess().getAlternatives()); }
(rule__Statement__Alternatives)
{ after(grammarAccess.getStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSubStatement
entryRuleSubStatement 
:
{ before(grammarAccess.getSubStatementRule()); }
	 ruleSubStatement
{ after(grammarAccess.getSubStatementRule()); } 
	 EOF 
;

// Rule SubStatement
ruleSubStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSubStatementAccess().getAlternatives()); }
(rule__SubStatement__Alternatives)
{ after(grammarAccess.getSubStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSetEval
entryRuleSetEval 
:
{ before(grammarAccess.getSetEvalRule()); }
	 ruleSetEval
{ after(grammarAccess.getSetEvalRule()); } 
	 EOF 
;

// Rule SetEval
ruleSetEval
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSetEvalAccess().getGroup()); }
(rule__SetEval__Group__0)
{ after(grammarAccess.getSetEvalAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDefinition
entryRuleDefinition 
:
{ before(grammarAccess.getDefinitionRule()); }
	 ruleDefinition
{ after(grammarAccess.getDefinitionRule()); } 
	 EOF 
;

// Rule Definition
ruleDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefinitionAccess().getGroup()); }
(rule__Definition__Group__0)
{ after(grammarAccess.getDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEvaluation
entryRuleEvaluation 
:
{ before(grammarAccess.getEvaluationRule()); }
	 ruleEvaluation
{ after(grammarAccess.getEvaluationRule()); } 
	 EOF 
;

// Rule Evaluation
ruleEvaluation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEvaluationAccess().getGroup()); }
(rule__Evaluation__Group__0)
{ after(grammarAccess.getEvaluationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFacetExpr
entryRuleFacetExpr 
:
{ before(grammarAccess.getFacetExprRule()); }
	 ruleFacetExpr
{ after(grammarAccess.getFacetExprRule()); } 
	 EOF 
;

// Rule FacetExpr
ruleFacetExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFacetExprAccess().getAlternatives()); }
(rule__FacetExpr__Alternatives)
{ after(grammarAccess.getFacetExprAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBlock
entryRuleBlock 
:
{ before(grammarAccess.getBlockRule()); }
	 ruleBlock
{ after(grammarAccess.getBlockRule()); } 
	 EOF 
;

// Rule Block
ruleBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBlockAccess().getGroup()); }
(rule__Block__Group__0)
{ after(grammarAccess.getBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getAssignmentOpParserRuleCall()); }
	ruleAssignmentOp
{ after(grammarAccess.getExpressionAccess().getAssignmentOpParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssignmentOp
entryRuleAssignmentOp 
:
{ before(grammarAccess.getAssignmentOpRule()); }
	 ruleAssignmentOp
{ after(grammarAccess.getAssignmentOpRule()); } 
	 EOF 
;

// Rule AssignmentOp
ruleAssignmentOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignmentOpAccess().getGroup()); }
(rule__AssignmentOp__Group__0)
{ after(grammarAccess.getAssignmentOpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTernExp
entryRuleTernExp 
:
{ before(grammarAccess.getTernExpRule()); }
	 ruleTernExp
{ after(grammarAccess.getTernExpRule()); } 
	 EOF 
;

// Rule TernExp
ruleTernExp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTernExpAccess().getGroup()); }
(rule__TernExp__Group__0)
{ after(grammarAccess.getTernExpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOrExp
entryRuleOrExp 
:
{ before(grammarAccess.getOrExpRule()); }
	 ruleOrExp
{ after(grammarAccess.getOrExpRule()); } 
	 EOF 
;

// Rule OrExp
ruleOrExp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOrExpAccess().getGroup()); }
(rule__OrExp__Group__0)
{ after(grammarAccess.getOrExpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAndExp
entryRuleAndExp 
:
{ before(grammarAccess.getAndExpRule()); }
	 ruleAndExp
{ after(grammarAccess.getAndExpRule()); } 
	 EOF 
;

// Rule AndExp
ruleAndExp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAndExpAccess().getGroup()); }
(rule__AndExp__Group__0)
{ after(grammarAccess.getAndExpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelational
entryRuleRelational 
:
{ before(grammarAccess.getRelationalRule()); }
	 ruleRelational
{ after(grammarAccess.getRelationalRule()); } 
	 EOF 
;

// Rule Relational
ruleRelational
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationalAccess().getGroup()); }
(rule__Relational__Group__0)
{ after(grammarAccess.getRelationalAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePairExpr
entryRulePairExpr 
:
{ before(grammarAccess.getPairExprRule()); }
	 rulePairExpr
{ after(grammarAccess.getPairExprRule()); } 
	 EOF 
;

// Rule PairExpr
rulePairExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPairExprAccess().getGroup()); }
(rule__PairExpr__Group__0)
{ after(grammarAccess.getPairExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAddition
entryRuleAddition 
:
{ before(grammarAccess.getAdditionRule()); }
	 ruleAddition
{ after(grammarAccess.getAdditionRule()); } 
	 EOF 
;

// Rule Addition
ruleAddition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAdditionAccess().getGroup()); }
(rule__Addition__Group__0)
{ after(grammarAccess.getAdditionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultiplication
entryRuleMultiplication 
:
{ before(grammarAccess.getMultiplicationRule()); }
	 ruleMultiplication
{ after(grammarAccess.getMultiplicationRule()); } 
	 EOF 
;

// Rule Multiplication
ruleMultiplication
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultiplicationAccess().getGroup()); }
(rule__Multiplication__Group__0)
{ after(grammarAccess.getMultiplicationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGamlBinExpr
entryRuleGamlBinExpr 
:
{ before(grammarAccess.getGamlBinExprRule()); }
	 ruleGamlBinExpr
{ after(grammarAccess.getGamlBinExprRule()); } 
	 EOF 
;

// Rule GamlBinExpr
ruleGamlBinExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGamlBinExprAccess().getGroup()); }
(rule__GamlBinExpr__Group__0)
{ after(grammarAccess.getGamlBinExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePower
entryRulePower 
:
{ before(grammarAccess.getPowerRule()); }
	 rulePower
{ after(grammarAccess.getPowerRule()); } 
	 EOF 
;

// Rule Power
rulePower
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPowerAccess().getGroup()); }
(rule__Power__Group__0)
{ after(grammarAccess.getPowerAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGamlUnitExpr
entryRuleGamlUnitExpr 
:
{ before(grammarAccess.getGamlUnitExprRule()); }
	 ruleGamlUnitExpr
{ after(grammarAccess.getGamlUnitExprRule()); } 
	 EOF 
;

// Rule GamlUnitExpr
ruleGamlUnitExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGamlUnitExprAccess().getGroup()); }
(rule__GamlUnitExpr__Group__0)
{ after(grammarAccess.getGamlUnitExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGamlUnaryExpr
entryRuleGamlUnaryExpr 
:
{ before(grammarAccess.getGamlUnaryExprRule()); }
	 ruleGamlUnaryExpr
{ after(grammarAccess.getGamlUnaryExprRule()); } 
	 EOF 
;

// Rule GamlUnaryExpr
ruleGamlUnaryExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGamlUnaryExprAccess().getAlternatives()); }
(rule__GamlUnaryExpr__Alternatives)
{ after(grammarAccess.getGamlUnaryExprAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnarOp
entryRuleUnarOp 
:
{ before(grammarAccess.getUnarOpRule()); }
	 ruleUnarOp
{ after(grammarAccess.getUnarOpRule()); } 
	 EOF 
;

// Rule UnarOp
ruleUnarOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnarOpAccess().getAlternatives()); }
(rule__UnarOp__Alternatives)
{ after(grammarAccess.getUnarOpAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrePrimaryExpr
entryRulePrePrimaryExpr 
:
{ before(grammarAccess.getPrePrimaryExprRule()); }
	 rulePrePrimaryExpr
{ after(grammarAccess.getPrePrimaryExprRule()); } 
	 EOF 
;

// Rule PrePrimaryExpr
rulePrePrimaryExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrePrimaryExprAccess().getAlternatives()); }
(rule__PrePrimaryExpr__Alternatives)
{ after(grammarAccess.getPrePrimaryExprAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMemberRef
entryRuleMemberRef 
:
{ before(grammarAccess.getMemberRefRule()); }
	 ruleMemberRef
{ after(grammarAccess.getMemberRefRule()); } 
	 EOF 
;

// Rule MemberRef
ruleMemberRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMemberRefAccess().getGroup()); }
(rule__MemberRef__Group__0)
{ after(grammarAccess.getMemberRefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression 
:
{ before(grammarAccess.getPrimaryExpressionRule()); }
	 rulePrimaryExpression
{ after(grammarAccess.getPrimaryExpressionRule()); } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
(rule__PrimaryExpression__Alternatives)
{ after(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePoint
entryRulePoint 
:
{ before(grammarAccess.getPointRule()); }
	 rulePoint
{ after(grammarAccess.getPointRule()); } 
	 EOF 
;

// Rule Point
rulePoint
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPointAccess().getGroup()); }
(rule__Point__Group__0)
{ after(grammarAccess.getPointAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMatrix
entryRuleMatrix 
:
{ before(grammarAccess.getMatrixRule()); }
	 ruleMatrix
{ after(grammarAccess.getMatrixRule()); } 
	 EOF 
;

// Rule Matrix
ruleMatrix
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMatrixAccess().getGroup()); }
(rule__Matrix__Group__0)
{ after(grammarAccess.getMatrixAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRow
entryRuleRow 
:
{ before(grammarAccess.getRowRule()); }
	 ruleRow
{ after(grammarAccess.getRowRule()); } 
	 EOF 
;

// Rule Row
ruleRow
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRowAccess().getGroup()); }
(rule__Row__Group__0)
{ after(grammarAccess.getRowAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRightMemberRef
entryRuleRightMemberRef 
:
{ before(grammarAccess.getRightMemberRefRule()); }
	 ruleRightMemberRef
{ after(grammarAccess.getRightMemberRefRule()); } 
	 EOF 
;

// Rule RightMemberRef
ruleRightMemberRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRightMemberRefAccess().getGroup()); }
(rule__RightMemberRef__Group__0)
{ after(grammarAccess.getRightMemberRefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAbrstractRef
entryRuleAbrstractRef 
:
{ before(grammarAccess.getAbrstractRefRule()); }
	 ruleAbrstractRef
{ after(grammarAccess.getAbrstractRefRule()); } 
	 EOF 
;

// Rule AbrstractRef
ruleAbrstractRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAbrstractRefAccess().getGroup()); }
(rule__AbrstractRef__Group__0)
{ after(grammarAccess.getAbrstractRefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableRef
entryRuleVariableRef 
:
{ before(grammarAccess.getVariableRefRule()); }
	 ruleVariableRef
{ after(grammarAccess.getVariableRefRule()); } 
	 EOF 
;

// Rule VariableRef
ruleVariableRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableRefAccess().getRefAssignment()); }
(rule__VariableRef__RefAssignment)
{ after(grammarAccess.getVariableRefAccess().getRefAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTerminalExpression
entryRuleTerminalExpression 
:
{ before(grammarAccess.getTerminalExpressionRule()); }
	 ruleTerminalExpression
{ after(grammarAccess.getTerminalExpressionRule()); } 
	 EOF 
;

// Rule TerminalExpression
ruleTerminalExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTerminalExpressionAccess().getAlternatives()); }
(rule__TerminalExpression__Alternatives)
{ after(grammarAccess.getTerminalExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFQN
entryRuleFQN 
:
{ before(grammarAccess.getFQNRule()); }
	 ruleFQN
{ after(grammarAccess.getFQNRule()); } 
	 EOF 
;

// Rule FQN
ruleFQN
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFQNAccess().getGroup()); }
(rule__FQN__Group__0)
{ after(grammarAccess.getFQNAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__GamlLangDef__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlLangDefAccess().getKAssignment_2_0()); }
(rule__GamlLangDef__KAssignment_2_0)
{ after(grammarAccess.getGamlLangDefAccess().getKAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getGamlLangDefAccess().getFAssignment_2_1()); }
(rule__GamlLangDef__FAssignment_2_1)
{ after(grammarAccess.getGamlLangDefAccess().getFAssignment_2_1()); }
)

    |(
{ before(grammarAccess.getGamlLangDefAccess().getBAssignment_2_2()); }
(rule__GamlLangDef__BAssignment_2_2)
{ after(grammarAccess.getGamlLangDefAccess().getBAssignment_2_2()); }
)

    |(
{ before(grammarAccess.getGamlLangDefAccess().getRAssignment_2_3()); }
(rule__GamlLangDef__RAssignment_2_3)
{ after(grammarAccess.getGamlLangDefAccess().getRAssignment_2_3()); }
)

    |(
{ before(grammarAccess.getGamlLangDefAccess().getUAssignment_2_4()); }
(rule__GamlLangDef__UAssignment_2_4)
{ after(grammarAccess.getGamlLangDefAccess().getUAssignment_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefKeyword__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefKeywordAccess().getBlockAssignment_2_0()); }
(rule__DefKeyword__BlockAssignment_2_0)
{ after(grammarAccess.getDefKeywordAccess().getBlockAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getDefKeywordAccess().getSemicolonKeyword_2_1()); }

	';' 

{ after(grammarAccess.getDefKeywordAccess().getSemicolonKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSetEvalParserRuleCall_0()); }
	ruleSetEval
{ after(grammarAccess.getStatementAccess().getSetEvalParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getSubStatementParserRuleCall_1()); }
	ruleSubStatement
{ after(grammarAccess.getStatementAccess().getSubStatementParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubStatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubStatementAccess().getDefinitionParserRuleCall_0()); }
	ruleDefinition
{ after(grammarAccess.getSubStatementAccess().getDefinitionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getSubStatementAccess().getEvaluationParserRuleCall_1()); }
	ruleEvaluation
{ after(grammarAccess.getSubStatementAccess().getEvaluationParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SetEval__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetEvalAccess().getBlockAssignment_3_0()); }
(rule__SetEval__BlockAssignment_3_0)
{ after(grammarAccess.getSetEvalAccess().getBlockAssignment_3_0()); }
)

    |(
{ before(grammarAccess.getSetEvalAccess().getSemicolonKeyword_3_1()); }

	';' 

{ after(grammarAccess.getSetEvalAccess().getSemicolonKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getBlockAssignment_3_0()); }
(rule__Definition__BlockAssignment_3_0)
{ after(grammarAccess.getDefinitionAccess().getBlockAssignment_3_0()); }
)

    |(
{ before(grammarAccess.getDefinitionAccess().getSemicolonKeyword_3_1()); }

	';' 

{ after(grammarAccess.getDefinitionAccess().getSemicolonKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Evaluation__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEvaluationAccess().getBlockAssignment_3_0()); }
(rule__Evaluation__BlockAssignment_3_0)
{ after(grammarAccess.getEvaluationAccess().getBlockAssignment_3_0()); }
)

    |(
{ before(grammarAccess.getEvaluationAccess().getSemicolonKeyword_3_1()); }

	';' 

{ after(grammarAccess.getEvaluationAccess().getSemicolonKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FacetExpr__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetExprAccess().getGroup_0()); }
(rule__FacetExpr__Group_0__0)
{ after(grammarAccess.getFacetExprAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getFacetExprAccess().getGroup_1()); }
(rule__FacetExpr__Group_1__0)
{ after(grammarAccess.getFacetExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssignmentOp__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentOpAccess().getGroup_1_0_0()); }
(rule__AssignmentOp__Group_1_0_0__0)
{ after(grammarAccess.getAssignmentOpAccess().getGroup_1_0_0()); }
)

    |(
{ before(grammarAccess.getAssignmentOpAccess().getGroup_1_0_1()); }
(rule__AssignmentOp__Group_1_0_1__0)
{ after(grammarAccess.getAssignmentOpAccess().getGroup_1_0_1()); }
)

    |(
{ before(grammarAccess.getAssignmentOpAccess().getGroup_1_0_2()); }
(rule__AssignmentOp__Group_1_0_2__0)
{ after(grammarAccess.getAssignmentOpAccess().getGroup_1_0_2()); }
)

    |(
{ before(grammarAccess.getAssignmentOpAccess().getGroup_1_0_3()); }
(rule__AssignmentOp__Group_1_0_3__0)
{ after(grammarAccess.getAssignmentOpAccess().getGroup_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relational__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalAccess().getGroup_1_0_0()); }
(rule__Relational__Group_1_0_0__0)
{ after(grammarAccess.getRelationalAccess().getGroup_1_0_0()); }
)

    |(
{ before(grammarAccess.getRelationalAccess().getGroup_1_0_1()); }
(rule__Relational__Group_1_0_1__0)
{ after(grammarAccess.getRelationalAccess().getGroup_1_0_1()); }
)

    |(
{ before(grammarAccess.getRelationalAccess().getGroup_1_0_2()); }
(rule__Relational__Group_1_0_2__0)
{ after(grammarAccess.getRelationalAccess().getGroup_1_0_2()); }
)

    |(
{ before(grammarAccess.getRelationalAccess().getGroup_1_0_3()); }
(rule__Relational__Group_1_0_3__0)
{ after(grammarAccess.getRelationalAccess().getGroup_1_0_3()); }
)

    |(
{ before(grammarAccess.getRelationalAccess().getGroup_1_0_4()); }
(rule__Relational__Group_1_0_4__0)
{ after(grammarAccess.getRelationalAccess().getGroup_1_0_4()); }
)

    |(
{ before(grammarAccess.getRelationalAccess().getGroup_1_0_5()); }
(rule__Relational__Group_1_0_5__0)
{ after(grammarAccess.getRelationalAccess().getGroup_1_0_5()); }
)

    |(
{ before(grammarAccess.getRelationalAccess().getGroup_1_0_6()); }
(rule__Relational__Group_1_0_6__0)
{ after(grammarAccess.getRelationalAccess().getGroup_1_0_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getGroup_1_0_0()); }
(rule__Addition__Group_1_0_0__0)
{ after(grammarAccess.getAdditionAccess().getGroup_1_0_0()); }
)

    |(
{ before(grammarAccess.getAdditionAccess().getGroup_1_0_1()); }
(rule__Addition__Group_1_0_1__0)
{ after(grammarAccess.getAdditionAccess().getGroup_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getGroup_1_0_0()); }
(rule__Multiplication__Group_1_0_0__0)
{ after(grammarAccess.getMultiplicationAccess().getGroup_1_0_0()); }
)

    |(
{ before(grammarAccess.getMultiplicationAccess().getGroup_1_0_1()); }
(rule__Multiplication__Group_1_0_1__0)
{ after(grammarAccess.getMultiplicationAccess().getGroup_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GamlUnaryExpr__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlUnaryExprAccess().getPrePrimaryExprParserRuleCall_0()); }
	rulePrePrimaryExpr
{ after(grammarAccess.getGamlUnaryExprAccess().getPrePrimaryExprParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getGamlUnaryExprAccess().getGroup_1()); }
(rule__GamlUnaryExpr__Group_1__0)
{ after(grammarAccess.getGamlUnaryExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnarOp__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnarOpAccess().getHyphenMinusKeyword_0()); }

	'-' 

{ after(grammarAccess.getUnarOpAccess().getHyphenMinusKeyword_0()); }
)

    |(
{ before(grammarAccess.getUnarOpAccess().getExclamationMarkKeyword_1()); }

	'!' 

{ after(grammarAccess.getUnarOpAccess().getExclamationMarkKeyword_1()); }
)

    |(
{ before(grammarAccess.getUnarOpAccess().getMyKeyword_2()); }

	'my' 

{ after(grammarAccess.getUnarOpAccess().getMyKeyword_2()); }
)

    |(
{ before(grammarAccess.getUnarOpAccess().getTheKeyword_3()); }

	'the' 

{ after(grammarAccess.getUnarOpAccess().getTheKeyword_3()); }
)

    |(
{ before(grammarAccess.getUnarOpAccess().getNotKeyword_4()); }

	'not' 

{ after(grammarAccess.getUnarOpAccess().getNotKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrePrimaryExpr__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrePrimaryExprAccess().getTerminalExpressionParserRuleCall_0()); }
	ruleTerminalExpression
{ after(grammarAccess.getPrePrimaryExprAccess().getTerminalExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPrePrimaryExprAccess().getRightMemberRefParserRuleCall_1()); }
	ruleRightMemberRef
{ after(grammarAccess.getPrePrimaryExprAccess().getRightMemberRefParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getPrePrimaryExprAccess().getMemberRefParserRuleCall_2()); }
	ruleMemberRef
{ after(grammarAccess.getPrePrimaryExprAccess().getMemberRefParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_0()); }
(rule__PrimaryExpression__Group_0__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_1()); }
(rule__PrimaryExpression__Group_1__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_2()); }
(rule__PrimaryExpression__Group_2__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AbrstractRef__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbrstractRefAccess().getGroup_1_0()); }
(rule__AbrstractRef__Group_1_0__0)
{ after(grammarAccess.getAbrstractRefAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getAbrstractRefAccess().getGroup_1_1()); }
(rule__AbrstractRef__Group_1_1__0)
{ after(grammarAccess.getAbrstractRefAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getGroup_0()); }
(rule__TerminalExpression__Group_0__0)
{ after(grammarAccess.getTerminalExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getGroup_1()); }
(rule__TerminalExpression__Group_1__0)
{ after(grammarAccess.getTerminalExpressionAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getGroup_2()); }
(rule__TerminalExpression__Group_2__0)
{ after(grammarAccess.getTerminalExpressionAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getGroup_3()); }
(rule__TerminalExpression__Group_3__0)
{ after(grammarAccess.getTerminalExpressionAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getGroup_4()); }
(rule__TerminalExpression__Group_4__0)
{ after(grammarAccess.getTerminalExpressionAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getModelKeyword_0()); }

	'model' 

{ after(grammarAccess.getModelAccess().getModelKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getNameAssignment_1()); }
(rule__Model__NameAssignment_1)
{ after(grammarAccess.getModelAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__2__Impl
	rule__Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getImportsAssignment_2()); }
(rule__Model__ImportsAssignment_2)*
{ after(grammarAccess.getModelAccess().getImportsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__3__Impl
	rule__Model__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getGamlAssignment_3()); }
(rule__Model__GamlAssignment_3)?
{ after(grammarAccess.getModelAccess().getGamlAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getStatementsAssignment_4()); }
(rule__Model__StatementsAssignment_4)*
{ after(grammarAccess.getModelAccess().getStatementsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportURIAssignment_1()); }
(rule__Import__ImportURIAssignment_1)
{ after(grammarAccess.getImportAccess().getImportURIAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__GamlLangDef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlLangDef__Group__0__Impl
	rule__GamlLangDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlLangDef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlLangDefAccess().get_gamlKeyword_0()); }

	'_gaml' 

{ after(grammarAccess.getGamlLangDefAccess().get_gamlKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GamlLangDef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlLangDef__Group__1__Impl
	rule__GamlLangDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlLangDef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlLangDefAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getGamlLangDefAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GamlLangDef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlLangDef__Group__2__Impl
	rule__GamlLangDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlLangDef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getGamlLangDefAccess().getAlternatives_2()); }
(rule__GamlLangDef__Alternatives_2)
{ after(grammarAccess.getGamlLangDefAccess().getAlternatives_2()); }
)
(
{ before(grammarAccess.getGamlLangDefAccess().getAlternatives_2()); }
(rule__GamlLangDef__Alternatives_2)*
{ after(grammarAccess.getGamlLangDefAccess().getAlternatives_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GamlLangDef__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlLangDef__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlLangDef__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlLangDefAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getGamlLangDefAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__DefKeyword__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefKeyword__Group__0__Impl
	rule__DefKeyword__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefKeyword__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefKeywordAccess().get_keywordKeyword_0()); }

	'_keyword' 

{ after(grammarAccess.getDefKeywordAccess().get_keywordKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefKeyword__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefKeyword__Group__1__Impl
	rule__DefKeyword__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefKeyword__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefKeywordAccess().getNameAssignment_1()); }
(rule__DefKeyword__NameAssignment_1)
{ after(grammarAccess.getDefKeywordAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefKeyword__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefKeyword__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefKeyword__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefKeywordAccess().getAlternatives_2()); }
(rule__DefKeyword__Alternatives_2)
{ after(grammarAccess.getDefKeywordAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__GamlBlock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlBlock__Group__0__Impl
	rule__GamlBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlBlock__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlBlockAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getGamlBlockAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GamlBlock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlBlock__Group__1__Impl
	rule__GamlBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlBlock__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlBlockAccess().getGamlBlockAction_1()); }
(

)
{ after(grammarAccess.getGamlBlockAccess().getGamlBlockAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GamlBlock__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlBlock__Group__2__Impl
	rule__GamlBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlBlock__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlBlockAccess().getGroup_2()); }
(rule__GamlBlock__Group_2__0)?
{ after(grammarAccess.getGamlBlockAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GamlBlock__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlBlock__Group__3__Impl
	rule__GamlBlock__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlBlock__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlBlockAccess().getGroup_3()); }
(rule__GamlBlock__Group_3__0)?
{ after(grammarAccess.getGamlBlockAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GamlBlock__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlBlock__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlBlock__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlBlockAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getGamlBlockAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__GamlBlock__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlBlock__Group_2__0__Impl
	rule__GamlBlock__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlBlock__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlBlockAccess().get_facetsKeyword_2_0()); }

	'_facets' 

{ after(grammarAccess.getGamlBlockAccess().get_facetsKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GamlBlock__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlBlock__Group_2__1__Impl
	rule__GamlBlock__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlBlock__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlBlockAccess().getLeftSquareBracketKeyword_2_1()); }

	'[' 

{ after(grammarAccess.getGamlBlockAccess().getLeftSquareBracketKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GamlBlock__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlBlock__Group_2__2__Impl
	rule__GamlBlock__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlBlock__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlBlockAccess().getFacetsAssignment_2_2()); }
(rule__GamlBlock__FacetsAssignment_2_2)
{ after(grammarAccess.getGamlBlockAccess().getFacetsAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GamlBlock__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlBlock__Group_2__3__Impl
	rule__GamlBlock__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlBlock__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlBlockAccess().getGroup_2_3()); }
(rule__GamlBlock__Group_2_3__0)*
{ after(grammarAccess.getGamlBlockAccess().getGroup_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GamlBlock__Group_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlBlock__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlBlock__Group_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlBlockAccess().getRightSquareBracketKeyword_2_4()); }

	']' 

{ after(grammarAccess.getGamlBlockAccess().getRightSquareBracketKeyword_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__GamlBlock__Group_2_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlBlock__Group_2_3__0__Impl
	rule__GamlBlock__Group_2_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlBlock__Group_2_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlBlockAccess().getCommaKeyword_2_3_0()); }

	',' 

{ after(grammarAccess.getGamlBlockAccess().getCommaKeyword_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GamlBlock__Group_2_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlBlock__Group_2_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlBlock__Group_2_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlBlockAccess().getFacetsAssignment_2_3_1()); }
(rule__GamlBlock__FacetsAssignment_2_3_1)
{ after(grammarAccess.getGamlBlockAccess().getFacetsAssignment_2_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GamlBlock__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlBlock__Group_3__0__Impl
	rule__GamlBlock__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlBlock__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlBlockAccess().get_childrenKeyword_3_0()); }

	'_children' 

{ after(grammarAccess.getGamlBlockAccess().get_childrenKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GamlBlock__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlBlock__Group_3__1__Impl
	rule__GamlBlock__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlBlock__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlBlockAccess().getLeftSquareBracketKeyword_3_1()); }

	'[' 

{ after(grammarAccess.getGamlBlockAccess().getLeftSquareBracketKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GamlBlock__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlBlock__Group_3__2__Impl
	rule__GamlBlock__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlBlock__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlBlockAccess().getChildsAssignment_3_2()); }
(rule__GamlBlock__ChildsAssignment_3_2)
{ after(grammarAccess.getGamlBlockAccess().getChildsAssignment_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GamlBlock__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlBlock__Group_3__3__Impl
	rule__GamlBlock__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlBlock__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlBlockAccess().getGroup_3_3()); }
(rule__GamlBlock__Group_3_3__0)*
{ after(grammarAccess.getGamlBlockAccess().getGroup_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GamlBlock__Group_3__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlBlock__Group_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlBlock__Group_3__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlBlockAccess().getRightSquareBracketKeyword_3_4()); }

	']' 

{ after(grammarAccess.getGamlBlockAccess().getRightSquareBracketKeyword_3_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__GamlBlock__Group_3_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlBlock__Group_3_3__0__Impl
	rule__GamlBlock__Group_3_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlBlock__Group_3_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlBlockAccess().getCommaKeyword_3_3_0()); }

	',' 

{ after(grammarAccess.getGamlBlockAccess().getCommaKeyword_3_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GamlBlock__Group_3_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlBlock__Group_3_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlBlock__Group_3_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlBlockAccess().getChildsAssignment_3_3_1()); }
(rule__GamlBlock__ChildsAssignment_3_3_1)
{ after(grammarAccess.getGamlBlockAccess().getChildsAssignment_3_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DefFacet__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefFacet__Group__0__Impl
	rule__DefFacet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefFacet__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefFacetAccess().get_facetKeyword_0()); }

	'_facet' 

{ after(grammarAccess.getDefFacetAccess().get_facetKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefFacet__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefFacet__Group__1__Impl
	rule__DefFacet__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefFacet__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefFacetAccess().getNameAssignment_1()); }
(rule__DefFacet__NameAssignment_1)
{ after(grammarAccess.getDefFacetAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefFacet__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefFacet__Group__2__Impl
	rule__DefFacet__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DefFacet__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefFacetAccess().getGroup_2()); }
(rule__DefFacet__Group_2__0)?
{ after(grammarAccess.getDefFacetAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefFacet__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefFacet__Group__3__Impl
	rule__DefFacet__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DefFacet__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefFacetAccess().getGroup_3()); }
(rule__DefFacet__Group_3__0)?
{ after(grammarAccess.getDefFacetAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefFacet__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefFacet__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefFacet__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefFacetAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getDefFacetAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__DefFacet__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefFacet__Group_2__0__Impl
	rule__DefFacet__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefFacet__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefFacetAccess().getColonKeyword_2_0()); }

	':' 

{ after(grammarAccess.getDefFacetAccess().getColonKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefFacet__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefFacet__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefFacet__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefFacetAccess().getTypeAssignment_2_1()); }
(rule__DefFacet__TypeAssignment_2_1)
{ after(grammarAccess.getDefFacetAccess().getTypeAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DefFacet__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefFacet__Group_3__0__Impl
	rule__DefFacet__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefFacet__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefFacetAccess().getEqualsSignKeyword_3_0()); }

	'=' 

{ after(grammarAccess.getDefFacetAccess().getEqualsSignKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefFacet__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefFacet__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefFacet__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefFacetAccess().getDefaultAssignment_3_1()); }
(rule__DefFacet__DefaultAssignment_3_1)
{ after(grammarAccess.getDefFacetAccess().getDefaultAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DefBinaryOp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefBinaryOp__Group__0__Impl
	rule__DefBinaryOp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefBinaryOp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefBinaryOpAccess().get_binaryKeyword_0()); }

	'_binary' 

{ after(grammarAccess.getDefBinaryOpAccess().get_binaryKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefBinaryOp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefBinaryOp__Group__1__Impl
	rule__DefBinaryOp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefBinaryOp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefBinaryOpAccess().getNameAssignment_1()); }
(rule__DefBinaryOp__NameAssignment_1)
{ after(grammarAccess.getDefBinaryOpAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefBinaryOp__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefBinaryOp__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefBinaryOp__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefBinaryOpAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getDefBinaryOpAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DefReserved__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefReserved__Group__0__Impl
	rule__DefReserved__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefReserved__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefReservedAccess().get_reservedKeyword_0()); }

	'_reserved' 

{ after(grammarAccess.getDefReservedAccess().get_reservedKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefReserved__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefReserved__Group__1__Impl
	rule__DefReserved__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefReserved__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefReservedAccess().getNameAssignment_1()); }
(rule__DefReserved__NameAssignment_1)
{ after(grammarAccess.getDefReservedAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefReserved__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefReserved__Group__2__Impl
	rule__DefReserved__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DefReserved__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefReservedAccess().getGroup_2()); }
(rule__DefReserved__Group_2__0)?
{ after(grammarAccess.getDefReservedAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefReserved__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefReserved__Group__3__Impl
	rule__DefReserved__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DefReserved__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefReservedAccess().getGroup_3()); }
(rule__DefReserved__Group_3__0)?
{ after(grammarAccess.getDefReservedAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefReserved__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefReserved__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefReserved__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefReservedAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getDefReservedAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__DefReserved__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefReserved__Group_2__0__Impl
	rule__DefReserved__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefReserved__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefReservedAccess().getColonKeyword_2_0()); }

	':' 

{ after(grammarAccess.getDefReservedAccess().getColonKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefReserved__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefReserved__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefReserved__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefReservedAccess().getTypeAssignment_2_1()); }
(rule__DefReserved__TypeAssignment_2_1)
{ after(grammarAccess.getDefReservedAccess().getTypeAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DefReserved__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefReserved__Group_3__0__Impl
	rule__DefReserved__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefReserved__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefReservedAccess().getEqualsSignKeyword_3_0()); }

	'=' 

{ after(grammarAccess.getDefReservedAccess().getEqualsSignKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefReserved__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefReserved__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefReserved__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefReservedAccess().getValueAssignment_3_1()); }
(rule__DefReserved__ValueAssignment_3_1)
{ after(grammarAccess.getDefReservedAccess().getValueAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DefUnit__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefUnit__Group__0__Impl
	rule__DefUnit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefUnit__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefUnitAccess().get_unitKeyword_0()); }

	'_unit' 

{ after(grammarAccess.getDefUnitAccess().get_unitKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefUnit__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefUnit__Group__1__Impl
	rule__DefUnit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefUnit__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefUnitAccess().getNameAssignment_1()); }
(rule__DefUnit__NameAssignment_1)
{ after(grammarAccess.getDefUnitAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefUnit__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefUnit__Group__2__Impl
	rule__DefUnit__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DefUnit__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefUnitAccess().getGroup_2()); }
(rule__DefUnit__Group_2__0)?
{ after(grammarAccess.getDefUnitAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefUnit__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefUnit__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefUnit__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefUnitAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getDefUnitAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__DefUnit__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefUnit__Group_2__0__Impl
	rule__DefUnit__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefUnit__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefUnitAccess().getEqualsSignKeyword_2_0()); }

	'=' 

{ after(grammarAccess.getDefUnitAccess().getEqualsSignKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefUnit__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefUnit__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefUnit__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefUnitAccess().getCoefAssignment_2_1()); }
(rule__DefUnit__CoefAssignment_2_1)
{ after(grammarAccess.getDefUnitAccess().getCoefAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GamlFacetRef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlFacetRef__Group__0__Impl
	rule__GamlFacetRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlFacetRef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlFacetRefAccess().getRefAssignment_0()); }
(rule__GamlFacetRef__RefAssignment_0)
{ after(grammarAccess.getGamlFacetRefAccess().getRefAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GamlFacetRef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlFacetRef__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlFacetRef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlFacetRefAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getGamlFacetRefAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SetEval__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetEval__Group__0__Impl
	rule__SetEval__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetEval__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetEvalAccess().getSetKeyword_0()); }

	'set' 

{ after(grammarAccess.getSetEvalAccess().getSetKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SetEval__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetEval__Group__1__Impl
	rule__SetEval__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SetEval__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetEvalAccess().getVarAssignment_1()); }
(rule__SetEval__VarAssignment_1)
{ after(grammarAccess.getSetEvalAccess().getVarAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SetEval__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetEval__Group__2__Impl
	rule__SetEval__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SetEval__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetEvalAccess().getFacetsAssignment_2()); }
(rule__SetEval__FacetsAssignment_2)*
{ after(grammarAccess.getSetEvalAccess().getFacetsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SetEval__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetEval__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetEval__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetEvalAccess().getAlternatives_3()); }
(rule__SetEval__Alternatives_3)
{ after(grammarAccess.getSetEvalAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Definition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group__0__Impl
	rule__Definition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getKeyAssignment_0()); }
(rule__Definition__KeyAssignment_0)
{ after(grammarAccess.getDefinitionAccess().getKeyAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group__1__Impl
	rule__Definition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getNameAssignment_1()); }
(rule__Definition__NameAssignment_1)
{ after(grammarAccess.getDefinitionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group__2__Impl
	rule__Definition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getFacetsAssignment_2()); }
(rule__Definition__FacetsAssignment_2)*
{ after(grammarAccess.getDefinitionAccess().getFacetsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getAlternatives_3()); }
(rule__Definition__Alternatives_3)
{ after(grammarAccess.getDefinitionAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Evaluation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Evaluation__Group__0__Impl
	rule__Evaluation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Evaluation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEvaluationAccess().getKeyAssignment_0()); }
(rule__Evaluation__KeyAssignment_0)
{ after(grammarAccess.getEvaluationAccess().getKeyAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Evaluation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Evaluation__Group__1__Impl
	rule__Evaluation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Evaluation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEvaluationAccess().getGroup_1()); }
(rule__Evaluation__Group_1__0)?
{ after(grammarAccess.getEvaluationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Evaluation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Evaluation__Group__2__Impl
	rule__Evaluation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Evaluation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEvaluationAccess().getFacetsAssignment_2()); }
(rule__Evaluation__FacetsAssignment_2)*
{ after(grammarAccess.getEvaluationAccess().getFacetsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Evaluation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Evaluation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Evaluation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEvaluationAccess().getAlternatives_3()); }
(rule__Evaluation__Alternatives_3)
{ after(grammarAccess.getEvaluationAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Evaluation__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Evaluation__Group_1__0__Impl
	rule__Evaluation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Evaluation__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEvaluationAccess().getColonKeyword_1_0()); }

	':' 

{ after(grammarAccess.getEvaluationAccess().getColonKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Evaluation__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Evaluation__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Evaluation__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEvaluationAccess().getVarAssignment_1_1()); }
(rule__Evaluation__VarAssignment_1_1)
{ after(grammarAccess.getEvaluationAccess().getVarAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FacetExpr__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FacetExpr__Group_0__0__Impl
	rule__FacetExpr__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FacetExpr__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetExprAccess().getReturnsKeyword_0_0()); }

	'returns:' 

{ after(grammarAccess.getFacetExprAccess().getReturnsKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FacetExpr__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FacetExpr__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FacetExpr__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetExprAccess().getNameAssignment_0_1()); }
(rule__FacetExpr__NameAssignment_0_1)
{ after(grammarAccess.getFacetExprAccess().getNameAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FacetExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FacetExpr__Group_1__0__Impl
	rule__FacetExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FacetExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetExprAccess().getKeyAssignment_1_0()); }
(rule__FacetExpr__KeyAssignment_1_0)
{ after(grammarAccess.getFacetExprAccess().getKeyAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FacetExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FacetExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FacetExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetExprAccess().getExprAssignment_1_1()); }
(rule__FacetExpr__ExprAssignment_1_1)
{ after(grammarAccess.getFacetExprAccess().getExprAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Block__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__0__Impl
	rule__Block__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getBlockAction_0()); }
(

)
{ after(grammarAccess.getBlockAccess().getBlockAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__1__Impl
	rule__Block__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__2__Impl
	rule__Block__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getStatementsAssignment_2()); }
(rule__Block__StatementsAssignment_2)*
{ after(grammarAccess.getBlockAccess().getStatementsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AssignmentOp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentOp__Group__0__Impl
	rule__AssignmentOp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentOp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentOpAccess().getTernExpParserRuleCall_0()); }
	ruleTernExp
{ after(grammarAccess.getAssignmentOpAccess().getTernExpParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssignmentOp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentOp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentOp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentOpAccess().getGroup_1()); }
(rule__AssignmentOp__Group_1__0)?
{ after(grammarAccess.getAssignmentOpAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AssignmentOp__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentOp__Group_1__0__Impl
	rule__AssignmentOp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentOp__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentOpAccess().getAlternatives_1_0()); }
(rule__AssignmentOp__Alternatives_1_0)
{ after(grammarAccess.getAssignmentOpAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssignmentOp__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentOp__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentOp__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentOpAccess().getRightAssignment_1_1()); }
(rule__AssignmentOp__RightAssignment_1_1)
{ after(grammarAccess.getAssignmentOpAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AssignmentOp__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentOp__Group_1_0_0__0__Impl
	rule__AssignmentOp__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentOp__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentOpAccess().getAssignPlusLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getAssignmentOpAccess().getAssignPlusLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssignmentOp__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentOp__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentOp__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentOpAccess().getPlusSignEqualsSignKeyword_1_0_0_1()); }

	'+=' 

{ after(grammarAccess.getAssignmentOpAccess().getPlusSignEqualsSignKeyword_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AssignmentOp__Group_1_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentOp__Group_1_0_1__0__Impl
	rule__AssignmentOp__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentOp__Group_1_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentOpAccess().getAssignMinLeftAction_1_0_1_0()); }
(

)
{ after(grammarAccess.getAssignmentOpAccess().getAssignMinLeftAction_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssignmentOp__Group_1_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentOp__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentOp__Group_1_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentOpAccess().getHyphenMinusEqualsSignKeyword_1_0_1_1()); }

	'-=' 

{ after(grammarAccess.getAssignmentOpAccess().getHyphenMinusEqualsSignKeyword_1_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AssignmentOp__Group_1_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentOp__Group_1_0_2__0__Impl
	rule__AssignmentOp__Group_1_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentOp__Group_1_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentOpAccess().getAssignMultLeftAction_1_0_2_0()); }
(

)
{ after(grammarAccess.getAssignmentOpAccess().getAssignMultLeftAction_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssignmentOp__Group_1_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentOp__Group_1_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentOp__Group_1_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentOpAccess().getAsteriskEqualsSignKeyword_1_0_2_1()); }

	'*=' 

{ after(grammarAccess.getAssignmentOpAccess().getAsteriskEqualsSignKeyword_1_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AssignmentOp__Group_1_0_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentOp__Group_1_0_3__0__Impl
	rule__AssignmentOp__Group_1_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentOp__Group_1_0_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentOpAccess().getAssignDivLeftAction_1_0_3_0()); }
(

)
{ after(grammarAccess.getAssignmentOpAccess().getAssignDivLeftAction_1_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssignmentOp__Group_1_0_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentOp__Group_1_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentOp__Group_1_0_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentOpAccess().getSolidusEqualsSignKeyword_1_0_3_1()); }

	'/=' 

{ after(grammarAccess.getAssignmentOpAccess().getSolidusEqualsSignKeyword_1_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TernExp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TernExp__Group__0__Impl
	rule__TernExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TernExp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTernExpAccess().getOrExpParserRuleCall_0()); }
	ruleOrExp
{ after(grammarAccess.getTernExpAccess().getOrExpParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TernExp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TernExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TernExp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTernExpAccess().getGroup_1()); }
(rule__TernExp__Group_1__0)?
{ after(grammarAccess.getTernExpAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TernExp__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TernExp__Group_1__0__Impl
	rule__TernExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TernExp__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTernExpAccess().getTernaryConditionAction_1_0()); }
(

)
{ after(grammarAccess.getTernExpAccess().getTernaryConditionAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TernExp__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TernExp__Group_1__1__Impl
	rule__TernExp__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TernExp__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTernExpAccess().getQuestionMarkKeyword_1_1()); }

	'?' 

{ after(grammarAccess.getTernExpAccess().getQuestionMarkKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TernExp__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TernExp__Group_1__2__Impl
	rule__TernExp__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TernExp__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTernExpAccess().getIfTrueAssignment_1_2()); }
(rule__TernExp__IfTrueAssignment_1_2)
{ after(grammarAccess.getTernExpAccess().getIfTrueAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TernExp__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TernExp__Group_1__3__Impl
	rule__TernExp__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TernExp__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTernExpAccess().getColonKeyword_1_3()); }

	':' 

{ after(grammarAccess.getTernExpAccess().getColonKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TernExp__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TernExp__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TernExp__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTernExpAccess().getIfFalseAssignment_1_4()); }
(rule__TernExp__IfFalseAssignment_1_4)
{ after(grammarAccess.getTernExpAccess().getIfFalseAssignment_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__OrExp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExp__Group__0__Impl
	rule__OrExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpAccess().getAndExpParserRuleCall_0()); }
	ruleAndExp
{ after(grammarAccess.getOrExpAccess().getAndExpParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpAccess().getGroup_1()); }
(rule__OrExp__Group_1__0)*
{ after(grammarAccess.getOrExpAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrExp__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExp__Group_1__0__Impl
	rule__OrExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExp__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpAccess().getOrLeftAction_1_0()); }
(

)
{ after(grammarAccess.getOrExpAccess().getOrLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExp__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExp__Group_1__1__Impl
	rule__OrExp__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExp__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpAccess().getOrKeyword_1_1()); }

	'or' 

{ after(grammarAccess.getOrExpAccess().getOrKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExp__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExp__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExp__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpAccess().getRightAssignment_1_2()); }
(rule__OrExp__RightAssignment_1_2)
{ after(grammarAccess.getOrExpAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AndExp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExp__Group__0__Impl
	rule__AndExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpAccess().getRelationalParserRuleCall_0()); }
	ruleRelational
{ after(grammarAccess.getAndExpAccess().getRelationalParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpAccess().getGroup_1()); }
(rule__AndExp__Group_1__0)*
{ after(grammarAccess.getAndExpAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndExp__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExp__Group_1__0__Impl
	rule__AndExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExp__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpAccess().getAndLeftAction_1_0()); }
(

)
{ after(grammarAccess.getAndExpAccess().getAndLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExp__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExp__Group_1__1__Impl
	rule__AndExp__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExp__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpAccess().getAndKeyword_1_1()); }

	'and' 

{ after(grammarAccess.getAndExpAccess().getAndKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExp__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExp__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExp__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpAccess().getRightAssignment_1_2()); }
(rule__AndExp__RightAssignment_1_2)
{ after(grammarAccess.getAndExpAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Relational__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relational__Group__0__Impl
	rule__Relational__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalAccess().getPairExprParserRuleCall_0()); }
	rulePairExpr
{ after(grammarAccess.getRelationalAccess().getPairExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relational__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relational__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalAccess().getGroup_1()); }
(rule__Relational__Group_1__0)?
{ after(grammarAccess.getRelationalAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Relational__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relational__Group_1__0__Impl
	rule__Relational__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalAccess().getAlternatives_1_0()); }
(rule__Relational__Alternatives_1_0)
{ after(grammarAccess.getRelationalAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relational__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relational__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalAccess().getRightAssignment_1_1()); }
(rule__Relational__RightAssignment_1_1)
{ after(grammarAccess.getRelationalAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Relational__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relational__Group_1_0_0__0__Impl
	rule__Relational__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalAccess().getRelNotEqLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getRelationalAccess().getRelNotEqLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relational__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relational__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalAccess().getExclamationMarkEqualsSignKeyword_1_0_0_1()); }

	'!=' 

{ after(grammarAccess.getRelationalAccess().getExclamationMarkEqualsSignKeyword_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Relational__Group_1_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relational__Group_1_0_1__0__Impl
	rule__Relational__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational__Group_1_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalAccess().getRelEqLeftAction_1_0_1_0()); }
(

)
{ after(grammarAccess.getRelationalAccess().getRelEqLeftAction_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relational__Group_1_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relational__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational__Group_1_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalAccess().getEqualsSignKeyword_1_0_1_1()); }

	'=' 

{ after(grammarAccess.getRelationalAccess().getEqualsSignKeyword_1_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Relational__Group_1_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relational__Group_1_0_2__0__Impl
	rule__Relational__Group_1_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational__Group_1_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalAccess().getRelEqEqLeftAction_1_0_2_0()); }
(

)
{ after(grammarAccess.getRelationalAccess().getRelEqEqLeftAction_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relational__Group_1_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relational__Group_1_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational__Group_1_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalAccess().getEqualsSignEqualsSignKeyword_1_0_2_1()); }

	'==' 

{ after(grammarAccess.getRelationalAccess().getEqualsSignEqualsSignKeyword_1_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Relational__Group_1_0_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relational__Group_1_0_3__0__Impl
	rule__Relational__Group_1_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational__Group_1_0_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalAccess().getRelLtEqLeftAction_1_0_3_0()); }
(

)
{ after(grammarAccess.getRelationalAccess().getRelLtEqLeftAction_1_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relational__Group_1_0_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relational__Group_1_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational__Group_1_0_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalAccess().getGreaterThanSignEqualsSignKeyword_1_0_3_1()); }

	'>=' 

{ after(grammarAccess.getRelationalAccess().getGreaterThanSignEqualsSignKeyword_1_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Relational__Group_1_0_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relational__Group_1_0_4__0__Impl
	rule__Relational__Group_1_0_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational__Group_1_0_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalAccess().getRelGtEqLeftAction_1_0_4_0()); }
(

)
{ after(grammarAccess.getRelationalAccess().getRelGtEqLeftAction_1_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relational__Group_1_0_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relational__Group_1_0_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational__Group_1_0_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalAccess().getLessThanSignEqualsSignKeyword_1_0_4_1()); }

	'<=' 

{ after(grammarAccess.getRelationalAccess().getLessThanSignEqualsSignKeyword_1_0_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Relational__Group_1_0_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relational__Group_1_0_5__0__Impl
	rule__Relational__Group_1_0_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational__Group_1_0_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalAccess().getRelLtLeftAction_1_0_5_0()); }
(

)
{ after(grammarAccess.getRelationalAccess().getRelLtLeftAction_1_0_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relational__Group_1_0_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relational__Group_1_0_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational__Group_1_0_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalAccess().getLessThanSignKeyword_1_0_5_1()); }

	'<' 

{ after(grammarAccess.getRelationalAccess().getLessThanSignKeyword_1_0_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Relational__Group_1_0_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relational__Group_1_0_6__0__Impl
	rule__Relational__Group_1_0_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational__Group_1_0_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalAccess().getRelGtLeftAction_1_0_6_0()); }
(

)
{ after(grammarAccess.getRelationalAccess().getRelGtLeftAction_1_0_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relational__Group_1_0_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relational__Group_1_0_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational__Group_1_0_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalAccess().getGreaterThanSignKeyword_1_0_6_1()); }

	'>' 

{ after(grammarAccess.getRelationalAccess().getGreaterThanSignKeyword_1_0_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PairExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PairExpr__Group__0__Impl
	rule__PairExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PairExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPairExprAccess().getAdditionParserRuleCall_0()); }
	ruleAddition
{ after(grammarAccess.getPairExprAccess().getAdditionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PairExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PairExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PairExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPairExprAccess().getGroup_1()); }
(rule__PairExpr__Group_1__0)?
{ after(grammarAccess.getPairExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PairExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PairExpr__Group_1__0__Impl
	rule__PairExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PairExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPairExprAccess().getGroup_1_0()); }
(rule__PairExpr__Group_1_0__0)
{ after(grammarAccess.getPairExprAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PairExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PairExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PairExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPairExprAccess().getRightAssignment_1_1()); }
(rule__PairExpr__RightAssignment_1_1)
{ after(grammarAccess.getPairExprAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PairExpr__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PairExpr__Group_1_0__0__Impl
	rule__PairExpr__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PairExpr__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPairExprAccess().getPairLeftAction_1_0_0()); }
(

)
{ after(grammarAccess.getPairExprAccess().getPairLeftAction_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PairExpr__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PairExpr__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PairExpr__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPairExprAccess().getColonColonKeyword_1_0_1()); }

	'::' 

{ after(grammarAccess.getPairExprAccess().getColonColonKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Addition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group__0__Impl
	rule__Addition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0()); }
	ruleMultiplication
{ after(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getGroup_1()); }
(rule__Addition__Group_1__0)*
{ after(grammarAccess.getAdditionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Addition__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group_1__0__Impl
	rule__Addition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getAlternatives_1_0()); }
(rule__Addition__Alternatives_1_0)
{ after(grammarAccess.getAdditionAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getRightAssignment_1_1()); }
(rule__Addition__RightAssignment_1_1)
{ after(grammarAccess.getAdditionAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Addition__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group_1_0_0__0__Impl
	rule__Addition__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getPlusLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getAdditionAccess().getPlusLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getPlusSignKeyword_1_0_0_1()); }

	'+' 

{ after(grammarAccess.getAdditionAccess().getPlusSignKeyword_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Addition__Group_1_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group_1_0_1__0__Impl
	rule__Addition__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getMinusLeftAction_1_0_1_0()); }
(

)
{ after(grammarAccess.getAdditionAccess().getMinusLeftAction_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group_1_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getHyphenMinusKeyword_1_0_1_1()); }

	'-' 

{ after(grammarAccess.getAdditionAccess().getHyphenMinusKeyword_1_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Multiplication__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group__0__Impl
	rule__Multiplication__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getGamlBinExprParserRuleCall_0()); }
	ruleGamlBinExpr
{ after(grammarAccess.getMultiplicationAccess().getGamlBinExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getGroup_1()); }
(rule__Multiplication__Group_1__0)*
{ after(grammarAccess.getMultiplicationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Multiplication__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group_1__0__Impl
	rule__Multiplication__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getAlternatives_1_0()); }
(rule__Multiplication__Alternatives_1_0)
{ after(grammarAccess.getMultiplicationAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getRightAssignment_1_1()); }
(rule__Multiplication__RightAssignment_1_1)
{ after(grammarAccess.getMultiplicationAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Multiplication__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group_1_0_0__0__Impl
	rule__Multiplication__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getMultiLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getMultiplicationAccess().getMultiLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getAsteriskKeyword_1_0_0_1()); }

	'*' 

{ after(grammarAccess.getMultiplicationAccess().getAsteriskKeyword_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Multiplication__Group_1_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group_1_0_1__0__Impl
	rule__Multiplication__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getDivLeftAction_1_0_1_0()); }
(

)
{ after(grammarAccess.getMultiplicationAccess().getDivLeftAction_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group_1_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getSolidusKeyword_1_0_1_1()); }

	'/' 

{ after(grammarAccess.getMultiplicationAccess().getSolidusKeyword_1_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GamlBinExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlBinExpr__Group__0__Impl
	rule__GamlBinExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlBinExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlBinExprAccess().getPowerParserRuleCall_0()); }
	rulePower
{ after(grammarAccess.getGamlBinExprAccess().getPowerParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GamlBinExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlBinExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlBinExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlBinExprAccess().getGroup_1()); }
(rule__GamlBinExpr__Group_1__0)*
{ after(grammarAccess.getGamlBinExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GamlBinExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlBinExpr__Group_1__0__Impl
	rule__GamlBinExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlBinExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlBinExprAccess().getGroup_1_0()); }
(rule__GamlBinExpr__Group_1_0__0)
{ after(grammarAccess.getGamlBinExprAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GamlBinExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlBinExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlBinExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlBinExprAccess().getRightAssignment_1_1()); }
(rule__GamlBinExpr__RightAssignment_1_1)
{ after(grammarAccess.getGamlBinExprAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GamlBinExpr__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlBinExpr__Group_1_0__0__Impl
	rule__GamlBinExpr__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlBinExpr__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlBinExprAccess().getGamlBinaryLeftAction_1_0_0()); }
(

)
{ after(grammarAccess.getGamlBinExprAccess().getGamlBinaryLeftAction_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GamlBinExpr__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlBinExpr__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlBinExpr__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlBinExprAccess().getOpAssignment_1_0_1()); }
(rule__GamlBinExpr__OpAssignment_1_0_1)
{ after(grammarAccess.getGamlBinExprAccess().getOpAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Power__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Power__Group__0__Impl
	rule__Power__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Power__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPowerAccess().getGamlUnitExprParserRuleCall_0()); }
	ruleGamlUnitExpr
{ after(grammarAccess.getPowerAccess().getGamlUnitExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Power__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Power__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Power__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPowerAccess().getGroup_1()); }
(rule__Power__Group_1__0)*
{ after(grammarAccess.getPowerAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Power__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Power__Group_1__0__Impl
	rule__Power__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Power__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPowerAccess().getGroup_1_0()); }
(rule__Power__Group_1_0__0)
{ after(grammarAccess.getPowerAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Power__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Power__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Power__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPowerAccess().getRightAssignment_1_1()); }
(rule__Power__RightAssignment_1_1)
{ after(grammarAccess.getPowerAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Power__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Power__Group_1_0__0__Impl
	rule__Power__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Power__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPowerAccess().getPowLeftAction_1_0_0()); }
(

)
{ after(grammarAccess.getPowerAccess().getPowLeftAction_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Power__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Power__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Power__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPowerAccess().getCircumflexAccentKeyword_1_0_1()); }

	'^' 

{ after(grammarAccess.getPowerAccess().getCircumflexAccentKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GamlUnitExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlUnitExpr__Group__0__Impl
	rule__GamlUnitExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlUnitExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlUnitExprAccess().getGamlUnaryExprParserRuleCall_0()); }
	ruleGamlUnaryExpr
{ after(grammarAccess.getGamlUnitExprAccess().getGamlUnaryExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GamlUnitExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlUnitExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlUnitExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlUnitExprAccess().getGroup_1()); }
(rule__GamlUnitExpr__Group_1__0)?
{ after(grammarAccess.getGamlUnitExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GamlUnitExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlUnitExpr__Group_1__0__Impl
	rule__GamlUnitExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlUnitExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlUnitExprAccess().getGroup_1_0()); }
(rule__GamlUnitExpr__Group_1_0__0)
{ after(grammarAccess.getGamlUnitExprAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GamlUnitExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlUnitExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlUnitExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlUnitExprAccess().getRightAssignment_1_1()); }
(rule__GamlUnitExpr__RightAssignment_1_1)
{ after(grammarAccess.getGamlUnitExprAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GamlUnitExpr__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlUnitExpr__Group_1_0__0__Impl
	rule__GamlUnitExpr__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlUnitExpr__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlUnitExprAccess().getUnitLeftAction_1_0_0()); }
(

)
{ after(grammarAccess.getGamlUnitExprAccess().getUnitLeftAction_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GamlUnitExpr__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlUnitExpr__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlUnitExpr__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlUnitExprAccess().getNumberSignKeyword_1_0_1()); }

	'#' 

{ after(grammarAccess.getGamlUnitExprAccess().getNumberSignKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GamlUnaryExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlUnaryExpr__Group_1__0__Impl
	rule__GamlUnaryExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlUnaryExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlUnaryExprAccess().getGamlUnaryAction_1_0()); }
(

)
{ after(grammarAccess.getGamlUnaryExprAccess().getGamlUnaryAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GamlUnaryExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlUnaryExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlUnaryExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlUnaryExprAccess().getGroup_1_1()); }
(rule__GamlUnaryExpr__Group_1_1__0)
{ after(grammarAccess.getGamlUnaryExprAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GamlUnaryExpr__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlUnaryExpr__Group_1_1__0__Impl
	rule__GamlUnaryExpr__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlUnaryExpr__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlUnaryExprAccess().getOpAssignment_1_1_0()); }
(rule__GamlUnaryExpr__OpAssignment_1_1_0)
{ after(grammarAccess.getGamlUnaryExprAccess().getOpAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GamlUnaryExpr__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlUnaryExpr__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlUnaryExpr__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlUnaryExprAccess().getRightAssignment_1_1_1()); }
(rule__GamlUnaryExpr__RightAssignment_1_1_1)
{ after(grammarAccess.getGamlUnaryExprAccess().getRightAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MemberRef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberRef__Group__0__Impl
	rule__MemberRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberRef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberRefAccess().getPrimaryExpressionParserRuleCall_0()); }
	rulePrimaryExpression
{ after(grammarAccess.getMemberRefAccess().getPrimaryExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberRef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberRef__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberRef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberRefAccess().getGroup_1()); }
(rule__MemberRef__Group_1__0)?
{ after(grammarAccess.getMemberRefAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MemberRef__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberRef__Group_1__0__Impl
	rule__MemberRef__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberRef__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberRefAccess().getMemberRefPLeftAction_1_0()); }
(

)
{ after(grammarAccess.getMemberRefAccess().getMemberRefPLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberRef__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberRef__Group_1__1__Impl
	rule__MemberRef__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberRef__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberRefAccess().getFullStopKeyword_1_1()); }

	'.' 

{ after(grammarAccess.getMemberRefAccess().getFullStopKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberRef__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberRef__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberRef__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberRefAccess().getRightAssignment_1_2()); }
(rule__MemberRef__RightAssignment_1_2)
{ after(grammarAccess.getMemberRefAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PrimaryExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0__0__Impl
	rule__PrimaryExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0()); }

	'(' 

{ after(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0__1__Impl
	rule__PrimaryExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getExpressionParserRuleCall_0_1()); }
	ruleExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getExpressionParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_0_2()); }

	')' 

{ after(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PrimaryExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1__0__Impl
	rule__PrimaryExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLeftSquareBracketKeyword_1_0()); }

	'[' 

{ after(grammarAccess.getPrimaryExpressionAccess().getLeftSquareBracketKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1__1__Impl
	rule__PrimaryExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getMatrixParserRuleCall_1_1()); }
	ruleMatrix
{ after(grammarAccess.getPrimaryExpressionAccess().getMatrixParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getRightSquareBracketKeyword_1_2()); }

	']' 

{ after(grammarAccess.getPrimaryExpressionAccess().getRightSquareBracketKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PrimaryExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_2__0__Impl
	rule__PrimaryExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLeftCurlyBracketKeyword_2_0()); }

	'{' 

{ after(grammarAccess.getPrimaryExpressionAccess().getLeftCurlyBracketKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_2__1__Impl
	rule__PrimaryExpression__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getPointParserRuleCall_2_1()); }
	rulePoint
{ after(grammarAccess.getPrimaryExpressionAccess().getPointParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getRightCurlyBracketKeyword_2_2()); }

	'}' 

{ after(grammarAccess.getPrimaryExpressionAccess().getRightCurlyBracketKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Point__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Point__Group__0__Impl
	rule__Point__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointAccess().getXAssignment_0()); }
(rule__Point__XAssignment_0)
{ after(grammarAccess.getPointAccess().getXAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Point__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Point__Group__1__Impl
	rule__Point__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointAccess().getCommaKeyword_1()); }

	',' 

{ after(grammarAccess.getPointAccess().getCommaKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Point__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Point__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointAccess().getYAssignment_2()); }
(rule__Point__YAssignment_2)
{ after(grammarAccess.getPointAccess().getYAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Matrix__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Matrix__Group__0__Impl
	rule__Matrix__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Matrix__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatrixAccess().getMatrixAction_0()); }
(

)
{ after(grammarAccess.getMatrixAccess().getMatrixAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Matrix__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Matrix__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Matrix__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatrixAccess().getGroup_1()); }
(rule__Matrix__Group_1__0)?
{ after(grammarAccess.getMatrixAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Matrix__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Matrix__Group_1__0__Impl
	rule__Matrix__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Matrix__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatrixAccess().getRowsAssignment_1_0()); }
(rule__Matrix__RowsAssignment_1_0)
{ after(grammarAccess.getMatrixAccess().getRowsAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Matrix__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Matrix__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Matrix__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatrixAccess().getGroup_1_1()); }
(rule__Matrix__Group_1_1__0)*
{ after(grammarAccess.getMatrixAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Matrix__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Matrix__Group_1_1__0__Impl
	rule__Matrix__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Matrix__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatrixAccess().getSemicolonKeyword_1_1_0()); }

	';' 

{ after(grammarAccess.getMatrixAccess().getSemicolonKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Matrix__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Matrix__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Matrix__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatrixAccess().getRowsAssignment_1_1_1()); }
(rule__Matrix__RowsAssignment_1_1_1)
{ after(grammarAccess.getMatrixAccess().getRowsAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Row__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Row__Group__0__Impl
	rule__Row__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRowAccess().getExprsAssignment_0()); }
(rule__Row__ExprsAssignment_0)
{ after(grammarAccess.getRowAccess().getExprsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Row__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Row__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRowAccess().getGroup_1()); }
(rule__Row__Group_1__0)*
{ after(grammarAccess.getRowAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Row__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Row__Group_1__0__Impl
	rule__Row__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRowAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getRowAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Row__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Row__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRowAccess().getExprsAssignment_1_1()); }
(rule__Row__ExprsAssignment_1_1)
{ after(grammarAccess.getRowAccess().getExprsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RightMemberRef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RightMemberRef__Group__0__Impl
	rule__RightMemberRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RightMemberRef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRightMemberRefAccess().getAbrstractRefParserRuleCall_0()); }
	ruleAbrstractRef
{ after(grammarAccess.getRightMemberRefAccess().getAbrstractRefParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RightMemberRef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RightMemberRef__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RightMemberRef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRightMemberRefAccess().getGroup_1()); }
(rule__RightMemberRef__Group_1__0)?
{ after(grammarAccess.getRightMemberRefAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RightMemberRef__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RightMemberRef__Group_1__0__Impl
	rule__RightMemberRef__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RightMemberRef__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRightMemberRefAccess().getMemberRefRLeftAction_1_0()); }
(

)
{ after(grammarAccess.getRightMemberRefAccess().getMemberRefRLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RightMemberRef__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RightMemberRef__Group_1__1__Impl
	rule__RightMemberRef__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RightMemberRef__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRightMemberRefAccess().getFullStopKeyword_1_1()); }

	'.' 

{ after(grammarAccess.getRightMemberRefAccess().getFullStopKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RightMemberRef__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RightMemberRef__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RightMemberRef__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRightMemberRefAccess().getRightAssignment_1_2()); }
(rule__RightMemberRef__RightAssignment_1_2)
{ after(grammarAccess.getRightMemberRefAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AbrstractRef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbrstractRef__Group__0__Impl
	rule__AbrstractRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbrstractRef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbrstractRefAccess().getVariableRefParserRuleCall_0()); }
	ruleVariableRef
{ after(grammarAccess.getAbrstractRefAccess().getVariableRefParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AbrstractRef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbrstractRef__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbrstractRef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbrstractRefAccess().getAlternatives_1()); }
(rule__AbrstractRef__Alternatives_1)?
{ after(grammarAccess.getAbrstractRefAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AbrstractRef__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbrstractRef__Group_1_0__0__Impl
	rule__AbrstractRef__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbrstractRef__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbrstractRefAccess().getFunctionRefFuncAction_1_0_0()); }
(

)
{ after(grammarAccess.getAbrstractRefAccess().getFunctionRefFuncAction_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AbrstractRef__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbrstractRef__Group_1_0__1__Impl
	rule__AbrstractRef__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AbrstractRef__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbrstractRefAccess().getLeftParenthesisKeyword_1_0_1()); }

	'(' 

{ after(grammarAccess.getAbrstractRefAccess().getLeftParenthesisKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AbrstractRef__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbrstractRef__Group_1_0__2__Impl
	rule__AbrstractRef__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AbrstractRef__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbrstractRefAccess().getGroup_1_0_2()); }
(rule__AbrstractRef__Group_1_0_2__0)?
{ after(grammarAccess.getAbrstractRefAccess().getGroup_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AbrstractRef__Group_1_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbrstractRef__Group_1_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbrstractRef__Group_1_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbrstractRefAccess().getRightParenthesisKeyword_1_0_3()); }

	')' 

{ after(grammarAccess.getAbrstractRefAccess().getRightParenthesisKeyword_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AbrstractRef__Group_1_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbrstractRef__Group_1_0_2__0__Impl
	rule__AbrstractRef__Group_1_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbrstractRef__Group_1_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbrstractRefAccess().getArgsAssignment_1_0_2_0()); }
(rule__AbrstractRef__ArgsAssignment_1_0_2_0)
{ after(grammarAccess.getAbrstractRefAccess().getArgsAssignment_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AbrstractRef__Group_1_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbrstractRef__Group_1_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbrstractRef__Group_1_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbrstractRefAccess().getGroup_1_0_2_1()); }
(rule__AbrstractRef__Group_1_0_2_1__0)*
{ after(grammarAccess.getAbrstractRefAccess().getGroup_1_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AbrstractRef__Group_1_0_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbrstractRef__Group_1_0_2_1__0__Impl
	rule__AbrstractRef__Group_1_0_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbrstractRef__Group_1_0_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbrstractRefAccess().getCommaKeyword_1_0_2_1_0()); }

	',' 

{ after(grammarAccess.getAbrstractRefAccess().getCommaKeyword_1_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AbrstractRef__Group_1_0_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbrstractRef__Group_1_0_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbrstractRef__Group_1_0_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbrstractRefAccess().getArgsAssignment_1_0_2_1_1()); }
(rule__AbrstractRef__ArgsAssignment_1_0_2_1_1)
{ after(grammarAccess.getAbrstractRefAccess().getArgsAssignment_1_0_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AbrstractRef__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbrstractRef__Group_1_1__0__Impl
	rule__AbrstractRef__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbrstractRef__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbrstractRefAccess().getArrayRefArrayAction_1_1_0()); }
(

)
{ after(grammarAccess.getAbrstractRefAccess().getArrayRefArrayAction_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AbrstractRef__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbrstractRef__Group_1_1__1__Impl
	rule__AbrstractRef__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AbrstractRef__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbrstractRefAccess().getLeftSquareBracketKeyword_1_1_1()); }

	'[' 

{ after(grammarAccess.getAbrstractRefAccess().getLeftSquareBracketKeyword_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AbrstractRef__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbrstractRef__Group_1_1__2__Impl
	rule__AbrstractRef__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AbrstractRef__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbrstractRefAccess().getGroup_1_1_2()); }
(rule__AbrstractRef__Group_1_1_2__0)?
{ after(grammarAccess.getAbrstractRefAccess().getGroup_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AbrstractRef__Group_1_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbrstractRef__Group_1_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbrstractRef__Group_1_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbrstractRefAccess().getRightSquareBracketKeyword_1_1_3()); }

	']' 

{ after(grammarAccess.getAbrstractRefAccess().getRightSquareBracketKeyword_1_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AbrstractRef__Group_1_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbrstractRef__Group_1_1_2__0__Impl
	rule__AbrstractRef__Group_1_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbrstractRef__Group_1_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbrstractRefAccess().getArgsAssignment_1_1_2_0()); }
(rule__AbrstractRef__ArgsAssignment_1_1_2_0)
{ after(grammarAccess.getAbrstractRefAccess().getArgsAssignment_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AbrstractRef__Group_1_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbrstractRef__Group_1_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbrstractRef__Group_1_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbrstractRefAccess().getGroup_1_1_2_1()); }
(rule__AbrstractRef__Group_1_1_2_1__0)*
{ after(grammarAccess.getAbrstractRefAccess().getGroup_1_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AbrstractRef__Group_1_1_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbrstractRef__Group_1_1_2_1__0__Impl
	rule__AbrstractRef__Group_1_1_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbrstractRef__Group_1_1_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbrstractRefAccess().getCommaKeyword_1_1_2_1_0()); }

	',' 

{ after(grammarAccess.getAbrstractRefAccess().getCommaKeyword_1_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AbrstractRef__Group_1_1_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbrstractRef__Group_1_1_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbrstractRef__Group_1_1_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbrstractRefAccess().getArgsAssignment_1_1_2_1_1()); }
(rule__AbrstractRef__ArgsAssignment_1_1_2_1_1)
{ after(grammarAccess.getAbrstractRefAccess().getArgsAssignment_1_1_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_0__0__Impl
	rule__TerminalExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getIntLiteralAction_0_0()); }
(

)
{ after(grammarAccess.getTerminalExpressionAccess().getIntLiteralAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getValueAssignment_0_1()); }
(rule__TerminalExpression__ValueAssignment_0_1)
{ after(grammarAccess.getTerminalExpressionAccess().getValueAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_1__0__Impl
	rule__TerminalExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getDoubleLiteralAction_1_0()); }
(

)
{ after(grammarAccess.getTerminalExpressionAccess().getDoubleLiteralAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getValueAssignment_1_1()); }
(rule__TerminalExpression__ValueAssignment_1_1)
{ after(grammarAccess.getTerminalExpressionAccess().getValueAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_2__0__Impl
	rule__TerminalExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getColorLiteralAction_2_0()); }
(

)
{ after(grammarAccess.getTerminalExpressionAccess().getColorLiteralAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getValueAssignment_2_1()); }
(rule__TerminalExpression__ValueAssignment_2_1)
{ after(grammarAccess.getTerminalExpressionAccess().getValueAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpression__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_3__0__Impl
	rule__TerminalExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getStringLiteralAction_3_0()); }
(

)
{ after(grammarAccess.getTerminalExpressionAccess().getStringLiteralAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getValueAssignment_3_1()); }
(rule__TerminalExpression__ValueAssignment_3_1)
{ after(grammarAccess.getTerminalExpressionAccess().getValueAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpression__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_4__0__Impl
	rule__TerminalExpression__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getBooleanLiteralAction_4_0()); }
(

)
{ after(grammarAccess.getTerminalExpressionAccess().getBooleanLiteralAction_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getValueAssignment_4_1()); }
(rule__TerminalExpression__ValueAssignment_4_1)
{ after(grammarAccess.getTerminalExpressionAccess().getValueAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FQN__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQN__Group__0__Impl
	rule__FQN__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getFQNAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FQN__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQN__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNAccess().getGroup_1()); }
(rule__FQN__Group_1__0)*
{ after(grammarAccess.getFQNAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FQN__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQN__Group_1__0__Impl
	rule__FQN__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getFQNAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FQN__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQN__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Model__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getNameFQNParserRuleCall_1_0()); }
	ruleFQN{ after(grammarAccess.getModelAccess().getNameFQNParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ImportsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getImportsImportParserRuleCall_2_0()); }
	ruleImport{ after(grammarAccess.getModelAccess().getImportsImportParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__GamlAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getGamlGamlLangDefParserRuleCall_3_0()); }
	ruleGamlLangDef{ after(grammarAccess.getModelAccess().getGamlGamlLangDefParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__StatementsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getStatementsStatementParserRuleCall_4_0()); }
	ruleStatement{ after(grammarAccess.getModelAccess().getStatementsStatementParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportURIAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GamlLangDef__KAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlLangDefAccess().getKDefKeywordParserRuleCall_2_0_0()); }
	ruleDefKeyword{ after(grammarAccess.getGamlLangDefAccess().getKDefKeywordParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GamlLangDef__FAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlLangDefAccess().getFDefFacetParserRuleCall_2_1_0()); }
	ruleDefFacet{ after(grammarAccess.getGamlLangDefAccess().getFDefFacetParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GamlLangDef__BAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlLangDefAccess().getBDefBinaryOpParserRuleCall_2_2_0()); }
	ruleDefBinaryOp{ after(grammarAccess.getGamlLangDefAccess().getBDefBinaryOpParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GamlLangDef__RAssignment_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlLangDefAccess().getRDefReservedParserRuleCall_2_3_0()); }
	ruleDefReserved{ after(grammarAccess.getGamlLangDefAccess().getRDefReservedParserRuleCall_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GamlLangDef__UAssignment_2_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlLangDefAccess().getUDefUnitParserRuleCall_2_4_0()); }
	ruleDefUnit{ after(grammarAccess.getGamlLangDefAccess().getUDefUnitParserRuleCall_2_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefKeyword__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefKeywordAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getDefKeywordAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefKeyword__BlockAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefKeywordAccess().getBlockGamlBlockParserRuleCall_2_0_0()); }
	ruleGamlBlock{ after(grammarAccess.getDefKeywordAccess().getBlockGamlBlockParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GamlBlock__FacetsAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlBlockAccess().getFacetsDefFacetCrossReference_2_2_0()); }
(
{ before(grammarAccess.getGamlBlockAccess().getFacetsDefFacetIDTerminalRuleCall_2_2_0_1()); }
	RULE_ID{ after(grammarAccess.getGamlBlockAccess().getFacetsDefFacetIDTerminalRuleCall_2_2_0_1()); }
)
{ after(grammarAccess.getGamlBlockAccess().getFacetsDefFacetCrossReference_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GamlBlock__FacetsAssignment_2_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlBlockAccess().getFacetsDefFacetCrossReference_2_3_1_0()); }
(
{ before(grammarAccess.getGamlBlockAccess().getFacetsDefFacetIDTerminalRuleCall_2_3_1_0_1()); }
	RULE_ID{ after(grammarAccess.getGamlBlockAccess().getFacetsDefFacetIDTerminalRuleCall_2_3_1_0_1()); }
)
{ after(grammarAccess.getGamlBlockAccess().getFacetsDefFacetCrossReference_2_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GamlBlock__ChildsAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlBlockAccess().getChildsDefKeywordCrossReference_3_2_0()); }
(
{ before(grammarAccess.getGamlBlockAccess().getChildsDefKeywordIDTerminalRuleCall_3_2_0_1()); }
	RULE_ID{ after(grammarAccess.getGamlBlockAccess().getChildsDefKeywordIDTerminalRuleCall_3_2_0_1()); }
)
{ after(grammarAccess.getGamlBlockAccess().getChildsDefKeywordCrossReference_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GamlBlock__ChildsAssignment_3_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlBlockAccess().getChildsDefKeywordCrossReference_3_3_1_0()); }
(
{ before(grammarAccess.getGamlBlockAccess().getChildsDefKeywordIDTerminalRuleCall_3_3_1_0_1()); }
	RULE_ID{ after(grammarAccess.getGamlBlockAccess().getChildsDefKeywordIDTerminalRuleCall_3_3_1_0_1()); }
)
{ after(grammarAccess.getGamlBlockAccess().getChildsDefKeywordCrossReference_3_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefFacet__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefFacetAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getDefFacetAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefFacet__TypeAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefFacetAccess().getTypeDefReservedCrossReference_2_1_0()); }
(
{ before(grammarAccess.getDefFacetAccess().getTypeDefReservedIDTerminalRuleCall_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getDefFacetAccess().getTypeDefReservedIDTerminalRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getDefFacetAccess().getTypeDefReservedCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefFacet__DefaultAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefFacetAccess().getDefaultTerminalExpressionParserRuleCall_3_1_0()); }
	ruleTerminalExpression{ after(grammarAccess.getDefFacetAccess().getDefaultTerminalExpressionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefBinaryOp__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefBinaryOpAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getDefBinaryOpAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefReserved__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefReservedAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getDefReservedAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefReserved__TypeAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefReservedAccess().getTypeDefReservedCrossReference_2_1_0()); }
(
{ before(grammarAccess.getDefReservedAccess().getTypeDefReservedIDTerminalRuleCall_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getDefReservedAccess().getTypeDefReservedIDTerminalRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getDefReservedAccess().getTypeDefReservedCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefReserved__ValueAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefReservedAccess().getValueTerminalExpressionParserRuleCall_3_1_0()); }
	ruleTerminalExpression{ after(grammarAccess.getDefReservedAccess().getValueTerminalExpressionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefUnit__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefUnitAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getDefUnitAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefUnit__CoefAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefUnitAccess().getCoefDOUBLETerminalRuleCall_2_1_0()); }
	RULE_DOUBLE{ after(grammarAccess.getDefUnitAccess().getCoefDOUBLETerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GamlKeywordRef__RefAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlKeywordRefAccess().getRefDefKeywordCrossReference_0()); }
(
{ before(grammarAccess.getGamlKeywordRefAccess().getRefDefKeywordIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getGamlKeywordRefAccess().getRefDefKeywordIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getGamlKeywordRefAccess().getRefDefKeywordCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GamlFacetRef__RefAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlFacetRefAccess().getRefDefFacetCrossReference_0_0()); }
(
{ before(grammarAccess.getGamlFacetRefAccess().getRefDefFacetIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getGamlFacetRefAccess().getRefDefFacetIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getGamlFacetRefAccess().getRefDefFacetCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GamlBinarOpRef__RefAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlBinarOpRefAccess().getRefDefBinaryOpCrossReference_0()); }
(
{ before(grammarAccess.getGamlBinarOpRefAccess().getRefDefBinaryOpIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getGamlBinarOpRefAccess().getRefDefBinaryOpIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getGamlBinarOpRefAccess().getRefDefBinaryOpCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GamlUnitRef__RefAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlUnitRefAccess().getRefDefUnitCrossReference_0()); }
(
{ before(grammarAccess.getGamlUnitRefAccess().getRefDefUnitIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getGamlUnitRefAccess().getRefDefUnitIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getGamlUnitRefAccess().getRefDefUnitCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GamlReservedRef__RefAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlReservedRefAccess().getRefDefReservedCrossReference_0()); }
(
{ before(grammarAccess.getGamlReservedRefAccess().getRefDefReservedIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getGamlReservedRefAccess().getRefDefReservedIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getGamlReservedRefAccess().getRefDefReservedCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SetEval__VarAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetEvalAccess().getVarExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getSetEvalAccess().getVarExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SetEval__FacetsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetEvalAccess().getFacetsFacetExprParserRuleCall_2_0()); }
	ruleFacetExpr{ after(grammarAccess.getSetEvalAccess().getFacetsFacetExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SetEval__BlockAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetEvalAccess().getBlockBlockParserRuleCall_3_0_0()); }
	ruleBlock{ after(grammarAccess.getSetEvalAccess().getBlockBlockParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__KeyAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getKeyGamlKeywordRefParserRuleCall_0_0()); }
	ruleGamlKeywordRef{ after(grammarAccess.getDefinitionAccess().getKeyGamlKeywordRefParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__FacetsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getFacetsFacetExprParserRuleCall_2_0()); }
	ruleFacetExpr{ after(grammarAccess.getDefinitionAccess().getFacetsFacetExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__BlockAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getBlockBlockParserRuleCall_3_0_0()); }
	ruleBlock{ after(grammarAccess.getDefinitionAccess().getBlockBlockParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Evaluation__KeyAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEvaluationAccess().getKeyGamlKeywordRefParserRuleCall_0_0()); }
	ruleGamlKeywordRef{ after(grammarAccess.getEvaluationAccess().getKeyGamlKeywordRefParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Evaluation__VarAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEvaluationAccess().getVarExpressionParserRuleCall_1_1_0()); }
	ruleExpression{ after(grammarAccess.getEvaluationAccess().getVarExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Evaluation__FacetsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEvaluationAccess().getFacetsFacetExprParserRuleCall_2_0()); }
	ruleFacetExpr{ after(grammarAccess.getEvaluationAccess().getFacetsFacetExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Evaluation__BlockAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEvaluationAccess().getBlockBlockParserRuleCall_3_0_0()); }
	ruleBlock{ after(grammarAccess.getEvaluationAccess().getBlockBlockParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FacetExpr__NameAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetExprAccess().getNameIDTerminalRuleCall_0_1_0()); }
	RULE_ID{ after(grammarAccess.getFacetExprAccess().getNameIDTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FacetExpr__KeyAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetExprAccess().getKeyGamlFacetRefParserRuleCall_1_0_0()); }
	ruleGamlFacetRef{ after(grammarAccess.getFacetExprAccess().getKeyGamlFacetRefParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FacetExpr__ExprAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetExprAccess().getExprExpressionParserRuleCall_1_1_0()); }
	ruleExpression{ after(grammarAccess.getFacetExprAccess().getExprExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Block__StatementsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getStatementsStatementParserRuleCall_2_0()); }
	ruleStatement{ after(grammarAccess.getBlockAccess().getStatementsStatementParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentOp__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentOpAccess().getRightTernExpParserRuleCall_1_1_0()); }
	ruleTernExp{ after(grammarAccess.getAssignmentOpAccess().getRightTernExpParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TernExp__IfTrueAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTernExpAccess().getIfTrueOrExpParserRuleCall_1_2_0()); }
	ruleOrExp{ after(grammarAccess.getTernExpAccess().getIfTrueOrExpParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TernExp__IfFalseAssignment_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTernExpAccess().getIfFalseOrExpParserRuleCall_1_4_0()); }
	ruleOrExp{ after(grammarAccess.getTernExpAccess().getIfFalseOrExpParserRuleCall_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrExp__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpAccess().getRightAndExpParserRuleCall_1_2_0()); }
	ruleAndExp{ after(grammarAccess.getOrExpAccess().getRightAndExpParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExp__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpAccess().getRightRelationalParserRuleCall_1_2_0()); }
	ruleRelational{ after(grammarAccess.getAndExpAccess().getRightRelationalParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relational__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalAccess().getRightPairExprParserRuleCall_1_1_0()); }
	rulePairExpr{ after(grammarAccess.getRelationalAccess().getRightPairExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PairExpr__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPairExprAccess().getRightAdditionParserRuleCall_1_1_0()); }
	ruleAddition{ after(grammarAccess.getPairExprAccess().getRightAdditionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getRightMultiplicationParserRuleCall_1_1_0()); }
	ruleMultiplication{ after(grammarAccess.getAdditionAccess().getRightMultiplicationParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getRightGamlBinExprParserRuleCall_1_1_0()); }
	ruleGamlBinExpr{ after(grammarAccess.getMultiplicationAccess().getRightGamlBinExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GamlBinExpr__OpAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlBinExprAccess().getOpGamlBinarOpRefParserRuleCall_1_0_1_0()); }
	ruleGamlBinarOpRef{ after(grammarAccess.getGamlBinExprAccess().getOpGamlBinarOpRefParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GamlBinExpr__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlBinExprAccess().getRightPowerParserRuleCall_1_1_0()); }
	rulePower{ after(grammarAccess.getGamlBinExprAccess().getRightPowerParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Power__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPowerAccess().getRightGamlUnitExprParserRuleCall_1_1_0()); }
	ruleGamlUnitExpr{ after(grammarAccess.getPowerAccess().getRightGamlUnitExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GamlUnitExpr__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlUnitExprAccess().getRightGamlUnitRefParserRuleCall_1_1_0()); }
	ruleGamlUnitRef{ after(grammarAccess.getGamlUnitExprAccess().getRightGamlUnitRefParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GamlUnaryExpr__OpAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlUnaryExprAccess().getOpUnarOpParserRuleCall_1_1_0_0()); }
	ruleUnarOp{ after(grammarAccess.getGamlUnaryExprAccess().getOpUnarOpParserRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GamlUnaryExpr__RightAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlUnaryExprAccess().getRightGamlUnaryExprParserRuleCall_1_1_1_0()); }
	ruleGamlUnaryExpr{ after(grammarAccess.getGamlUnaryExprAccess().getRightGamlUnaryExprParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberRef__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberRefAccess().getRightRightMemberRefParserRuleCall_1_2_0()); }
	ruleRightMemberRef{ after(grammarAccess.getMemberRefAccess().getRightRightMemberRefParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Point__XAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointAccess().getXExpressionParserRuleCall_0_0()); }
	ruleExpression{ after(grammarAccess.getPointAccess().getXExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Point__YAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointAccess().getYExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getPointAccess().getYExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Matrix__RowsAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatrixAccess().getRowsRowParserRuleCall_1_0_0()); }
	ruleRow{ after(grammarAccess.getMatrixAccess().getRowsRowParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Matrix__RowsAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatrixAccess().getRowsRowParserRuleCall_1_1_1_0()); }
	ruleRow{ after(grammarAccess.getMatrixAccess().getRowsRowParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Row__ExprsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRowAccess().getExprsExpressionParserRuleCall_0_0()); }
	ruleExpression{ after(grammarAccess.getRowAccess().getExprsExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Row__ExprsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRowAccess().getExprsExpressionParserRuleCall_1_1_0()); }
	ruleExpression{ after(grammarAccess.getRowAccess().getExprsExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RightMemberRef__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRightMemberRefAccess().getRightRightMemberRefParserRuleCall_1_2_0()); }
	ruleRightMemberRef{ after(grammarAccess.getRightMemberRefAccess().getRightRightMemberRefParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AbrstractRef__ArgsAssignment_1_0_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbrstractRefAccess().getArgsExpressionParserRuleCall_1_0_2_0_0()); }
	ruleExpression{ after(grammarAccess.getAbrstractRefAccess().getArgsExpressionParserRuleCall_1_0_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AbrstractRef__ArgsAssignment_1_0_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbrstractRefAccess().getArgsExpressionParserRuleCall_1_0_2_1_1_0()); }
	ruleExpression{ after(grammarAccess.getAbrstractRefAccess().getArgsExpressionParserRuleCall_1_0_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AbrstractRef__ArgsAssignment_1_1_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbrstractRefAccess().getArgsExpressionParserRuleCall_1_1_2_0_0()); }
	ruleExpression{ after(grammarAccess.getAbrstractRefAccess().getArgsExpressionParserRuleCall_1_1_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AbrstractRef__ArgsAssignment_1_1_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbrstractRefAccess().getArgsExpressionParserRuleCall_1_1_2_1_1_0()); }
	ruleExpression{ after(grammarAccess.getAbrstractRefAccess().getArgsExpressionParserRuleCall_1_1_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableRef__RefAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableRefAccess().getRefAbstractDefinitionCrossReference_0()); }
(
{ before(grammarAccess.getVariableRefAccess().getRefAbstractDefinitionIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getVariableRefAccess().getRefAbstractDefinitionIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getVariableRefAccess().getRefAbstractDefinitionCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__ValueAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getValueINTTerminalRuleCall_0_1_0()); }
	RULE_INT{ after(grammarAccess.getTerminalExpressionAccess().getValueINTTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__ValueAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getValueDOUBLETerminalRuleCall_1_1_0()); }
	RULE_DOUBLE{ after(grammarAccess.getTerminalExpressionAccess().getValueDOUBLETerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__ValueAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getValueCOLORTerminalRuleCall_2_1_0()); }
	RULE_COLOR{ after(grammarAccess.getTerminalExpressionAccess().getValueCOLORTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__ValueAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getValueSTRINGTerminalRuleCall_3_1_0()); }
	RULE_STRING{ after(grammarAccess.getTerminalExpressionAccess().getValueSTRINGTerminalRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__ValueAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getValueBOOLEANTerminalRuleCall_4_1_0()); }
	RULE_BOOLEAN{ after(grammarAccess.getTerminalExpressionAccess().getValueBOOLEANTerminalRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_INT : ('0'|'1'..'9' ('0'..'9')*);

RULE_BOOLEAN : ('true'|'false');

RULE_ID : ('a'..'z'|'A'..'Z'|'_'|'0'..'9')+ ('$' ('a'..'z'|'A'..'Z'|'_'|'0'..'9')+)?;

RULE_COLOR : '#' ('0'..'9'|'A'..'F')+;

RULE_DOUBLE : ('1'..'9' ('0'..'9')* ('.' ('0'..'9')+)? (('E'|'e') ('+'|'-')? ('0'..'9')+)?|'0' ('.' ('0'..'9')+)? (('E'|'e') ('+'|'-')? ('0'..'9')+)?);

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


