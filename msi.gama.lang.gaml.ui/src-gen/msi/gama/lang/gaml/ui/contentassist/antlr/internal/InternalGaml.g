/*
* generated by Xtext
*/
grammar InternalGaml;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package msi.gama.lang.gaml.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package msi.gama.lang.gaml.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import msi.gama.lang.gaml.services.GamlGrammarAccess;

}

@parser::members {
 
 	private GamlGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(GamlGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)
{ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport 
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBuiltInStatementKey
entryRuleBuiltInStatementKey 
:
{ before(grammarAccess.getBuiltInStatementKeyRule()); }
	 ruleBuiltInStatementKey
{ after(grammarAccess.getBuiltInStatementKeyRule()); } 
	 EOF 
;

// Rule BuiltInStatementKey
ruleBuiltInStatementKey
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBuiltInStatementKeyAccess().getAlternatives()); }
(rule__BuiltInStatementKey__Alternatives)
{ after(grammarAccess.getBuiltInStatementKeyAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatement
entryRuleStatement 
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementAccess().getAlternatives()); }
(rule__Statement__Alternatives)
{ after(grammarAccess.getStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIfStatement
entryRuleIfStatement 
:
{ before(grammarAccess.getIfStatementRule()); }
	 ruleIfStatement
{ after(grammarAccess.getIfStatementRule()); } 
	 EOF 
;

// Rule IfStatement
ruleIfStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIfStatementAccess().getGroup()); }
(rule__IfStatement__Group__0)
{ after(grammarAccess.getIfStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassicStatement
entryRuleClassicStatement 
:
{ before(grammarAccess.getClassicStatementRule()); }
	 ruleClassicStatement
{ after(grammarAccess.getClassicStatementRule()); } 
	 EOF 
;

// Rule ClassicStatement
ruleClassicStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassicStatementAccess().getGroup()); }
(rule__ClassicStatement__Group__0)
{ after(grammarAccess.getClassicStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDefinitionStatement
entryRuleDefinitionStatement 
:
{ before(grammarAccess.getDefinitionStatementRule()); }
	 ruleDefinitionStatement
{ after(grammarAccess.getDefinitionStatementRule()); } 
	 EOF 
;

// Rule DefinitionStatement
ruleDefinitionStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefinitionStatementAccess().getGroup()); }
(rule__DefinitionStatement__Group__0)
{ after(grammarAccess.getDefinitionStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleContents
entryRuleContents 
:
{ before(grammarAccess.getContentsRule()); }
	 ruleContents
{ after(grammarAccess.getContentsRule()); } 
	 EOF 
;

// Rule Contents
ruleContents
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getContentsAccess().getGroup()); }
(rule__Contents__Group__0)
{ after(grammarAccess.getContentsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReturnStatement
entryRuleReturnStatement 
:
{ before(grammarAccess.getReturnStatementRule()); }
	 ruleReturnStatement
{ after(grammarAccess.getReturnStatementRule()); } 
	 EOF 
;

// Rule ReturnStatement
ruleReturnStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReturnStatementAccess().getGroup()); }
(rule__ReturnStatement__Group__0)
{ after(grammarAccess.getReturnStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssignmentStatement
entryRuleAssignmentStatement 
:
{ before(grammarAccess.getAssignmentStatementRule()); }
	 ruleAssignmentStatement
{ after(grammarAccess.getAssignmentStatementRule()); } 
	 EOF 
;

// Rule AssignmentStatement
ruleAssignmentStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignmentStatementAccess().getGroup()); }
(rule__AssignmentStatement__Group__0)
{ after(grammarAccess.getAssignmentStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFacet
entryRuleFacet 
:
{ before(grammarAccess.getFacetRule()); }
	 ruleFacet
{ after(grammarAccess.getFacetRule()); } 
	 EOF 
;

// Rule Facet
ruleFacet
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFacetAccess().getAlternatives()); }
(rule__Facet__Alternatives)
{ after(grammarAccess.getFacetAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassicFacet
entryRuleClassicFacet 
:
{ before(grammarAccess.getClassicFacetRule()); }
	 ruleClassicFacet
{ after(grammarAccess.getClassicFacetRule()); } 
	 EOF 
;

// Rule ClassicFacet
ruleClassicFacet
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassicFacetAccess().getGroup()); }
(rule__ClassicFacet__Group__0)
{ after(grammarAccess.getClassicFacetAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionFacet
entryRuleFunctionFacet 
:
{ before(grammarAccess.getFunctionFacetRule()); }
	 ruleFunctionFacet
{ after(grammarAccess.getFunctionFacetRule()); } 
	 EOF 
;

// Rule FunctionFacet
ruleFunctionFacet
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionFacetAccess().getGroup()); }
(rule__FunctionFacet__Group__0)
{ after(grammarAccess.getFunctionFacetAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDefinitionFacetKey
entryRuleDefinitionFacetKey 
:
{ before(grammarAccess.getDefinitionFacetKeyRule()); }
	 ruleDefinitionFacetKey
{ after(grammarAccess.getDefinitionFacetKeyRule()); } 
	 EOF 
;

// Rule DefinitionFacetKey
ruleDefinitionFacetKey
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefinitionFacetKeyAccess().getAlternatives()); }
(rule__DefinitionFacetKey__Alternatives)
{ after(grammarAccess.getDefinitionFacetKeyAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDefinitionFacet
entryRuleDefinitionFacet 
:
{ before(grammarAccess.getDefinitionFacetRule()); }
	 ruleDefinitionFacet
{ after(grammarAccess.getDefinitionFacetRule()); } 
	 EOF 
;

// Rule DefinitionFacet
ruleDefinitionFacet
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefinitionFacetAccess().getGroup()); }
(rule__DefinitionFacet__Group__0)
{ after(grammarAccess.getDefinitionFacetAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBlock
entryRuleBlock 
:
{ before(grammarAccess.getBlockRule()); }
	 ruleBlock
{ after(grammarAccess.getBlockRule()); } 
	 EOF 
;

// Rule Block
ruleBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBlockAccess().getGroup()); }
(rule__Block__Group__0)
{ after(grammarAccess.getBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getTernExpParserRuleCall()); }
	ruleTernExp
{ after(grammarAccess.getExpressionAccess().getTernExpParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTernExp
entryRuleTernExp 
:
{ before(grammarAccess.getTernExpRule()); }
	 ruleTernExp
{ after(grammarAccess.getTernExpRule()); } 
	 EOF 
;

// Rule TernExp
ruleTernExp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTernExpAccess().getGroup()); }
(rule__TernExp__Group__0)
{ after(grammarAccess.getTernExpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOrExp
entryRuleOrExp 
:
{ before(grammarAccess.getOrExpRule()); }
	 ruleOrExp
{ after(grammarAccess.getOrExpRule()); } 
	 EOF 
;

// Rule OrExp
ruleOrExp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOrExpAccess().getGroup()); }
(rule__OrExp__Group__0)
{ after(grammarAccess.getOrExpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAndExp
entryRuleAndExp 
:
{ before(grammarAccess.getAndExpRule()); }
	 ruleAndExp
{ after(grammarAccess.getAndExpRule()); } 
	 EOF 
;

// Rule AndExp
ruleAndExp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAndExpAccess().getGroup()); }
(rule__AndExp__Group__0)
{ after(grammarAccess.getAndExpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelational
entryRuleRelational 
:
{ before(grammarAccess.getRelationalRule()); }
	 ruleRelational
{ after(grammarAccess.getRelationalRule()); } 
	 EOF 
;

// Rule Relational
ruleRelational
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationalAccess().getGroup()); }
(rule__Relational__Group__0)
{ after(grammarAccess.getRelationalAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArgPairExpr
entryRuleArgPairExpr 
:
{ before(grammarAccess.getArgPairExprRule()); }
	 ruleArgPairExpr
{ after(grammarAccess.getArgPairExprRule()); } 
	 EOF 
;

// Rule ArgPairExpr
ruleArgPairExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArgPairExprAccess().getGroup()); }
(rule__ArgPairExpr__Group__0)
{ after(grammarAccess.getArgPairExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePairExpr
entryRulePairExpr 
:
{ before(grammarAccess.getPairExprRule()); }
	 rulePairExpr
{ after(grammarAccess.getPairExprRule()); } 
	 EOF 
;

// Rule PairExpr
rulePairExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPairExprAccess().getAlternatives()); }
(rule__PairExpr__Alternatives)
{ after(grammarAccess.getPairExprAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAddition
entryRuleAddition 
:
{ before(grammarAccess.getAdditionRule()); }
	 ruleAddition
{ after(grammarAccess.getAdditionRule()); } 
	 EOF 
;

// Rule Addition
ruleAddition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAdditionAccess().getGroup()); }
(rule__Addition__Group__0)
{ after(grammarAccess.getAdditionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultiplication
entryRuleMultiplication 
:
{ before(grammarAccess.getMultiplicationRule()); }
	 ruleMultiplication
{ after(grammarAccess.getMultiplicationRule()); } 
	 EOF 
;

// Rule Multiplication
ruleMultiplication
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultiplicationAccess().getGroup()); }
(rule__Multiplication__Group__0)
{ after(grammarAccess.getMultiplicationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGamlBinaryExpr
entryRuleGamlBinaryExpr 
:
{ before(grammarAccess.getGamlBinaryExprRule()); }
	 ruleGamlBinaryExpr
{ after(grammarAccess.getGamlBinaryExprRule()); } 
	 EOF 
;

// Rule GamlBinaryExpr
ruleGamlBinaryExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGamlBinaryExprAccess().getGroup()); }
(rule__GamlBinaryExpr__Group__0)
{ after(grammarAccess.getGamlBinaryExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGamlUnitExpr
entryRuleGamlUnitExpr 
:
{ before(grammarAccess.getGamlUnitExprRule()); }
	 ruleGamlUnitExpr
{ after(grammarAccess.getGamlUnitExprRule()); } 
	 EOF 
;

// Rule GamlUnitExpr
ruleGamlUnitExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGamlUnitExprAccess().getGroup()); }
(rule__GamlUnitExpr__Group__0)
{ after(grammarAccess.getGamlUnitExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGamlUnaryExpr
entryRuleGamlUnaryExpr 
:
{ before(grammarAccess.getGamlUnaryExprRule()); }
	 ruleGamlUnaryExpr
{ after(grammarAccess.getGamlUnaryExprRule()); } 
	 EOF 
;

// Rule GamlUnaryExpr
ruleGamlUnaryExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGamlUnaryExprAccess().getAlternatives()); }
(rule__GamlUnaryExpr__Alternatives)
{ after(grammarAccess.getGamlUnaryExprAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAccess
entryRuleAccess 
:
{ before(grammarAccess.getAccessRule()); }
	 ruleAccess
{ after(grammarAccess.getAccessRule()); } 
	 EOF 
;

// Rule Access
ruleAccess
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAccessAccess().getGroup()); }
(rule__Access__Group__0)
{ after(grammarAccess.getAccessAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMemberRef
entryRuleMemberRef 
:
{ before(grammarAccess.getMemberRefRule()); }
	 ruleMemberRef
{ after(grammarAccess.getMemberRefRule()); } 
	 EOF 
;

// Rule MemberRef
ruleMemberRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMemberRefAccess().getGroup()); }
(rule__MemberRef__Group__0)
{ after(grammarAccess.getMemberRefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression 
:
{ before(grammarAccess.getPrimaryExpressionRule()); }
	 rulePrimaryExpression
{ after(grammarAccess.getPrimaryExpressionRule()); } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
(rule__PrimaryExpression__Alternatives)
{ after(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAbstractRef
entryRuleAbstractRef 
:
{ before(grammarAccess.getAbstractRefRule()); }
	 ruleAbstractRef
{ after(grammarAccess.getAbstractRefRule()); } 
	 EOF 
;

// Rule AbstractRef
ruleAbstractRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAbstractRefAccess().getAlternatives()); }
(rule__AbstractRef__Alternatives)
{ after(grammarAccess.getAbstractRefAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunction
entryRuleFunction 
:
{ before(grammarAccess.getFunctionRule()); }
	 ruleFunction
{ after(grammarAccess.getFunctionRule()); } 
	 EOF 
;

// Rule Function
ruleFunction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionAccess().getGroup()); }
(rule__Function__Group__0)
{ after(grammarAccess.getFunctionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnitName
entryRuleUnitName 
:
{ before(grammarAccess.getUnitNameRule()); }
	 ruleUnitName
{ after(grammarAccess.getUnitNameRule()); } 
	 EOF 
;

// Rule UnitName
ruleUnitName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnitNameAccess().getGroup()); }
(rule__UnitName__Group__0)
{ after(grammarAccess.getUnitNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableRef
entryRuleVariableRef 
:
{ before(grammarAccess.getVariableRefRule()); }
	 ruleVariableRef
{ after(grammarAccess.getVariableRefRule()); } 
	 EOF 
;

// Rule VariableRef
ruleVariableRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableRefAccess().getGroup()); }
(rule__VariableRef__Group__0)
{ after(grammarAccess.getVariableRefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleTerminalExpression
entryRuleTerminalExpression 
:
{ before(grammarAccess.getTerminalExpressionRule()); }
	 ruleTerminalExpression
{ after(grammarAccess.getTerminalExpressionRule()); } 
	 EOF 
;

// Rule TerminalExpression
ruleTerminalExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTerminalExpressionAccess().getAlternatives()); }
(rule__TerminalExpression__Alternatives)
{ after(grammarAccess.getTerminalExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__BuiltInStatementKey__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuiltInStatementKeyAccess().getAddKeyword_0()); }

	'add' 

{ after(grammarAccess.getBuiltInStatementKeyAccess().getAddKeyword_0()); }
)

    |(
{ before(grammarAccess.getBuiltInStatementKeyAccess().getAskKeyword_1()); }

	'ask' 

{ after(grammarAccess.getBuiltInStatementKeyAccess().getAskKeyword_1()); }
)

    |(
{ before(grammarAccess.getBuiltInStatementKeyAccess().getCaptureKeyword_2()); }

	'capture' 

{ after(grammarAccess.getBuiltInStatementKeyAccess().getCaptureKeyword_2()); }
)

    |(
{ before(grammarAccess.getBuiltInStatementKeyAccess().getCreateKeyword_3()); }

	'create' 

{ after(grammarAccess.getBuiltInStatementKeyAccess().getCreateKeyword_3()); }
)

    |(
{ before(grammarAccess.getBuiltInStatementKeyAccess().getDrawKeyword_4()); }

	'draw' 

{ after(grammarAccess.getBuiltInStatementKeyAccess().getDrawKeyword_4()); }
)

    |(
{ before(grammarAccess.getBuiltInStatementKeyAccess().getErrorKeyword_5()); }

	'error' 

{ after(grammarAccess.getBuiltInStatementKeyAccess().getErrorKeyword_5()); }
)

    |(
{ before(grammarAccess.getBuiltInStatementKeyAccess().getMatchKeyword_6()); }

	'match' 

{ after(grammarAccess.getBuiltInStatementKeyAccess().getMatchKeyword_6()); }
)

    |(
{ before(grammarAccess.getBuiltInStatementKeyAccess().getMatch_betweenKeyword_7()); }

	'match_between' 

{ after(grammarAccess.getBuiltInStatementKeyAccess().getMatch_betweenKeyword_7()); }
)

    |(
{ before(grammarAccess.getBuiltInStatementKeyAccess().getMatch_oneKeyword_8()); }

	'match_one' 

{ after(grammarAccess.getBuiltInStatementKeyAccess().getMatch_oneKeyword_8()); }
)

    |(
{ before(grammarAccess.getBuiltInStatementKeyAccess().getPutKeyword_9()); }

	'put' 

{ after(grammarAccess.getBuiltInStatementKeyAccess().getPutKeyword_9()); }
)

    |(
{ before(grammarAccess.getBuiltInStatementKeyAccess().getReleaseKeyword_10()); }

	'release' 

{ after(grammarAccess.getBuiltInStatementKeyAccess().getReleaseKeyword_10()); }
)

    |(
{ before(grammarAccess.getBuiltInStatementKeyAccess().getRemoveKeyword_11()); }

	'remove' 

{ after(grammarAccess.getBuiltInStatementKeyAccess().getRemoveKeyword_11()); }
)

    |(
{ before(grammarAccess.getBuiltInStatementKeyAccess().getSaveKeyword_12()); }

	'save' 

{ after(grammarAccess.getBuiltInStatementKeyAccess().getSaveKeyword_12()); }
)

    |(
{ before(grammarAccess.getBuiltInStatementKeyAccess().getSetKeyword_13()); }

	'set' 

{ after(grammarAccess.getBuiltInStatementKeyAccess().getSetKeyword_13()); }
)

    |(
{ before(grammarAccess.getBuiltInStatementKeyAccess().getSwitchKeyword_14()); }

	'switch' 

{ after(grammarAccess.getBuiltInStatementKeyAccess().getSwitchKeyword_14()); }
)

    |(
{ before(grammarAccess.getBuiltInStatementKeyAccess().getWarnKeyword_15()); }

	'warn' 

{ after(grammarAccess.getBuiltInStatementKeyAccess().getWarnKeyword_15()); }
)

    |(
{ before(grammarAccess.getBuiltInStatementKeyAccess().getWriteKeyword_16()); }

	'write' 

{ after(grammarAccess.getBuiltInStatementKeyAccess().getWriteKeyword_16()); }
)

    |(
{ before(grammarAccess.getBuiltInStatementKeyAccess().getPopulationKeyword_17()); }

	'population' 

{ after(grammarAccess.getBuiltInStatementKeyAccess().getPopulationKeyword_17()); }
)

    |(
{ before(grammarAccess.getBuiltInStatementKeyAccess().getGrid_populationKeyword_18()); }

	'grid_population' 

{ after(grammarAccess.getBuiltInStatementKeyAccess().getGrid_populationKeyword_18()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getAssignmentStatementParserRuleCall_0()); }
(	ruleAssignmentStatement)
{ after(grammarAccess.getStatementAccess().getAssignmentStatementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getAlternatives_1()); }
(rule__Statement__Alternatives_1)
{ after(grammarAccess.getStatementAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getReturnStatementParserRuleCall_1_0()); }
	ruleReturnStatement
{ after(grammarAccess.getStatementAccess().getReturnStatementParserRuleCall_1_0()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getIfStatementParserRuleCall_1_1()); }
	ruleIfStatement
{ after(grammarAccess.getStatementAccess().getIfStatementParserRuleCall_1_1()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getClassicStatementParserRuleCall_1_2()); }
	ruleClassicStatement
{ after(grammarAccess.getStatementAccess().getClassicStatementParserRuleCall_1_2()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getDefinitionStatementParserRuleCall_1_3()); }
	ruleDefinitionStatement
{ after(grammarAccess.getStatementAccess().getDefinitionStatementParserRuleCall_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__ElseAlternatives_4_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getElseIfStatementParserRuleCall_4_1_0_0()); }
	ruleIfStatement
{ after(grammarAccess.getIfStatementAccess().getElseIfStatementParserRuleCall_4_1_0_0()); }
)

    |(
{ before(grammarAccess.getIfStatementAccess().getElseBlockParserRuleCall_4_1_0_1()); }
	ruleBlock
{ after(grammarAccess.getIfStatementAccess().getElseBlockParserRuleCall_4_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassicStatement__Alternatives_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassicStatementAccess().getBlockAssignment_4_0()); }
(rule__ClassicStatement__BlockAssignment_4_0)
{ after(grammarAccess.getClassicStatementAccess().getBlockAssignment_4_0()); }
)

    |(
{ before(grammarAccess.getClassicStatementAccess().getSemicolonKeyword_4_1()); }

	';' 

{ after(grammarAccess.getClassicStatementAccess().getSemicolonKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionStatement__NameAlternatives_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionStatementAccess().getNameIDTerminalRuleCall_2_0_0()); }
	RULE_ID
{ after(grammarAccess.getDefinitionStatementAccess().getNameIDTerminalRuleCall_2_0_0()); }
)

    |(
{ before(grammarAccess.getDefinitionStatementAccess().getNameSTRINGTerminalRuleCall_2_0_1()); }
	RULE_STRING
{ after(grammarAccess.getDefinitionStatementAccess().getNameSTRINGTerminalRuleCall_2_0_1()); }
)

    |(
{ before(grammarAccess.getDefinitionStatementAccess().getNameBuiltInStatementKeyParserRuleCall_2_0_2()); }
	ruleBuiltInStatementKey
{ after(grammarAccess.getDefinitionStatementAccess().getNameBuiltInStatementKeyParserRuleCall_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionStatement__Alternatives_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionStatementAccess().getBlockAssignment_4_0()); }
(rule__DefinitionStatement__BlockAssignment_4_0)
{ after(grammarAccess.getDefinitionStatementAccess().getBlockAssignment_4_0()); }
)

    |(
{ before(grammarAccess.getDefinitionStatementAccess().getSemicolonKeyword_4_1()); }

	';' 

{ after(grammarAccess.getDefinitionStatementAccess().getSemicolonKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentStatement__KeyAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentStatementAccess().getKeyLessThanSignHyphenMinusKeyword_1_0_0()); }

	'<-' 

{ after(grammarAccess.getAssignmentStatementAccess().getKeyLessThanSignHyphenMinusKeyword_1_0_0()); }
)

    |(
{ before(grammarAccess.getAssignmentStatementAccess().getKeyLessThanSignLessThanSignKeyword_1_0_1()); }

	'<<' 

{ after(grammarAccess.getAssignmentStatementAccess().getKeyLessThanSignLessThanSignKeyword_1_0_1()); }
)

    |(
{ before(grammarAccess.getAssignmentStatementAccess().getKeyGreaterThanSignGreaterThanSignKeyword_1_0_2()); }

	'>>' 

{ after(grammarAccess.getAssignmentStatementAccess().getKeyGreaterThanSignGreaterThanSignKeyword_1_0_2()); }
)

    |(
{ before(grammarAccess.getAssignmentStatementAccess().getKeyPlusSignEqualsSignKeyword_1_0_3()); }

	'+=' 

{ after(grammarAccess.getAssignmentStatementAccess().getKeyPlusSignEqualsSignKeyword_1_0_3()); }
)

    |(
{ before(grammarAccess.getAssignmentStatementAccess().getKeyHyphenMinusEqualsSignKeyword_1_0_4()); }

	'-=' 

{ after(grammarAccess.getAssignmentStatementAccess().getKeyHyphenMinusEqualsSignKeyword_1_0_4()); }
)

    |(
{ before(grammarAccess.getAssignmentStatementAccess().getKeyPlusSignPlusSignKeyword_1_0_5()); }

	'++' 

{ after(grammarAccess.getAssignmentStatementAccess().getKeyPlusSignPlusSignKeyword_1_0_5()); }
)

    |(
{ before(grammarAccess.getAssignmentStatementAccess().getKeyHyphenMinusHyphenMinusKeyword_1_0_6()); }

	'--' 

{ after(grammarAccess.getAssignmentStatementAccess().getKeyHyphenMinusHyphenMinusKeyword_1_0_6()); }
)

    |(
{ before(grammarAccess.getAssignmentStatementAccess().getKeyColonEqualsSignKeyword_1_0_7()); }

	':=' 

{ after(grammarAccess.getAssignmentStatementAccess().getKeyColonEqualsSignKeyword_1_0_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Facet__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetAccess().getFunctionFacetParserRuleCall_0()); }
	ruleFunctionFacet
{ after(grammarAccess.getFacetAccess().getFunctionFacetParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getFacetAccess().getDefinitionFacetParserRuleCall_1()); }
	ruleDefinitionFacet
{ after(grammarAccess.getFacetAccess().getDefinitionFacetParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getFacetAccess().getClassicFacetParserRuleCall_2()); }
	ruleClassicFacet
{ after(grammarAccess.getFacetAccess().getClassicFacetParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassicFacet__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassicFacetAccess().getGroup_0_0()); }
(rule__ClassicFacet__Group_0_0__0)
{ after(grammarAccess.getClassicFacetAccess().getGroup_0_0()); }
)

    |(
{ before(grammarAccess.getClassicFacetAccess().getKeyAssignment_0_1()); }
(rule__ClassicFacet__KeyAssignment_0_1)
{ after(grammarAccess.getClassicFacetAccess().getKeyAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionFacet__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionFacetAccess().getKeyAssignment_0_0()); }
(rule__FunctionFacet__KeyAssignment_0_0)
{ after(grammarAccess.getFunctionFacetAccess().getKeyAssignment_0_0()); }
)

    |(
{ before(grammarAccess.getFunctionFacetAccess().getKeyAssignment_0_1()); }
(rule__FunctionFacet__KeyAssignment_0_1)
{ after(grammarAccess.getFunctionFacetAccess().getKeyAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionFacetKey__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionFacetKeyAccess().getNameKeyword_0()); }

	'name:' 

{ after(grammarAccess.getDefinitionFacetKeyAccess().getNameKeyword_0()); }
)

    |(
{ before(grammarAccess.getDefinitionFacetKeyAccess().getReturnsKeyword_1()); }

	'returns:' 

{ after(grammarAccess.getDefinitionFacetKeyAccess().getReturnsKeyword_1()); }
)

    |(
{ before(grammarAccess.getDefinitionFacetKeyAccess().getActionKeyword_2()); }

	'action:' 

{ after(grammarAccess.getDefinitionFacetKeyAccess().getActionKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionFacet__NameAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionFacetAccess().getNameIDTerminalRuleCall_1_0_0()); }
	RULE_ID
{ after(grammarAccess.getDefinitionFacetAccess().getNameIDTerminalRuleCall_1_0_0()); }
)

    |(
{ before(grammarAccess.getDefinitionFacetAccess().getNameSTRINGTerminalRuleCall_1_0_1()); }
	RULE_STRING
{ after(grammarAccess.getDefinitionFacetAccess().getNameSTRINGTerminalRuleCall_1_0_1()); }
)

    |(
{ before(grammarAccess.getDefinitionFacetAccess().getNameBuiltInStatementKeyParserRuleCall_1_0_2()); }
	ruleBuiltInStatementKey
{ after(grammarAccess.getDefinitionFacetAccess().getNameBuiltInStatementKeyParserRuleCall_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relational__OpAlternatives_1_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalAccess().getOpExclamationMarkEqualsSignKeyword_1_0_1_0_0()); }

	'!=' 

{ after(grammarAccess.getRelationalAccess().getOpExclamationMarkEqualsSignKeyword_1_0_1_0_0()); }
)

    |(
{ before(grammarAccess.getRelationalAccess().getOpEqualsSignKeyword_1_0_1_0_1()); }

	'=' 

{ after(grammarAccess.getRelationalAccess().getOpEqualsSignKeyword_1_0_1_0_1()); }
)

    |(
{ before(grammarAccess.getRelationalAccess().getOpGreaterThanSignEqualsSignKeyword_1_0_1_0_2()); }

	'>=' 

{ after(grammarAccess.getRelationalAccess().getOpGreaterThanSignEqualsSignKeyword_1_0_1_0_2()); }
)

    |(
{ before(grammarAccess.getRelationalAccess().getOpLessThanSignEqualsSignKeyword_1_0_1_0_3()); }

	'<=' 

{ after(grammarAccess.getRelationalAccess().getOpLessThanSignEqualsSignKeyword_1_0_1_0_3()); }
)

    |(
{ before(grammarAccess.getRelationalAccess().getOpLessThanSignKeyword_1_0_1_0_4()); }

	'<' 

{ after(grammarAccess.getRelationalAccess().getOpLessThanSignKeyword_1_0_1_0_4()); }
)

    |(
{ before(grammarAccess.getRelationalAccess().getOpGreaterThanSignKeyword_1_0_1_0_5()); }

	'>' 

{ after(grammarAccess.getRelationalAccess().getOpGreaterThanSignKeyword_1_0_1_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArgPairExpr__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgPairExprAccess().getGroup_1_0()); }
(rule__ArgPairExpr__Group_1_0__0)
{ after(grammarAccess.getArgPairExprAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getArgPairExprAccess().getGroup_1_1()); }
(rule__ArgPairExpr__Group_1_1__0)
{ after(grammarAccess.getArgPairExprAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PairExpr__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPairExprAccess().getArgPairExprParserRuleCall_0()); }
(	ruleArgPairExpr)
{ after(grammarAccess.getPairExprAccess().getArgPairExprParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPairExprAccess().getGroup_1()); }
(rule__PairExpr__Group_1__0)
{ after(grammarAccess.getPairExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__OpAlternatives_1_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getOpPlusSignKeyword_1_0_1_0_0()); }

	'+' 

{ after(grammarAccess.getAdditionAccess().getOpPlusSignKeyword_1_0_1_0_0()); }
)

    |(
{ before(grammarAccess.getAdditionAccess().getOpHyphenMinusKeyword_1_0_1_0_1()); }

	'-' 

{ after(grammarAccess.getAdditionAccess().getOpHyphenMinusKeyword_1_0_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__OpAlternatives_1_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getOpAsteriskKeyword_1_0_1_0_0()); }

	'*' 

{ after(grammarAccess.getMultiplicationAccess().getOpAsteriskKeyword_1_0_1_0_0()); }
)

    |(
{ before(grammarAccess.getMultiplicationAccess().getOpSolidusKeyword_1_0_1_0_1()); }

	'/' 

{ after(grammarAccess.getMultiplicationAccess().getOpSolidusKeyword_1_0_1_0_1()); }
)

    |(
{ before(grammarAccess.getMultiplicationAccess().getOpCircumflexAccentKeyword_1_0_1_0_2()); }

	'^' 

{ after(grammarAccess.getMultiplicationAccess().getOpCircumflexAccentKeyword_1_0_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GamlUnitExpr__OpAlternatives_1_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlUnitExprAccess().getOpNumberSignKeyword_1_0_1_0_0()); }

	'#' 

{ after(grammarAccess.getGamlUnitExprAccess().getOpNumberSignKeyword_1_0_1_0_0()); }
)

    |(
{ before(grammarAccess.getGamlUnitExprAccess().getOpDegreeSignKeyword_1_0_1_0_1()); }

	'\u00B0' 

{ after(grammarAccess.getGamlUnitExprAccess().getOpDegreeSignKeyword_1_0_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GamlUnaryExpr__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlUnaryExprAccess().getAccessParserRuleCall_0()); }
	ruleAccess
{ after(grammarAccess.getGamlUnaryExprAccess().getAccessParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getGamlUnaryExprAccess().getGroup_1()); }
(rule__GamlUnaryExpr__Group_1__0)
{ after(grammarAccess.getGamlUnaryExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GamlUnaryExpr__Alternatives_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlUnaryExprAccess().getGroup_1_1_0()); }
(rule__GamlUnaryExpr__Group_1_1_0__0)
{ after(grammarAccess.getGamlUnaryExprAccess().getGroup_1_1_0()); }
)

    |(
{ before(grammarAccess.getGamlUnaryExprAccess().getGroup_1_1_1()); }
(rule__GamlUnaryExpr__Group_1_1_1__0)
{ after(grammarAccess.getGamlUnaryExprAccess().getGroup_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GamlUnaryExpr__OpAlternatives_1_1_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlUnaryExprAccess().getOpHyphenMinusKeyword_1_1_1_0_0_0()); }

	'-' 

{ after(grammarAccess.getGamlUnaryExprAccess().getOpHyphenMinusKeyword_1_1_1_0_0_0()); }
)

    |(
{ before(grammarAccess.getGamlUnaryExprAccess().getOpExclamationMarkKeyword_1_1_1_0_0_1()); }

	'!' 

{ after(grammarAccess.getGamlUnaryExprAccess().getOpExclamationMarkKeyword_1_1_1_0_0_1()); }
)

    |(
{ before(grammarAccess.getGamlUnaryExprAccess().getOpMyKeyword_1_1_1_0_0_2()); }

	'my' 

{ after(grammarAccess.getGamlUnaryExprAccess().getOpMyKeyword_1_1_1_0_0_2()); }
)

    |(
{ before(grammarAccess.getGamlUnaryExprAccess().getOpTheKeyword_1_1_1_0_0_3()); }

	'the' 

{ after(grammarAccess.getGamlUnaryExprAccess().getOpTheKeyword_1_1_1_0_0_3()); }
)

    |(
{ before(grammarAccess.getGamlUnaryExprAccess().getOpNotKeyword_1_1_1_0_0_4()); }

	'not' 

{ after(grammarAccess.getGamlUnaryExprAccess().getOpNotKeyword_1_1_1_0_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getTerminalExpressionParserRuleCall_0()); }
	ruleTerminalExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getTerminalExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getAbstractRefParserRuleCall_1()); }
	ruleAbstractRef
{ after(grammarAccess.getPrimaryExpressionAccess().getAbstractRefParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_2()); }
(rule__PrimaryExpression__Group_2__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_3()); }
(rule__PrimaryExpression__Group_3__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_4()); }
(rule__PrimaryExpression__Group_4__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractRef__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractRefAccess().getVariableRefParserRuleCall_0()); }
	ruleVariableRef
{ after(grammarAccess.getAbstractRefAccess().getVariableRefParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAbstractRefAccess().getFunctionParserRuleCall_1()); }
	ruleFunction
{ after(grammarAccess.getAbstractRefAccess().getFunctionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getGroup_0()); }
(rule__TerminalExpression__Group_0__0)
{ after(grammarAccess.getTerminalExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getGroup_1()); }
(rule__TerminalExpression__Group_1__0)
{ after(grammarAccess.getTerminalExpressionAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getGroup_2()); }
(rule__TerminalExpression__Group_2__0)
{ after(grammarAccess.getTerminalExpressionAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getGroup_3()); }
(rule__TerminalExpression__Group_3__0)
{ after(grammarAccess.getTerminalExpressionAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getGroup_4()); }
(rule__TerminalExpression__Group_4__0)
{ after(grammarAccess.getTerminalExpressionAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getModelKeyword_0()); }

	'model' 

{ after(grammarAccess.getModelAccess().getModelKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getNameAssignment_1()); }
(rule__Model__NameAssignment_1)
{ after(grammarAccess.getModelAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__2__Impl
	rule__Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getImportsAssignment_2()); }
(rule__Model__ImportsAssignment_2)*
{ after(grammarAccess.getModelAccess().getImportsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getStatementsAssignment_3()); }
(rule__Model__StatementsAssignment_3)*
{ after(grammarAccess.getModelAccess().getStatementsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportURIAssignment_1()); }
(rule__Import__ImportURIAssignment_1)
{ after(grammarAccess.getImportAccess().getImportURIAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IfStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__0__Impl
	rule__IfStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getKeyAssignment_0()); }
(rule__IfStatement__KeyAssignment_0)
{ after(grammarAccess.getIfStatementAccess().getKeyAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__1__Impl
	rule__IfStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getConditionKeyword_1()); }
(
	'condition:' 
)?
{ after(grammarAccess.getIfStatementAccess().getConditionKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__2__Impl
	rule__IfStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getExprAssignment_2()); }
(rule__IfStatement__ExprAssignment_2)
{ after(grammarAccess.getIfStatementAccess().getExprAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__3__Impl
	rule__IfStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getBlockAssignment_3()); }
(rule__IfStatement__BlockAssignment_3)
{ after(grammarAccess.getIfStatementAccess().getBlockAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getGroup_4()); }
(rule__IfStatement__Group_4__0)?
{ after(grammarAccess.getIfStatementAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__IfStatement__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_4__0__Impl
	rule__IfStatement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getElseKeyword_4_0()); }
(
	'else' 
)
{ after(grammarAccess.getIfStatementAccess().getElseKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getElseAssignment_4_1()); }
(rule__IfStatement__ElseAssignment_4_1)
{ after(grammarAccess.getIfStatementAccess().getElseAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClassicStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassicStatement__Group__0__Impl
	rule__ClassicStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassicStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassicStatementAccess().getKeyAssignment_0()); }
(rule__ClassicStatement__KeyAssignment_0)
{ after(grammarAccess.getClassicStatementAccess().getKeyAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassicStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassicStatement__Group__1__Impl
	rule__ClassicStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassicStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassicStatementAccess().getGroup_1()); }
(rule__ClassicStatement__Group_1__0)?
{ after(grammarAccess.getClassicStatementAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassicStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassicStatement__Group__2__Impl
	rule__ClassicStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassicStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassicStatementAccess().getExprAssignment_2()); }
(rule__ClassicStatement__ExprAssignment_2)
{ after(grammarAccess.getClassicStatementAccess().getExprAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassicStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassicStatement__Group__3__Impl
	rule__ClassicStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassicStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassicStatementAccess().getFacetsAssignment_3()); }
(rule__ClassicStatement__FacetsAssignment_3)*
{ after(grammarAccess.getClassicStatementAccess().getFacetsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassicStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassicStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassicStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassicStatementAccess().getAlternatives_4()); }
(rule__ClassicStatement__Alternatives_4)
{ after(grammarAccess.getClassicStatementAccess().getAlternatives_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ClassicStatement__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassicStatement__Group_1__0__Impl
	rule__ClassicStatement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassicStatement__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassicStatementAccess().getIDTerminalRuleCall_1_0()); }
	RULE_ID
{ after(grammarAccess.getClassicStatementAccess().getIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassicStatement__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassicStatement__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassicStatement__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassicStatementAccess().getColonKeyword_1_1()); }

	':' 

{ after(grammarAccess.getClassicStatementAccess().getColonKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DefinitionStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefinitionStatement__Group__0__Impl
	rule__DefinitionStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionStatementAccess().getKeyAssignment_0()); }
(rule__DefinitionStatement__KeyAssignment_0)
{ after(grammarAccess.getDefinitionStatementAccess().getKeyAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefinitionStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefinitionStatement__Group__1__Impl
	rule__DefinitionStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionStatementAccess().getOfAssignment_1()); }
(rule__DefinitionStatement__OfAssignment_1)?
{ after(grammarAccess.getDefinitionStatementAccess().getOfAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefinitionStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefinitionStatement__Group__2__Impl
	rule__DefinitionStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionStatementAccess().getNameAssignment_2()); }
(rule__DefinitionStatement__NameAssignment_2)?
{ after(grammarAccess.getDefinitionStatementAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefinitionStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefinitionStatement__Group__3__Impl
	rule__DefinitionStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionStatementAccess().getFacetsAssignment_3()); }
(rule__DefinitionStatement__FacetsAssignment_3)*
{ after(grammarAccess.getDefinitionStatementAccess().getFacetsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefinitionStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefinitionStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionStatementAccess().getAlternatives_4()); }
(rule__DefinitionStatement__Alternatives_4)
{ after(grammarAccess.getDefinitionStatementAccess().getAlternatives_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Contents__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Contents__Group__0__Impl
	rule__Contents__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Contents__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContentsAccess().getLessThanSignKeyword_0()); }

	'<' 

{ after(grammarAccess.getContentsAccess().getLessThanSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Contents__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Contents__Group__1__Impl
	rule__Contents__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Contents__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContentsAccess().getTypeAssignment_1()); }
(rule__Contents__TypeAssignment_1)
{ after(grammarAccess.getContentsAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Contents__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Contents__Group__2__Impl
	rule__Contents__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Contents__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContentsAccess().getGroup_2()); }
(rule__Contents__Group_2__0)?
{ after(grammarAccess.getContentsAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Contents__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Contents__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Contents__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContentsAccess().getGreaterThanSignKeyword_3()); }

	'>' 

{ after(grammarAccess.getContentsAccess().getGreaterThanSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Contents__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Contents__Group_2__0__Impl
	rule__Contents__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Contents__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContentsAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getContentsAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Contents__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Contents__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Contents__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContentsAccess().getType2Assignment_2_1()); }
(rule__Contents__Type2Assignment_2_1)
{ after(grammarAccess.getContentsAccess().getType2Assignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ReturnStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnStatement__Group__0__Impl
	rule__ReturnStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStatementAccess().getKeyAssignment_0()); }
(rule__ReturnStatement__KeyAssignment_0)
{ after(grammarAccess.getReturnStatementAccess().getKeyAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnStatement__Group__1__Impl
	rule__ReturnStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStatementAccess().getExprAssignment_1()); }
(rule__ReturnStatement__ExprAssignment_1)?
{ after(grammarAccess.getReturnStatementAccess().getExprAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStatementAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getReturnStatementAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AssignmentStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentStatement__Group__0__Impl
	rule__AssignmentStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentStatementAccess().getExprAssignment_0()); }
(rule__AssignmentStatement__ExprAssignment_0)
{ after(grammarAccess.getAssignmentStatementAccess().getExprAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssignmentStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentStatement__Group__1__Impl
	rule__AssignmentStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentStatementAccess().getKeyAssignment_1()); }
(rule__AssignmentStatement__KeyAssignment_1)
{ after(grammarAccess.getAssignmentStatementAccess().getKeyAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssignmentStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentStatement__Group__2__Impl
	rule__AssignmentStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentStatementAccess().getValueAssignment_2()); }
(rule__AssignmentStatement__ValueAssignment_2)
{ after(grammarAccess.getAssignmentStatementAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssignmentStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentStatement__Group__3__Impl
	rule__AssignmentStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentStatementAccess().getFacetsAssignment_3()); }
(rule__AssignmentStatement__FacetsAssignment_3)*
{ after(grammarAccess.getAssignmentStatementAccess().getFacetsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssignmentStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentStatementAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getAssignmentStatementAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ClassicFacet__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassicFacet__Group__0__Impl
	rule__ClassicFacet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassicFacet__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassicFacetAccess().getAlternatives_0()); }
(rule__ClassicFacet__Alternatives_0)
{ after(grammarAccess.getClassicFacetAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassicFacet__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassicFacet__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassicFacet__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassicFacetAccess().getExprAssignment_1()); }
(rule__ClassicFacet__ExprAssignment_1)
{ after(grammarAccess.getClassicFacetAccess().getExprAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClassicFacet__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassicFacet__Group_0_0__0__Impl
	rule__ClassicFacet__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassicFacet__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassicFacetAccess().getKeyAssignment_0_0_0()); }
(rule__ClassicFacet__KeyAssignment_0_0_0)
{ after(grammarAccess.getClassicFacetAccess().getKeyAssignment_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassicFacet__Group_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassicFacet__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassicFacet__Group_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassicFacetAccess().getColonKeyword_0_0_1()); }

	':' 

{ after(grammarAccess.getClassicFacetAccess().getColonKeyword_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionFacet__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionFacet__Group__0__Impl
	rule__FunctionFacet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionFacet__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionFacetAccess().getAlternatives_0()); }
(rule__FunctionFacet__Alternatives_0)
{ after(grammarAccess.getFunctionFacetAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionFacet__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionFacet__Group__1__Impl
	rule__FunctionFacet__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionFacet__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionFacetAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getFunctionFacetAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionFacet__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionFacet__Group__2__Impl
	rule__FunctionFacet__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionFacet__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionFacetAccess().getExprAssignment_2()); }
(rule__FunctionFacet__ExprAssignment_2)
{ after(grammarAccess.getFunctionFacetAccess().getExprAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionFacet__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionFacet__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionFacet__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionFacetAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getFunctionFacetAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__DefinitionFacet__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefinitionFacet__Group__0__Impl
	rule__DefinitionFacet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionFacet__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionFacetAccess().getKeyAssignment_0()); }
(rule__DefinitionFacet__KeyAssignment_0)
{ after(grammarAccess.getDefinitionFacetAccess().getKeyAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefinitionFacet__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefinitionFacet__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionFacet__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionFacetAccess().getNameAssignment_1()); }
(rule__DefinitionFacet__NameAssignment_1)
{ after(grammarAccess.getDefinitionFacetAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Block__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__0__Impl
	rule__Block__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getBlockAction_0()); }
(

)
{ after(grammarAccess.getBlockAccess().getBlockAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__1__Impl
	rule__Block__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__2__Impl
	rule__Block__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getStatementsAssignment_2()); }
(rule__Block__StatementsAssignment_2)*
{ after(grammarAccess.getBlockAccess().getStatementsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TernExp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TernExp__Group__0__Impl
	rule__TernExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TernExp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTernExpAccess().getOrExpParserRuleCall_0()); }
	ruleOrExp
{ after(grammarAccess.getTernExpAccess().getOrExpParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TernExp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TernExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TernExp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTernExpAccess().getGroup_1()); }
(rule__TernExp__Group_1__0)?
{ after(grammarAccess.getTernExpAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TernExp__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TernExp__Group_1__0__Impl
	rule__TernExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TernExp__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTernExpAccess().getTernExpLeftAction_1_0()); }
(

)
{ after(grammarAccess.getTernExpAccess().getTernExpLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TernExp__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TernExp__Group_1__1__Impl
	rule__TernExp__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TernExp__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTernExpAccess().getOpAssignment_1_1()); }
(rule__TernExp__OpAssignment_1_1)
{ after(grammarAccess.getTernExpAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TernExp__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TernExp__Group_1__2__Impl
	rule__TernExp__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TernExp__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTernExpAccess().getRightAssignment_1_2()); }
(rule__TernExp__RightAssignment_1_2)
{ after(grammarAccess.getTernExpAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TernExp__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TernExp__Group_1__3__Impl
	rule__TernExp__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TernExp__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTernExpAccess().getColonKeyword_1_3()); }

	':' 

{ after(grammarAccess.getTernExpAccess().getColonKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TernExp__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TernExp__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TernExp__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTernExpAccess().getIfFalseAssignment_1_4()); }
(rule__TernExp__IfFalseAssignment_1_4)
{ after(grammarAccess.getTernExpAccess().getIfFalseAssignment_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__OrExp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExp__Group__0__Impl
	rule__OrExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpAccess().getAndExpParserRuleCall_0()); }
	ruleAndExp
{ after(grammarAccess.getOrExpAccess().getAndExpParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpAccess().getGroup_1()); }
(rule__OrExp__Group_1__0)*
{ after(grammarAccess.getOrExpAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrExp__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExp__Group_1__0__Impl
	rule__OrExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExp__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpAccess().getExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getOrExpAccess().getExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExp__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExp__Group_1__1__Impl
	rule__OrExp__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExp__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpAccess().getOpAssignment_1_1()); }
(rule__OrExp__OpAssignment_1_1)
{ after(grammarAccess.getOrExpAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExp__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExp__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExp__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpAccess().getRightAssignment_1_2()); }
(rule__OrExp__RightAssignment_1_2)
{ after(grammarAccess.getOrExpAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AndExp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExp__Group__0__Impl
	rule__AndExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpAccess().getRelationalParserRuleCall_0()); }
	ruleRelational
{ after(grammarAccess.getAndExpAccess().getRelationalParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpAccess().getGroup_1()); }
(rule__AndExp__Group_1__0)*
{ after(grammarAccess.getAndExpAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndExp__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExp__Group_1__0__Impl
	rule__AndExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExp__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpAccess().getExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getAndExpAccess().getExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExp__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExp__Group_1__1__Impl
	rule__AndExp__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExp__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpAccess().getOpAssignment_1_1()); }
(rule__AndExp__OpAssignment_1_1)
{ after(grammarAccess.getAndExpAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExp__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExp__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExp__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpAccess().getRightAssignment_1_2()); }
(rule__AndExp__RightAssignment_1_2)
{ after(grammarAccess.getAndExpAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Relational__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relational__Group__0__Impl
	rule__Relational__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalAccess().getPairExprParserRuleCall_0()); }
	rulePairExpr
{ after(grammarAccess.getRelationalAccess().getPairExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relational__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relational__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalAccess().getGroup_1()); }
(rule__Relational__Group_1__0)?
{ after(grammarAccess.getRelationalAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Relational__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relational__Group_1__0__Impl
	rule__Relational__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalAccess().getGroup_1_0()); }
(rule__Relational__Group_1_0__0)
{ after(grammarAccess.getRelationalAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relational__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relational__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalAccess().getRightAssignment_1_1()); }
(rule__Relational__RightAssignment_1_1)
{ after(grammarAccess.getRelationalAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Relational__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relational__Group_1_0__0__Impl
	rule__Relational__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalAccess().getExpressionLeftAction_1_0_0()); }
(

)
{ after(grammarAccess.getRelationalAccess().getExpressionLeftAction_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relational__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relational__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalAccess().getOpAssignment_1_0_1()); }
(rule__Relational__OpAssignment_1_0_1)
{ after(grammarAccess.getRelationalAccess().getOpAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ArgPairExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgPairExpr__Group__0__Impl
	rule__ArgPairExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgPairExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgPairExprAccess().getArgPairExprAction_0()); }
(

)
{ after(grammarAccess.getArgPairExprAccess().getArgPairExprAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArgPairExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgPairExpr__Group__1__Impl
	rule__ArgPairExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgPairExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgPairExprAccess().getAlternatives_1()); }
(rule__ArgPairExpr__Alternatives_1)
{ after(grammarAccess.getArgPairExprAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArgPairExpr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgPairExpr__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgPairExpr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgPairExprAccess().getRightAssignment_2()); }
(rule__ArgPairExpr__RightAssignment_2)
{ after(grammarAccess.getArgPairExprAccess().getRightAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ArgPairExpr__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgPairExpr__Group_1_0__0__Impl
	rule__ArgPairExpr__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgPairExpr__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgPairExprAccess().getArgAssignment_1_0_0()); }
(rule__ArgPairExpr__ArgAssignment_1_0_0)
{ after(grammarAccess.getArgPairExprAccess().getArgAssignment_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArgPairExpr__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgPairExpr__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgPairExpr__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgPairExprAccess().getOpAssignment_1_0_1()); }
(rule__ArgPairExpr__OpAssignment_1_0_1)
{ after(grammarAccess.getArgPairExprAccess().getOpAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ArgPairExpr__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgPairExpr__Group_1_1__0__Impl
	rule__ArgPairExpr__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgPairExpr__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgPairExprAccess().getArgAssignment_1_1_0()); }
(rule__ArgPairExpr__ArgAssignment_1_1_0)
{ after(grammarAccess.getArgPairExprAccess().getArgAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArgPairExpr__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgPairExpr__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgPairExpr__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgPairExprAccess().getOpAssignment_1_1_1()); }
(rule__ArgPairExpr__OpAssignment_1_1_1)
{ after(grammarAccess.getArgPairExprAccess().getOpAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PairExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PairExpr__Group_1__0__Impl
	rule__PairExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PairExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPairExprAccess().getAdditionParserRuleCall_1_0()); }
	ruleAddition
{ after(grammarAccess.getPairExprAccess().getAdditionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PairExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PairExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PairExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPairExprAccess().getGroup_1_1()); }
(rule__PairExpr__Group_1_1__0)?
{ after(grammarAccess.getPairExprAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PairExpr__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PairExpr__Group_1_1__0__Impl
	rule__PairExpr__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PairExpr__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPairExprAccess().getGroup_1_1_0()); }
(rule__PairExpr__Group_1_1_0__0)
{ after(grammarAccess.getPairExprAccess().getGroup_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PairExpr__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PairExpr__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PairExpr__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPairExprAccess().getRightAssignment_1_1_1()); }
(rule__PairExpr__RightAssignment_1_1_1)
{ after(grammarAccess.getPairExprAccess().getRightAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PairExpr__Group_1_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PairExpr__Group_1_1_0__0__Impl
	rule__PairExpr__Group_1_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PairExpr__Group_1_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPairExprAccess().getPairExprLeftAction_1_1_0_0()); }
(

)
{ after(grammarAccess.getPairExprAccess().getPairExprLeftAction_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PairExpr__Group_1_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PairExpr__Group_1_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PairExpr__Group_1_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPairExprAccess().getOpAssignment_1_1_0_1()); }
(rule__PairExpr__OpAssignment_1_1_0_1)
{ after(grammarAccess.getPairExprAccess().getOpAssignment_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Addition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group__0__Impl
	rule__Addition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0()); }
	ruleMultiplication
{ after(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getGroup_1()); }
(rule__Addition__Group_1__0)*
{ after(grammarAccess.getAdditionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Addition__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group_1__0__Impl
	rule__Addition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getGroup_1_0()); }
(rule__Addition__Group_1_0__0)
{ after(grammarAccess.getAdditionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getRightAssignment_1_1()); }
(rule__Addition__RightAssignment_1_1)
{ after(grammarAccess.getAdditionAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Addition__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group_1_0__0__Impl
	rule__Addition__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getExpressionLeftAction_1_0_0()); }
(

)
{ after(grammarAccess.getAdditionAccess().getExpressionLeftAction_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getOpAssignment_1_0_1()); }
(rule__Addition__OpAssignment_1_0_1)
{ after(grammarAccess.getAdditionAccess().getOpAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Multiplication__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group__0__Impl
	rule__Multiplication__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getGamlBinaryExprParserRuleCall_0()); }
	ruleGamlBinaryExpr
{ after(grammarAccess.getMultiplicationAccess().getGamlBinaryExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getGroup_1()); }
(rule__Multiplication__Group_1__0)*
{ after(grammarAccess.getMultiplicationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Multiplication__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group_1__0__Impl
	rule__Multiplication__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getGroup_1_0()); }
(rule__Multiplication__Group_1_0__0)
{ after(grammarAccess.getMultiplicationAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getRightAssignment_1_1()); }
(rule__Multiplication__RightAssignment_1_1)
{ after(grammarAccess.getMultiplicationAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Multiplication__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group_1_0__0__Impl
	rule__Multiplication__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getExpressionLeftAction_1_0_0()); }
(

)
{ after(grammarAccess.getMultiplicationAccess().getExpressionLeftAction_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getOpAssignment_1_0_1()); }
(rule__Multiplication__OpAssignment_1_0_1)
{ after(grammarAccess.getMultiplicationAccess().getOpAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GamlBinaryExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlBinaryExpr__Group__0__Impl
	rule__GamlBinaryExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlBinaryExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlBinaryExprAccess().getGamlUnitExprParserRuleCall_0()); }
	ruleGamlUnitExpr
{ after(grammarAccess.getGamlBinaryExprAccess().getGamlUnitExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GamlBinaryExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlBinaryExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlBinaryExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlBinaryExprAccess().getGroup_1()); }
(rule__GamlBinaryExpr__Group_1__0)*
{ after(grammarAccess.getGamlBinaryExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GamlBinaryExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlBinaryExpr__Group_1__0__Impl
	rule__GamlBinaryExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlBinaryExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlBinaryExprAccess().getGroup_1_0()); }
(rule__GamlBinaryExpr__Group_1_0__0)
{ after(grammarAccess.getGamlBinaryExprAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GamlBinaryExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlBinaryExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlBinaryExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlBinaryExprAccess().getRightAssignment_1_1()); }
(rule__GamlBinaryExpr__RightAssignment_1_1)
{ after(grammarAccess.getGamlBinaryExprAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GamlBinaryExpr__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlBinaryExpr__Group_1_0__0__Impl
	rule__GamlBinaryExpr__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlBinaryExpr__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlBinaryExprAccess().getGamlBinaryExprLeftAction_1_0_0()); }
(

)
{ after(grammarAccess.getGamlBinaryExprAccess().getGamlBinaryExprLeftAction_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GamlBinaryExpr__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlBinaryExpr__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlBinaryExpr__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlBinaryExprAccess().getOpAssignment_1_0_1()); }
(rule__GamlBinaryExpr__OpAssignment_1_0_1)
{ after(grammarAccess.getGamlBinaryExprAccess().getOpAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GamlUnitExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlUnitExpr__Group__0__Impl
	rule__GamlUnitExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlUnitExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlUnitExprAccess().getGamlUnaryExprParserRuleCall_0()); }
	ruleGamlUnaryExpr
{ after(grammarAccess.getGamlUnitExprAccess().getGamlUnaryExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GamlUnitExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlUnitExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlUnitExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlUnitExprAccess().getGroup_1()); }
(rule__GamlUnitExpr__Group_1__0)?
{ after(grammarAccess.getGamlUnitExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GamlUnitExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlUnitExpr__Group_1__0__Impl
	rule__GamlUnitExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlUnitExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlUnitExprAccess().getGroup_1_0()); }
(rule__GamlUnitExpr__Group_1_0__0)
{ after(grammarAccess.getGamlUnitExprAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GamlUnitExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlUnitExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlUnitExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlUnitExprAccess().getRightAssignment_1_1()); }
(rule__GamlUnitExpr__RightAssignment_1_1)
{ after(grammarAccess.getGamlUnitExprAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GamlUnitExpr__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlUnitExpr__Group_1_0__0__Impl
	rule__GamlUnitExpr__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlUnitExpr__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlUnitExprAccess().getGamlUnitExprLeftAction_1_0_0()); }
(

)
{ after(grammarAccess.getGamlUnitExprAccess().getGamlUnitExprLeftAction_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GamlUnitExpr__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlUnitExpr__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlUnitExpr__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlUnitExprAccess().getOpAssignment_1_0_1()); }
(rule__GamlUnitExpr__OpAssignment_1_0_1)
{ after(grammarAccess.getGamlUnitExprAccess().getOpAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GamlUnaryExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlUnaryExpr__Group_1__0__Impl
	rule__GamlUnaryExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlUnaryExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlUnaryExprAccess().getGamlUnaryExprAction_1_0()); }
(

)
{ after(grammarAccess.getGamlUnaryExprAccess().getGamlUnaryExprAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GamlUnaryExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlUnaryExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlUnaryExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlUnaryExprAccess().getAlternatives_1_1()); }
(rule__GamlUnaryExpr__Alternatives_1_1)
{ after(grammarAccess.getGamlUnaryExprAccess().getAlternatives_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GamlUnaryExpr__Group_1_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlUnaryExpr__Group_1_1_0__0__Impl
	rule__GamlUnaryExpr__Group_1_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlUnaryExpr__Group_1_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlUnaryExprAccess().getGamlUnaryExprLeftAction_1_1_0_0()); }
(

)
{ after(grammarAccess.getGamlUnaryExprAccess().getGamlUnaryExprLeftAction_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GamlUnaryExpr__Group_1_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlUnaryExpr__Group_1_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlUnaryExpr__Group_1_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlUnaryExprAccess().getGroup_1_1_0_1()); }
(rule__GamlUnaryExpr__Group_1_1_0_1__0)
{ after(grammarAccess.getGamlUnaryExprAccess().getGroup_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GamlUnaryExpr__Group_1_1_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlUnaryExpr__Group_1_1_0_1__0__Impl
	rule__GamlUnaryExpr__Group_1_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlUnaryExpr__Group_1_1_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlUnaryExprAccess().getOpAssignment_1_1_0_1_0()); }
(rule__GamlUnaryExpr__OpAssignment_1_1_0_1_0)
{ after(grammarAccess.getGamlUnaryExprAccess().getOpAssignment_1_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GamlUnaryExpr__Group_1_1_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlUnaryExpr__Group_1_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlUnaryExpr__Group_1_1_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlUnaryExprAccess().getRightAssignment_1_1_0_1_1()); }
(rule__GamlUnaryExpr__RightAssignment_1_1_0_1_1)
{ after(grammarAccess.getGamlUnaryExprAccess().getRightAssignment_1_1_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GamlUnaryExpr__Group_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlUnaryExpr__Group_1_1_1__0__Impl
	rule__GamlUnaryExpr__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlUnaryExpr__Group_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlUnaryExprAccess().getOpAssignment_1_1_1_0()); }
(rule__GamlUnaryExpr__OpAssignment_1_1_1_0)
{ after(grammarAccess.getGamlUnaryExprAccess().getOpAssignment_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GamlUnaryExpr__Group_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GamlUnaryExpr__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GamlUnaryExpr__Group_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlUnaryExprAccess().getRightAssignment_1_1_1_1()); }
(rule__GamlUnaryExpr__RightAssignment_1_1_1_1)
{ after(grammarAccess.getGamlUnaryExprAccess().getRightAssignment_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Access__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Access__Group__0__Impl
	rule__Access__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Access__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessAccess().getMemberRefParserRuleCall_0()); }
	ruleMemberRef
{ after(grammarAccess.getAccessAccess().getMemberRefParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Access__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Access__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Access__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessAccess().getGroup_1()); }
(rule__Access__Group_1__0)*
{ after(grammarAccess.getAccessAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Access__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Access__Group_1__0__Impl
	rule__Access__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Access__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessAccess().getGroup_1_0()); }
(rule__Access__Group_1_0__0)
{ after(grammarAccess.getAccessAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Access__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Access__Group_1__1__Impl
	rule__Access__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Access__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessAccess().getArgsAssignment_1_1()); }
(rule__Access__ArgsAssignment_1_1)
{ after(grammarAccess.getAccessAccess().getArgsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Access__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Access__Group_1__2__Impl
	rule__Access__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Access__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessAccess().getGroup_1_2()); }
(rule__Access__Group_1_2__0)*
{ after(grammarAccess.getAccessAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Access__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Access__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Access__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessAccess().getRightSquareBracketKeyword_1_3()); }

	']' 

{ after(grammarAccess.getAccessAccess().getRightSquareBracketKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Access__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Access__Group_1_0__0__Impl
	rule__Access__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Access__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessAccess().getAccessLeftAction_1_0_0()); }
(

)
{ after(grammarAccess.getAccessAccess().getAccessLeftAction_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Access__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Access__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Access__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessAccess().getLeftSquareBracketKeyword_1_0_1()); }

	'[' 

{ after(grammarAccess.getAccessAccess().getLeftSquareBracketKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Access__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Access__Group_1_2__0__Impl
	rule__Access__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Access__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessAccess().getCommaKeyword_1_2_0()); }

	',' 

{ after(grammarAccess.getAccessAccess().getCommaKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Access__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Access__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Access__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessAccess().getArgsAssignment_1_2_1()); }
(rule__Access__ArgsAssignment_1_2_1)
{ after(grammarAccess.getAccessAccess().getArgsAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MemberRef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberRef__Group__0__Impl
	rule__MemberRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberRef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberRefAccess().getPrimaryExpressionParserRuleCall_0()); }
	rulePrimaryExpression
{ after(grammarAccess.getMemberRefAccess().getPrimaryExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberRef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberRef__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberRef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberRefAccess().getGroup_1()); }
(rule__MemberRef__Group_1__0)*
{ after(grammarAccess.getMemberRefAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MemberRef__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberRef__Group_1__0__Impl
	rule__MemberRef__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberRef__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberRefAccess().getMemberRefLeftAction_1_0()); }
(

)
{ after(grammarAccess.getMemberRefAccess().getMemberRefLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberRef__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberRef__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberRef__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberRefAccess().getGroup_1_1()); }
(rule__MemberRef__Group_1_1__0)
{ after(grammarAccess.getMemberRefAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MemberRef__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberRef__Group_1_1__0__Impl
	rule__MemberRef__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberRef__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberRefAccess().getOpAssignment_1_1_0()); }
(rule__MemberRef__OpAssignment_1_1_0)
{ after(grammarAccess.getMemberRefAccess().getOpAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberRef__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberRef__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberRef__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberRefAccess().getRightAssignment_1_1_1()); }
(rule__MemberRef__RightAssignment_1_1_1)
{ after(grammarAccess.getMemberRefAccess().getRightAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_2__0__Impl
	rule__PrimaryExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_2__1__Impl
	rule__PrimaryExpression__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getExpressionParserRuleCall_2_1()); }
	ruleExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getExpressionParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_2_2()); }

	')' 

{ after(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PrimaryExpression__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_3__0__Impl
	rule__PrimaryExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLeftSquareBracketKeyword_3_0()); }

	'[' 

{ after(grammarAccess.getPrimaryExpressionAccess().getLeftSquareBracketKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_3__1__Impl
	rule__PrimaryExpression__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getArrayAction_3_1()); }
(

)
{ after(grammarAccess.getPrimaryExpressionAccess().getArrayAction_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_3__2__Impl
	rule__PrimaryExpression__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_3_2()); }
(rule__PrimaryExpression__Group_3_2__0)?
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getRightSquareBracketKeyword_3_3()); }

	']' 

{ after(grammarAccess.getPrimaryExpressionAccess().getRightSquareBracketKeyword_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PrimaryExpression__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_3_2__0__Impl
	rule__PrimaryExpression__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getExprsAssignment_3_2_0()); }
(rule__PrimaryExpression__ExprsAssignment_3_2_0)
{ after(grammarAccess.getPrimaryExpressionAccess().getExprsAssignment_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_3_2_1()); }
(rule__PrimaryExpression__Group_3_2_1__0)*
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryExpression__Group_3_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_3_2_1__0__Impl
	rule__PrimaryExpression__Group_3_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getCommaKeyword_3_2_1_0()); }

	',' 

{ after(grammarAccess.getPrimaryExpressionAccess().getCommaKeyword_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_3_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_3_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getExprsAssignment_3_2_1_1()); }
(rule__PrimaryExpression__ExprsAssignment_3_2_1_1)
{ after(grammarAccess.getPrimaryExpressionAccess().getExprsAssignment_3_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryExpression__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_4__0__Impl
	rule__PrimaryExpression__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLeftCurlyBracketKeyword_4_0()); }

	'{' 

{ after(grammarAccess.getPrimaryExpressionAccess().getLeftCurlyBracketKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_4__1__Impl
	rule__PrimaryExpression__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getPointAction_4_1()); }
(

)
{ after(grammarAccess.getPrimaryExpressionAccess().getPointAction_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_4__2__Impl
	rule__PrimaryExpression__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLeftAssignment_4_2()); }
(rule__PrimaryExpression__LeftAssignment_4_2)
{ after(grammarAccess.getPrimaryExpressionAccess().getLeftAssignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_4__3__Impl
	rule__PrimaryExpression__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getOpAssignment_4_3()); }
(rule__PrimaryExpression__OpAssignment_4_3)
{ after(grammarAccess.getPrimaryExpressionAccess().getOpAssignment_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_4__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_4__4__Impl
	rule__PrimaryExpression__Group_4__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_4__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getRightAssignment_4_4()); }
(rule__PrimaryExpression__RightAssignment_4_4)
{ after(grammarAccess.getPrimaryExpressionAccess().getRightAssignment_4_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_4__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_4__5__Impl
	rule__PrimaryExpression__Group_4__6
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_4__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_4_5()); }
(rule__PrimaryExpression__Group_4_5__0)?
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_4_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_4__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_4__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_4__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getRightCurlyBracketKeyword_4_6()); }

	'}' 

{ after(grammarAccess.getPrimaryExpressionAccess().getRightCurlyBracketKeyword_4_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__PrimaryExpression__Group_4_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_4_5__0__Impl
	rule__PrimaryExpression__Group_4_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_4_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getCommaKeyword_4_5_0()); }

	',' 

{ after(grammarAccess.getPrimaryExpressionAccess().getCommaKeyword_4_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_4_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_4_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_4_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getZAssignment_4_5_1()); }
(rule__PrimaryExpression__ZAssignment_4_5_1)
{ after(grammarAccess.getPrimaryExpressionAccess().getZAssignment_4_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Function__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__0__Impl
	rule__Function__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getFunctionAction_0()); }
(

)
{ after(grammarAccess.getFunctionAccess().getFunctionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getGroup_1()); }
(rule__Function__Group_1__0)
{ after(grammarAccess.getFunctionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Function__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group_1__0__Impl
	rule__Function__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getOpAssignment_1_0()); }
(rule__Function__OpAssignment_1_0)
{ after(grammarAccess.getFunctionAccess().getOpAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group_1__1__Impl
	rule__Function__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_1_1()); }

	'(' 

{ after(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group_1__2__Impl
	rule__Function__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getArgsAssignment_1_2()); }
(rule__Function__ArgsAssignment_1_2)
{ after(grammarAccess.getFunctionAccess().getArgsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group_1__3__Impl
	rule__Function__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getGroup_1_3()); }
(rule__Function__Group_1_3__0)*
{ after(grammarAccess.getFunctionAccess().getGroup_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_1_4()); }

	')' 

{ after(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Function__Group_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group_1_3__0__Impl
	rule__Function__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getCommaKeyword_1_3_0()); }

	',' 

{ after(grammarAccess.getFunctionAccess().getCommaKeyword_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getArgsAssignment_1_3_1()); }
(rule__Function__ArgsAssignment_1_3_1)
{ after(grammarAccess.getFunctionAccess().getArgsAssignment_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnitName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnitName__Group__0__Impl
	rule__UnitName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitNameAccess().getUnitNameAction_0()); }
(

)
{ after(grammarAccess.getUnitNameAccess().getUnitNameAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnitName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnitName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitNameAccess().getOpAssignment_1()); }
(rule__UnitName__OpAssignment_1)
{ after(grammarAccess.getUnitNameAccess().getOpAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariableRef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableRef__Group__0__Impl
	rule__VariableRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableRef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableRefAccess().getVariableRefAction_0()); }
(

)
{ after(grammarAccess.getVariableRefAccess().getVariableRefAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableRef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableRef__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableRef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableRefAccess().getRefAssignment_1()); }
(rule__VariableRef__RefAssignment_1)
{ after(grammarAccess.getVariableRefAccess().getRefAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_0__0__Impl
	rule__TerminalExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getIntLiteralAction_0_0()); }
(

)
{ after(grammarAccess.getTerminalExpressionAccess().getIntLiteralAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getValueAssignment_0_1()); }
(rule__TerminalExpression__ValueAssignment_0_1)
{ after(grammarAccess.getTerminalExpressionAccess().getValueAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_1__0__Impl
	rule__TerminalExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getDoubleLiteralAction_1_0()); }
(

)
{ after(grammarAccess.getTerminalExpressionAccess().getDoubleLiteralAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getValueAssignment_1_1()); }
(rule__TerminalExpression__ValueAssignment_1_1)
{ after(grammarAccess.getTerminalExpressionAccess().getValueAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_2__0__Impl
	rule__TerminalExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getColorLiteralAction_2_0()); }
(

)
{ after(grammarAccess.getTerminalExpressionAccess().getColorLiteralAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getValueAssignment_2_1()); }
(rule__TerminalExpression__ValueAssignment_2_1)
{ after(grammarAccess.getTerminalExpressionAccess().getValueAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpression__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_3__0__Impl
	rule__TerminalExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getStringLiteralAction_3_0()); }
(

)
{ after(grammarAccess.getTerminalExpressionAccess().getStringLiteralAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getValueAssignment_3_1()); }
(rule__TerminalExpression__ValueAssignment_3_1)
{ after(grammarAccess.getTerminalExpressionAccess().getValueAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpression__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_4__0__Impl
	rule__TerminalExpression__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getBooleanLiteralAction_4_0()); }
(

)
{ after(grammarAccess.getTerminalExpressionAccess().getBooleanLiteralAction_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getValueAssignment_4_1()); }
(rule__TerminalExpression__ValueAssignment_4_1)
{ after(grammarAccess.getTerminalExpressionAccess().getValueAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Model__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ImportsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getImportsImportParserRuleCall_2_0()); }
	ruleImport{ after(grammarAccess.getModelAccess().getImportsImportParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__StatementsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getStatementsStatementParserRuleCall_3_0()); }
	ruleStatement{ after(grammarAccess.getModelAccess().getStatementsStatementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportURIAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__KeyAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getKeyIfKeyword_0_0()); }
(
{ before(grammarAccess.getIfStatementAccess().getKeyIfKeyword_0_0()); }

	'if' 

{ after(grammarAccess.getIfStatementAccess().getKeyIfKeyword_0_0()); }
)

{ after(grammarAccess.getIfStatementAccess().getKeyIfKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__ExprAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getExprExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getIfStatementAccess().getExprExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__BlockAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getBlockBlockParserRuleCall_3_0()); }
	ruleBlock{ after(grammarAccess.getIfStatementAccess().getBlockBlockParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__ElseAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getElseAlternatives_4_1_0()); }
(rule__IfStatement__ElseAlternatives_4_1_0)
{ after(grammarAccess.getIfStatementAccess().getElseAlternatives_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassicStatement__KeyAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassicStatementAccess().getKeyBuiltInStatementKeyParserRuleCall_0_0()); }
	ruleBuiltInStatementKey{ after(grammarAccess.getClassicStatementAccess().getKeyBuiltInStatementKeyParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassicStatement__ExprAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassicStatementAccess().getExprExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getClassicStatementAccess().getExprExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassicStatement__FacetsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassicStatementAccess().getFacetsFacetParserRuleCall_3_0()); }
	ruleFacet{ after(grammarAccess.getClassicStatementAccess().getFacetsFacetParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassicStatement__BlockAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassicStatementAccess().getBlockBlockParserRuleCall_4_0_0()); }
	ruleBlock{ after(grammarAccess.getClassicStatementAccess().getBlockBlockParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionStatement__KeyAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionStatementAccess().getKeyIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getDefinitionStatementAccess().getKeyIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionStatement__OfAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionStatementAccess().getOfContentsParserRuleCall_1_0()); }
	ruleContents{ after(grammarAccess.getDefinitionStatementAccess().getOfContentsParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionStatement__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionStatementAccess().getNameAlternatives_2_0()); }
(rule__DefinitionStatement__NameAlternatives_2_0)
{ after(grammarAccess.getDefinitionStatementAccess().getNameAlternatives_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionStatement__FacetsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionStatementAccess().getFacetsFacetParserRuleCall_3_0()); }
	ruleFacet{ after(grammarAccess.getDefinitionStatementAccess().getFacetsFacetParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionStatement__BlockAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionStatementAccess().getBlockBlockParserRuleCall_4_0_0()); }
	ruleBlock{ after(grammarAccess.getDefinitionStatementAccess().getBlockBlockParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Contents__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContentsAccess().getTypeIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getContentsAccess().getTypeIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Contents__Type2Assignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContentsAccess().getType2IDTerminalRuleCall_2_1_0()); }
	RULE_ID{ after(grammarAccess.getContentsAccess().getType2IDTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__KeyAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStatementAccess().getKeyReturnKeyword_0_0()); }
(
{ before(grammarAccess.getReturnStatementAccess().getKeyReturnKeyword_0_0()); }

	'return' 

{ after(grammarAccess.getReturnStatementAccess().getKeyReturnKeyword_0_0()); }
)

{ after(grammarAccess.getReturnStatementAccess().getKeyReturnKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__ExprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStatementAccess().getExprExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getReturnStatementAccess().getExprExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentStatement__ExprAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentStatementAccess().getExprExpressionParserRuleCall_0_0()); }
	ruleExpression{ after(grammarAccess.getAssignmentStatementAccess().getExprExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentStatement__KeyAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentStatementAccess().getKeyAlternatives_1_0()); }
(rule__AssignmentStatement__KeyAlternatives_1_0)
{ after(grammarAccess.getAssignmentStatementAccess().getKeyAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentStatement__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentStatementAccess().getValueExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getAssignmentStatementAccess().getValueExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentStatement__FacetsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentStatementAccess().getFacetsFacetParserRuleCall_3_0()); }
	ruleFacet{ after(grammarAccess.getAssignmentStatementAccess().getFacetsFacetParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassicFacet__KeyAssignment_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassicFacetAccess().getKeyIDTerminalRuleCall_0_0_0_0()); }
	RULE_ID{ after(grammarAccess.getClassicFacetAccess().getKeyIDTerminalRuleCall_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassicFacet__KeyAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassicFacetAccess().getKeyLessThanSignHyphenMinusKeyword_0_1_0()); }
(
{ before(grammarAccess.getClassicFacetAccess().getKeyLessThanSignHyphenMinusKeyword_0_1_0()); }

	'<-' 

{ after(grammarAccess.getClassicFacetAccess().getKeyLessThanSignHyphenMinusKeyword_0_1_0()); }
)

{ after(grammarAccess.getClassicFacetAccess().getKeyLessThanSignHyphenMinusKeyword_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassicFacet__ExprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassicFacetAccess().getExprExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getClassicFacetAccess().getExprExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionFacet__KeyAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionFacetAccess().getKeyFunctionKeyword_0_0_0()); }
(
{ before(grammarAccess.getFunctionFacetAccess().getKeyFunctionKeyword_0_0_0()); }

	'function:' 

{ after(grammarAccess.getFunctionFacetAccess().getKeyFunctionKeyword_0_0_0()); }
)

{ after(grammarAccess.getFunctionFacetAccess().getKeyFunctionKeyword_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionFacet__KeyAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionFacetAccess().getKeyHyphenMinusGreaterThanSignKeyword_0_1_0()); }
(
{ before(grammarAccess.getFunctionFacetAccess().getKeyHyphenMinusGreaterThanSignKeyword_0_1_0()); }

	'->' 

{ after(grammarAccess.getFunctionFacetAccess().getKeyHyphenMinusGreaterThanSignKeyword_0_1_0()); }
)

{ after(grammarAccess.getFunctionFacetAccess().getKeyHyphenMinusGreaterThanSignKeyword_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionFacet__ExprAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionFacetAccess().getExprExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getFunctionFacetAccess().getExprExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionFacet__KeyAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionFacetAccess().getKeyDefinitionFacetKeyParserRuleCall_0_0()); }
	ruleDefinitionFacetKey{ after(grammarAccess.getDefinitionFacetAccess().getKeyDefinitionFacetKeyParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionFacet__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionFacetAccess().getNameAlternatives_1_0()); }
(rule__DefinitionFacet__NameAlternatives_1_0)
{ after(grammarAccess.getDefinitionFacetAccess().getNameAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Block__StatementsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getStatementsStatementParserRuleCall_2_0()); }
	ruleStatement{ after(grammarAccess.getBlockAccess().getStatementsStatementParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TernExp__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTernExpAccess().getOpQuestionMarkKeyword_1_1_0()); }
(
{ before(grammarAccess.getTernExpAccess().getOpQuestionMarkKeyword_1_1_0()); }

	'?' 

{ after(grammarAccess.getTernExpAccess().getOpQuestionMarkKeyword_1_1_0()); }
)

{ after(grammarAccess.getTernExpAccess().getOpQuestionMarkKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TernExp__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTernExpAccess().getRightOrExpParserRuleCall_1_2_0()); }
	ruleOrExp{ after(grammarAccess.getTernExpAccess().getRightOrExpParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TernExp__IfFalseAssignment_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTernExpAccess().getIfFalseOrExpParserRuleCall_1_4_0()); }
	ruleOrExp{ after(grammarAccess.getTernExpAccess().getIfFalseOrExpParserRuleCall_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrExp__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpAccess().getOpOrKeyword_1_1_0()); }
(
{ before(grammarAccess.getOrExpAccess().getOpOrKeyword_1_1_0()); }

	'or' 

{ after(grammarAccess.getOrExpAccess().getOpOrKeyword_1_1_0()); }
)

{ after(grammarAccess.getOrExpAccess().getOpOrKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrExp__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpAccess().getRightAndExpParserRuleCall_1_2_0()); }
	ruleAndExp{ after(grammarAccess.getOrExpAccess().getRightAndExpParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExp__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpAccess().getOpAndKeyword_1_1_0()); }
(
{ before(grammarAccess.getAndExpAccess().getOpAndKeyword_1_1_0()); }

	'and' 

{ after(grammarAccess.getAndExpAccess().getOpAndKeyword_1_1_0()); }
)

{ after(grammarAccess.getAndExpAccess().getOpAndKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExp__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpAccess().getRightRelationalParserRuleCall_1_2_0()); }
	ruleRelational{ after(grammarAccess.getAndExpAccess().getRightRelationalParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relational__OpAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalAccess().getOpAlternatives_1_0_1_0()); }
(rule__Relational__OpAlternatives_1_0_1_0)
{ after(grammarAccess.getRelationalAccess().getOpAlternatives_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relational__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalAccess().getRightPairExprParserRuleCall_1_1_0()); }
	rulePairExpr{ after(grammarAccess.getRelationalAccess().getRightPairExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArgPairExpr__ArgAssignment_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgPairExprAccess().getArgIDTerminalRuleCall_1_0_0_0()); }
	RULE_ID{ after(grammarAccess.getArgPairExprAccess().getArgIDTerminalRuleCall_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArgPairExpr__OpAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgPairExprAccess().getOpColonColonKeyword_1_0_1_0()); }
(
{ before(grammarAccess.getArgPairExprAccess().getOpColonColonKeyword_1_0_1_0()); }

	'::' 

{ after(grammarAccess.getArgPairExprAccess().getOpColonColonKeyword_1_0_1_0()); }
)

{ after(grammarAccess.getArgPairExprAccess().getOpColonColonKeyword_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArgPairExpr__ArgAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgPairExprAccess().getArgDefinitionFacetKeyParserRuleCall_1_1_0_0()); }
	ruleDefinitionFacetKey{ after(grammarAccess.getArgPairExprAccess().getArgDefinitionFacetKeyParserRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArgPairExpr__OpAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgPairExprAccess().getOpColonKeyword_1_1_1_0()); }
(
{ before(grammarAccess.getArgPairExprAccess().getOpColonKeyword_1_1_1_0()); }

	':' 

{ after(grammarAccess.getArgPairExprAccess().getOpColonKeyword_1_1_1_0()); }
)

{ after(grammarAccess.getArgPairExprAccess().getOpColonKeyword_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArgPairExpr__RightAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgPairExprAccess().getRightAdditionParserRuleCall_2_0()); }
	ruleAddition{ after(grammarAccess.getArgPairExprAccess().getRightAdditionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PairExpr__OpAssignment_1_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPairExprAccess().getOpColonColonKeyword_1_1_0_1_0()); }
(
{ before(grammarAccess.getPairExprAccess().getOpColonColonKeyword_1_1_0_1_0()); }

	'::' 

{ after(grammarAccess.getPairExprAccess().getOpColonColonKeyword_1_1_0_1_0()); }
)

{ after(grammarAccess.getPairExprAccess().getOpColonColonKeyword_1_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PairExpr__RightAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPairExprAccess().getRightAdditionParserRuleCall_1_1_1_0()); }
	ruleAddition{ after(grammarAccess.getPairExprAccess().getRightAdditionParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__OpAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getOpAlternatives_1_0_1_0()); }
(rule__Addition__OpAlternatives_1_0_1_0)
{ after(grammarAccess.getAdditionAccess().getOpAlternatives_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getRightMultiplicationParserRuleCall_1_1_0()); }
	ruleMultiplication{ after(grammarAccess.getAdditionAccess().getRightMultiplicationParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__OpAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getOpAlternatives_1_0_1_0()); }
(rule__Multiplication__OpAlternatives_1_0_1_0)
{ after(grammarAccess.getMultiplicationAccess().getOpAlternatives_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getRightGamlBinaryExprParserRuleCall_1_1_0()); }
	ruleGamlBinaryExpr{ after(grammarAccess.getMultiplicationAccess().getRightGamlBinaryExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GamlBinaryExpr__OpAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlBinaryExprAccess().getOpIDTerminalRuleCall_1_0_1_0()); }
	RULE_ID{ after(grammarAccess.getGamlBinaryExprAccess().getOpIDTerminalRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GamlBinaryExpr__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlBinaryExprAccess().getRightGamlUnitExprParserRuleCall_1_1_0()); }
	ruleGamlUnitExpr{ after(grammarAccess.getGamlBinaryExprAccess().getRightGamlUnitExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GamlUnitExpr__OpAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlUnitExprAccess().getOpAlternatives_1_0_1_0()); }
(rule__GamlUnitExpr__OpAlternatives_1_0_1_0)
{ after(grammarAccess.getGamlUnitExprAccess().getOpAlternatives_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GamlUnitExpr__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlUnitExprAccess().getRightUnitNameParserRuleCall_1_1_0()); }
	ruleUnitName{ after(grammarAccess.getGamlUnitExprAccess().getRightUnitNameParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GamlUnaryExpr__OpAssignment_1_1_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlUnaryExprAccess().getOpDegreeSignKeyword_1_1_0_1_0_0()); }
(
{ before(grammarAccess.getGamlUnaryExprAccess().getOpDegreeSignKeyword_1_1_0_1_0_0()); }

	'\u00B0' 

{ after(grammarAccess.getGamlUnaryExprAccess().getOpDegreeSignKeyword_1_1_0_1_0_0()); }
)

{ after(grammarAccess.getGamlUnaryExprAccess().getOpDegreeSignKeyword_1_1_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GamlUnaryExpr__RightAssignment_1_1_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlUnaryExprAccess().getRightUnitNameParserRuleCall_1_1_0_1_1_0()); }
	ruleUnitName{ after(grammarAccess.getGamlUnaryExprAccess().getRightUnitNameParserRuleCall_1_1_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GamlUnaryExpr__OpAssignment_1_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlUnaryExprAccess().getOpAlternatives_1_1_1_0_0()); }
(rule__GamlUnaryExpr__OpAlternatives_1_1_1_0_0)
{ after(grammarAccess.getGamlUnaryExprAccess().getOpAlternatives_1_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GamlUnaryExpr__RightAssignment_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGamlUnaryExprAccess().getRightGamlUnaryExprParserRuleCall_1_1_1_1_0()); }
	ruleGamlUnaryExpr{ after(grammarAccess.getGamlUnaryExprAccess().getRightGamlUnaryExprParserRuleCall_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Access__ArgsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessAccess().getArgsExpressionParserRuleCall_1_1_0()); }
	ruleExpression{ after(grammarAccess.getAccessAccess().getArgsExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Access__ArgsAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessAccess().getArgsExpressionParserRuleCall_1_2_1_0()); }
	ruleExpression{ after(grammarAccess.getAccessAccess().getArgsExpressionParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberRef__OpAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberRefAccess().getOpFullStopKeyword_1_1_0_0()); }
(
{ before(grammarAccess.getMemberRefAccess().getOpFullStopKeyword_1_1_0_0()); }

	'.' 

{ after(grammarAccess.getMemberRefAccess().getOpFullStopKeyword_1_1_0_0()); }
)

{ after(grammarAccess.getMemberRefAccess().getOpFullStopKeyword_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberRef__RightAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberRefAccess().getRightPrimaryExpressionParserRuleCall_1_1_1_0()); }
	rulePrimaryExpression{ after(grammarAccess.getMemberRefAccess().getRightPrimaryExpressionParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ExprsAssignment_3_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getExprsExpressionParserRuleCall_3_2_0_0()); }
	ruleExpression{ after(grammarAccess.getPrimaryExpressionAccess().getExprsExpressionParserRuleCall_3_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ExprsAssignment_3_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getExprsExpressionParserRuleCall_3_2_1_1_0()); }
	ruleExpression{ after(grammarAccess.getPrimaryExpressionAccess().getExprsExpressionParserRuleCall_3_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__LeftAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLeftExpressionParserRuleCall_4_2_0()); }
	ruleExpression{ after(grammarAccess.getPrimaryExpressionAccess().getLeftExpressionParserRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__OpAssignment_4_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getOpCommaKeyword_4_3_0()); }
(
{ before(grammarAccess.getPrimaryExpressionAccess().getOpCommaKeyword_4_3_0()); }

	',' 

{ after(grammarAccess.getPrimaryExpressionAccess().getOpCommaKeyword_4_3_0()); }
)

{ after(grammarAccess.getPrimaryExpressionAccess().getOpCommaKeyword_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__RightAssignment_4_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getRightExpressionParserRuleCall_4_4_0()); }
	ruleExpression{ after(grammarAccess.getPrimaryExpressionAccess().getRightExpressionParserRuleCall_4_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ZAssignment_4_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getZExpressionParserRuleCall_4_5_1_0()); }
	ruleExpression{ after(grammarAccess.getPrimaryExpressionAccess().getZExpressionParserRuleCall_4_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__OpAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getOpIDTerminalRuleCall_1_0_0()); }
	RULE_ID{ after(grammarAccess.getFunctionAccess().getOpIDTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__ArgsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getArgsExpressionParserRuleCall_1_2_0()); }
	ruleExpression{ after(grammarAccess.getFunctionAccess().getArgsExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__ArgsAssignment_1_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getArgsExpressionParserRuleCall_1_3_1_0()); }
	ruleExpression{ after(grammarAccess.getFunctionAccess().getArgsExpressionParserRuleCall_1_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnitName__OpAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitNameAccess().getOpIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getUnitNameAccess().getOpIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableRef__RefAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableRefAccess().getRefGamlVarRefCrossReference_1_0()); }
(
{ before(grammarAccess.getVariableRefAccess().getRefGamlVarRefIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getVariableRefAccess().getRefGamlVarRefIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getVariableRefAccess().getRefGamlVarRefCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__ValueAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getValueINTEGERTerminalRuleCall_0_1_0()); }
	RULE_INTEGER{ after(grammarAccess.getTerminalExpressionAccess().getValueINTEGERTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__ValueAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getValueDOUBLETerminalRuleCall_1_1_0()); }
	RULE_DOUBLE{ after(grammarAccess.getTerminalExpressionAccess().getValueDOUBLETerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__ValueAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getValueCOLORTerminalRuleCall_2_1_0()); }
	RULE_COLOR{ after(grammarAccess.getTerminalExpressionAccess().getValueCOLORTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__ValueAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getValueSTRINGTerminalRuleCall_3_1_0()); }
	RULE_STRING{ after(grammarAccess.getTerminalExpressionAccess().getValueSTRINGTerminalRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__ValueAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getValueBOOLEANTerminalRuleCall_4_1_0()); }
	RULE_BOOLEAN{ after(grammarAccess.getTerminalExpressionAccess().getValueBOOLEANTerminalRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_INTEGER : ('0'|'1'..'9' ('0'..'9')*);

RULE_BOOLEAN : ('true'|'false');

RULE_ID : ('a'..'z'|'A'..'Z'|'_'|'$') ('a'..'z'|'A'..'Z'|'_'|'$'|'0'..'9')*;

RULE_COLOR : '#' ('0'..'9'|'A'..'F')+;

RULE_DOUBLE : ('1'..'9' ('0'..'9')* ('.' ('0'..'9')+)? (('E'|'e') ('+'|'-')? ('0'..'9')+)?|'0' ('.' ('0'..'9')+)? (('E'|'e') ('+'|'-')? ('0'..'9')+)?);

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


