<?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>
<model name="fire">
    <global>
        <var type="int" name="density_of_trees" parameter="true" init="50" min="1" max="99"/>
        <var type="bool" name="four_neighbours" parameter ="true" init="false"/>
        <var type="int" name="numberOfStartingPoints" parameter="true" init="10" min="0"/>
        <var type="rgb" name="green" init="rgb 'green'" const= "true" />
        <var type="rgb" name="black" init="rgb 'black'" const= "true" />
        <var type="int" name="timeForBurning" init="200" parameter="true"/>
        <var type="float" name="initialProbabilityToPropagate" init="0.5" parameter="true"/>
        <var type="rgb" name="red" init="rgb 'red'" const="true" />
        <var type="int" name="environment_width" parameter="true" init="250" min="10" max="1000"/>
        <var type="int" name="environment_height" parameter="true" init="250" min="10" max="1000"/>
        <init>

            <let name="startingPlaces" value="numberOfStartingPoints among (list grid)"/>
            <ask target="startingPlaces">
                <do action="ignite"/>
                <do action="debug">
                    <arg name="message" value="(string location) + ' ignited'"/>
                </do>
            </ask>
        </init>
    </global>
    
    <environment width="environment_width" height="environment_height">
        <grid name="grid" width="environment_width" height="environment_height" neighbours="four_neighbours ? 4 : 8">
            <var type="rgb" name="color" init="rgb 'black'"/>
            <var type="bool" name="ignited" init="false"/>
            <var type="bool" name="burning" init="false"/>
            <var type="bool" name="tree" init="(rnd 100 &lt; density_of_trees)"/>
            <var type="int" name="time_of_ignition" init="0"/>
            
            <action name="ignite">
                <set name="color" value="red"/>
                <set name="ignited" value="true"/>
                <set name="time_of_ignition" value="time"/>
            </action>
            
            <init>
                <if condition="(!ignited) and (tree)">
                    <set var="color" value="green"/>
                </if>
            </init>
            
            <reflex when="burning and (time_of_ignition &lt; time - timeForBurning)">
                    <set name="burning" value="false"/>
                    <set name="color" value="black"/>
                    <set name="tree" value="false"/>
            </reflex>
            
            <reflex when="ignited and (time_of_ignition &lt; time)">
            	<let name="neighbours" value="self neighbours_at 1" of="grid"/>
                <set name="ignited" value="false"/>
                <set name="burning" value="true"/>
                <let name="probabilityToPropagate" value="initialProbabilityToPropagate + (0.2 * (neighbours count (each.burning or each.ignited)))"/>
                <set name="probabilityToPropagate" value="min [1.0, probabilityToPropagate]"/>
                <if condition="flip probabilityToPropagate">
                <ask target="neighbours where (each.tree and !each.burning)">
                    <do action="ignite"/>
                </ask>
                </if>
            </reflex>
            
            
        </grid>
    </environment>
    


    <output>
        <display name="Forest" refresh_every="1" >
            <grid name="grid"/>
        </display>
    </output>
</model>