<?xml version="1.0" encoding="UTF-8"?><!---->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:wiki="www.google.fr">
<xsl:import href="docGaml-template-checkName-xml2md.xsl"/>
<xsl:import href="docGaml-template-generateExamples-xml2md.xsl"/>

<xsl:variable name="fileOperators" select="'G__Operators'"/>
<xsl:variable name="fileStatements" select="'G__Statements'"/>
<xsl:variable name="fileUnitsConstants" select="'G__UnitsAndConstants'"/>
<xsl:variable name="fileControl" select="'G__BuiltInControlArchitectures'"/>
<xsl:variable name="fileSpecies" select="'G__BuiltInSpecies'"/>
<xsl:variable name="fileSkills" select="'G__BuiltInSkills'"/>


<xsl:template match="/">
# Exhaustive list of GAMA Keywords

----

**This file is automatically generated from java files. Do Not Edit It.**

----

## Operators
<xsl:for-each select="/doc/operators/operator"> 
			<xsl:sort select="@name" />
			<xsl:text>[</xsl:text> <xsl:value-of select="@name"/> <xsl:text>](</xsl:text><xsl:value-of select="$fileOperators"/><xsl:text>#</xsl:text> <xsl:value-of select="@name"/> <xsl:text>), </xsl:text> 
	</xsl:for-each>
			  	
----

## Statements 
<xsl:for-each select="/doc/statements/statement">
    	<xsl:sort select="@name" />
			<xsl:text>[</xsl:text> <xsl:value-of select="@name"/> <xsl:text>](</xsl:text><xsl:value-of select="$fileStatements"/><xsl:text>#</xsl:text> <xsl:value-of select="@name"/> <xsl:text>), </xsl:text> 
    </xsl:for-each>

----

## Architectures
<xsl:for-each select="/doc/architectures/architecture">
    	<xsl:sort select="@name" />
		<xsl:text>[</xsl:text> <xsl:value-of select="@name"/> <xsl:text>](</xsl:text><xsl:value-of select="$fileControl"/><xsl:text>#</xsl:text> <xsl:value-of select="@name"/> <xsl:text>), </xsl:text>   	
    </xsl:for-each>

----

## Constants and colors
<xsl:for-each select="/doc/constants/constant"> 
			<xsl:sort select="@name" />

<xsl:text>[</xsl:text><xsl:value-of select="@name"/><xsl:text>](</xsl:text><xsl:value-of select="$fileUnitsConstants"/><xsl:text>)</xsl:text> <xsl:if test="@altNames"> <xsl:text> (</xsl:text> <xsl:value-of select="@altNames"/> <xsl:text>)</xsl:text></xsl:if><xsl:text>, </xsl:text>
</xsl:for-each>

----

## Skills
<xsl:for-each select="/doc/skills/skill">
    	<xsl:sort select="@name" />
		<xsl:text>[</xsl:text> <xsl:value-of select="@name"/> <xsl:text>](</xsl:text><xsl:value-of select="$fileSkills"/><xsl:text>#</xsl:text> <xsl:value-of select="@name"/> <xsl:text>), </xsl:text> 

</xsl:for-each>	

----

## Species
<xsl:for-each select="/doc/speciess/species">
    	<xsl:sort select="@name" />
		<xsl:text>[</xsl:text> <xsl:value-of select="@name"/> <xsl:text>](</xsl:text><xsl:value-of select="$fileSpecies"/><xsl:text>#</xsl:text> <xsl:value-of select="@name"/> <xsl:text>), </xsl:text> 
   	</xsl:for-each>
   	[world](G__BuiltInSpecies#model )

----

## Actions
<xsl:for-each select="/doc/speciess/species">
	<xsl:sort select="@name" />
	<xsl:for-each select="actions/action">
<xsl:text>[</xsl:text> <xsl:value-of select="@name"/> <xsl:text>](</xsl:text><xsl:value-of select="$fileSpecies"/><xsl:text>#</xsl:text> <xsl:value-of select="@name"/> <xsl:text>), </xsl:text> 
</xsl:for-each>
</xsl:for-each>

<xsl:for-each select="/doc/skills/skill">
	<xsl:sort select="@name" />
	<xsl:for-each select="actions/action">
<xsl:text>[</xsl:text> <xsl:value-of select="@name"/> <xsl:text>](</xsl:text><xsl:value-of select="$fileSkills"/><xsl:text>#</xsl:text> <xsl:value-of select="@name"/> <xsl:text>), </xsl:text> 
	</xsl:for-each>
</xsl:for-each>   	

----

## Variables
<xsl:for-each select="/doc/skills/skill">
    	<xsl:sort select="@name" />
    	<xsl:for-each select="vars/var">
			<xsl:text>[</xsl:text> <xsl:value-of select="@name"/> <xsl:text>](</xsl:text><xsl:value-of select="$fileSkills"/><xsl:text>), </xsl:text> 
		</xsl:for-each>	
</xsl:for-each>   	

----

## Pseudo-Variables

[self](G__PseudoVariables#self ), [myself](G__PseudoVariables#myself ), [each](G__PseudoVariables#each)

----

## Types
[bool](G__DataTypes#bool), [float](G__DataTypes#float), [int](G__DataTypes#int), [string](G__DataTypes#string), [agent](G__DataTypes#agent), [container](G__DataTypes#container)
, [file](G__DataTypes#file), [geometry](G__DataTypes#geometry), [graph](G__DataTypes#graph), [list](G__DataTypes#list), [map](G__DataTypes#map), [matrix](G__DataTypes#matrix)
, [pair](G__DataTypes#pair), [path](G__DataTypes#path), [point](G__DataTypes#point), [rgb](G__DataTypes#rgb), [color](G__DataTypes#rgb), [species](G__DataTypes#species), [topology](G__DataTypes#topology)

----

## [the world](G__GlobalSpecies)
[torus](G__GlobalSpecies), [Environment Size](G__GlobalSpecies#Environment_Size), [world](G__GlobalSpecies#world), [time](G__GlobalSpecies#time)
[cycle](G__GlobalSpecies#cycle ), [step](G__GlobalSpecies#step), [time](G__GlobalSpecies#time), [duration](G__GlobalSpecies#duration), [total_duration](G__GlobalSpecies#total_duration)
[average_duration](G__GlobalSpecies#average_duration), [machine_time](G__GlobalSpecies#machine_time), [agents](G__GlobalSpecies#agents), [stop](G__GlobalSpecies#halt), [halt](G__GlobalSpecies#halt), [pause](G__GlobalSpecies#pause), [scheduling](G__GlobalSpecies#scheduling)

----

## Grid
[grid_x](G__GridSpecies#grid_x), [grid_y](G__GridSpecies#grid_y), [agents](G__GridSpecies#agents), [color](G__GridSpecies#color), [grid_value](G__GridSpecies#grid_value) 

----

## Other concepts
[scheduling](G__RuntimeConcepts#Scheduling_of_Agents ), [step](G__RuntimeConcepts#Agents_Step), [Key concepts](G__KeyConcepts), [G__KeyConcepts#Vocabulary_correspondance_with_the_agent-based_paradigm_as_in_Ne correspondance GAMA Netlogo], [operators statements type species](G__KeyConcepts#Translation_into_a_concrete_syntax)

</xsl:template>


</xsl:stylesheet>
