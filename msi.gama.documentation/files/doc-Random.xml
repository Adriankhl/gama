<?xml version="1.0" encoding="UTF-8" standalone="no"?><doc><operators><operator category="Random" id="flip" name="flip"><alternativeName/><combinaisonIO><operands contentType="-13" returnType="java.lang.Boolean" type="-13"><operand name="probability" position="0" type="java.lang.Double"/></operands></combinaisonIO><documentation><result>true or false given the probability represented by the operand</result><comment/><specialCases><case item="flip 0 always returns false, flip 1 true"/></specialCases><examples><example code="flip (0.66666) -&gt; 2/3 chances to return true."/></examples><seeAlso><see id="rnd"/></seeAlso></documentation></operator><operator category="Random" id="one_of" name="one_of"><alternativeName><altName name="any"/></alternativeName><combinaisonIO><operands contentType="-13" returnType="msi.gama.metamodel.agent.IAgent" type="-16"><operand name="l" position="0" type="msi.gaml.species.ISpecies"/></operands></combinaisonIO><documentation><result>a random element from the list</result><comment/><specialCases><case item="if the list is empty, returns nil "/><case item="In the operand is a species, the operand is casted to a list before the expression is evaluated. Therefore, if foo is the name of a species, any(foo) will return a random agent from this species (see list)"/></specialCases><examples><example code="one_of (bug) -&gt; bug3     // The species `bug` has previously be defined"/></examples><seeAlso/></documentation></operator><operator category="Random" id="poisson" name="poisson"><alternativeName/><combinaisonIO><operands contentType="-13" returnType="java.lang.Integer" type="-13"><operand name="mean" position="0" type="java.lang.Double"/></operands></combinaisonIO><documentation><result>A value from a random variable following a Poisson distribution (with the positive expected number of occurence lambda as operand).</result><comment>The Poisson distribution is a discrete probability distribution that expresses the probability of a given number of events occurring in a fixed interval of time and/or space if these events occur with a known average rate and independently of the time since the last event, cf. Poisson distribution on Wikipedia.</comment><specialCases/><examples><example code="poisson(3.5) -&gt; a random positive integer"/></examples><seeAlso><see id="binomial"/><see id="gauss"/></seeAlso></documentation></operator><operator category="Random" id="shuffle" name="shuffle"><alternativeName/><combinaisonIO><operands contentType="4" returnType="java.lang.String" type="-13"><operand name="target" position="0" type="java.lang.String"/></operands><operands contentType="-16" returnType="msi.gama.util.IList" type="-13"><operand name="target" position="0" type="msi.gaml.species.ISpecies"/></operands><operands contentType="-16" returnType="msi.gama.util.IList" type="-13"><operand name="target" position="0" type="msi.gama.util.IList"/></operands><operands contentType="-16" returnType="msi.gama.util.matrix.IMatrix" type="-13"><operand name="target" position="0" type="msi.gama.util.matrix.IMatrix"/></operands></combinaisonIO><documentation><result>The elements of the operand in random order.</result><comment/><specialCases><case item="if the operand is empty, returns an empty list (or string, matrix)"/></specialCases><examples><example code="shuffle ('abc') -&gt; 'bac'"/><example code="shuffle (bug) -&gt;  shuffle the list of all agents of the `bug` species"/><example code="shuffle ([12, 13, 14]) -&gt; [14,12,13];"/><example code="shuffle ([[&quot;c11&quot;,&quot;c12&quot;,&quot;c13&quot;],[&quot;c21&quot;,&quot;c22&quot;,&quot;c23&quot;]]) -&gt; [[&quot;c12&quot;,&quot;c21&quot;,&quot;c11&quot;],[&quot;c13&quot;,&quot;c22&quot;,&quot;c23&quot;]]"/></examples><seeAlso><see id="reverse"/></seeAlso></documentation></operator><operator category="Random" id="rnd" name="rnd"><alternativeName/><combinaisonIO><operands contentType="-13" returnType="java.lang.Integer" type="-13"><operand name="max" position="0" type="java.lang.Double"/></operands><operands contentType="-13" returnType="java.lang.Integer" type="-13"><operand name="max" position="0" type="java.lang.Integer"/></operands><operands contentType="-13" returnType="msi.gama.metamodel.shape.ILocation" type="-13"><operand name="max" position="0" type="msi.gama.metamodel.shape.GamaPoint"/></operands></combinaisonIO><documentation><result>a random integer in the interval [0, operand]</result><comment>to obtain a probability between 0 and 1, use the expression (rnd n) / n, where n is used to indicate the precision</comment><specialCases><case item="if the operand is a float, it is casted to an int before being evaluated"/><case item="if the operand is a point, returns a point with two random integers in the interval [0, operand]"/></specialCases><examples><example code="rnd (2.5) -&gt; 0, 1 or 2"/><example code="rnd (2) -&gt; 0, 1 or 2"/><example code="rnd (1000) / 1000 -&gt; a float between 0 and 1 with a precision of 0.001"/><example code="rnd ({2.5,3}) -&gt; {x,y} with x in [0,2] and y in [0,3]"/></examples><seeAlso><see id="flip"/></seeAlso></documentation></operator><operator category="Random" id="binomial" name="binomial"><alternativeName/><combinaisonIO><operands contentType="-13" returnType="java.lang.Integer" type="-13"><operand name="point" position="0" type="msi.gama.metamodel.shape.GamaPoint"/></operands></combinaisonIO><documentation><result>A value from a random variable following a binomial distribution. The operand {n,p} represents the number of experiments n and the success probability p.</result><comment>The binomial distribution is the discrete probability distribution of the number of successes in a sequence of n independent yes/no experiments, each of which yields success with probability p, cf. Binomial distribution on Wikipedia.</comment><specialCases/><examples><example code="binomial({15,0.6})  -&gt;  a random positive integer"/></examples><seeAlso><see id="poisson"/><see id="gauss"/></seeAlso></documentation></operator><operator category="Random" id="gauss" name="gauss"><alternativeName/><combinaisonIO><operands contentType="-13" returnType="java.lang.Double" type="-13"><operand name="point" position="0" type="msi.gama.metamodel.shape.GamaPoint"/></operands></combinaisonIO><documentation><result>A value from a normally distributed random variable with expected value (mean) and variance (standardDeviation). The probability density function of such a variable is a Gaussian.</result><comment/><specialCases><case item="when the operand is a point, it is read as {mean, standardDeviation}"/><case item="when standardDeviation value is 0.0, it always returns the mean value"/></specialCases><examples><example code="gauss({0,0.3})  -&gt;  0.22354"/><example code="gauss({0,0.3})  -&gt;  -0.1357"/></examples><seeAlso><see id="truncated_gauss"/><see id="poisson"/></seeAlso></documentation></operator><operator category="Random" id="truncated_gauss" name="truncated_gauss"><alternativeName><altName name="TGauss"/></alternativeName><combinaisonIO><operands contentType="-13" returnType="java.lang.Double" type="-13"><operand name="p" position="0" type="msi.gama.metamodel.shape.GamaPoint"/></operands><operands contentType="-13" returnType="java.lang.Double" type="-13"><operand name="list" position="0" type="msi.gama.util.IList"/></operands></combinaisonIO><documentation><result>A random value from a normally distributed random variable in the interval ]mean - standardDeviation; mean + standardDeviation[.</result><comment/><specialCases><case item="when the operand is a point, it is read as {mean, standardDeviation}"/><case item="if the operand is a list, only the two first elements are taken into account as [mean, standardDeviation]"/><case item="when truncated_gauss is called with a list of only one element mean, it will always return 0.0"/></specialCases><examples><example code="truncated_gauss ({0, 0.3})  -&gt;  an float between -0.3 and 0.3"/><example code="truncated_gauss ([0.5, 0.0])  -&gt;  0.5 (always)"/></examples><seeAlso><see id="gauss"/></seeAlso></documentation></operator></operators><skills/><species/><symbol/></doc>
