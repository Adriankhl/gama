<?xml version="1.0" encoding="UTF-8"?>
<doc>
  <operatorsCategories>
    <category id="Iterator operators" />
    <category id="Graphs-related operators" />
    <category id="Path-related operators" />
    <category id="Statistical operators" />
    <category id="Spatial operators" />
    <category id="Spatial transformations operators" />
    <category id="Map comparaison operators" />
    <category id="Water level operators" />
    <category id="EDP-related operators" />
    <category id="OpenGIS" />
    <category id="Driving operators" />
    <category id="DescriptiveStatistics" />
    <category id="Distributions" />
    <category id="GammaFunction" />
    <category id="Grid-related operators" />
    <category id="Shape" />
    <category id="Spatial properties operators" />
    <category id="Spatial queries operators" />
    <category id="Spatial relations operators" />
    <category id="Points-related operators" />
    <category id="Spatial statistical operators" />
    <category id="3D" />
    <category id="Files-related operators" />
    <category id="Types-related operators" />
  </operatorsCategories>
  <operators>
    <operator alphabetOrder="ak" id="GPU_path_between" name="GPU_path_between" projectName="ummisco.gama.gpu">
      <operatorCategories>
        <category id="Graphs-related operators" />
        <category id="Path-related operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="ssps/operators/GPUGraphOperators.java" contentType="-20" returnType="path" type="-13">
          <operand name="graph" position="0" type="graph" />
          <operand name="source" position="1" type="geometry" />
          <operand name="target" position="2" type="geometry" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>The shortest path between a list of two objects in a graph computed with GPU</result>
        <usagesExamples>
          <usage>
            <examples>
              <example code="my_graph GPU_path_between (ag1:: ag2)" equals="A path between ag1 and ag2" isExecutable="false" isTestOnly="false" test="false" type="path" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="CPU_path_between" name="CPU_path_between" projectName="ummisco.gama.gpu">
      <operatorCategories>
        <category id="Graphs-related operators" />
        <category id="Path-related operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="ssps/operators/GPUGraphOperators.java" contentType="-20" returnType="path" type="-13">
          <operand name="graph" position="0" type="graph" />
          <operand name="source" position="1" type="geometry" />
          <operand name="target" position="2" type="geometry" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>The shortest path between a list of two objects in a graph computed with CPU</result>
        <usagesExamples>
          <usage>
            <examples>
              <example code="my_graph CPU_path_between (ag1:: ag2)" equals="A path between ag1 and ag2" isExecutable="false" isTestOnly="false" test="false" type="path" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="clustering_em" name="clustering_em" projectName="idees.gama.weka">
      <operatorCategories>
        <category id="Statistical operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="idees/gama/operators/Clustering.java" contentType="5" returnType="list&lt;list&lt;agent&gt;&gt;" type="-13">
          <operand name="agents" position="0" type="???" />
          <operand name="attributes" position="1" type="msi.gama.util.IList&lt;java.lang.String&gt;" />
          <operand name="parameters" position="2" type="map&lt;string,unknown&gt;" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A list of agent groups clustered by EM Algorithm based on the given attributes. Some paremeters can be defined: max_iterations: the maximum number of iterations to perform;num_clusters: the number of clusters; minStdDev: minimum allowable standard deviation</result>
        <seeAlso>
          <see id="clustering_xmeans" />
          <see id="clustering_simple_kmeans" />
          <see id="clustering_farthestFirst" />
          <see id="clustering_DBScan" />
          <see id="clustering_cobweb" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="clustering_em([ag1, ag2, ag3, ag4, ag5],[&quot;size&quot;,&quot;age&quot;, &quot;weight&quot;],[&quot;max_iterations&quot;::10, &quot;num_clusters&quot;::3])" equals="for example, can return [[ag1, ag3], [ag2], [ag4, ag5]]" isExecutable="false" isTestOnly="false" test="false" type="list&lt;list&lt;agent&gt;&gt;" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="clustering_farthestFirst" name="clustering_farthestFirst" projectName="idees.gama.weka">
      <operatorCategories>
        <category id="Statistical operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="idees/gama/operators/Clustering.java" contentType="5" returnType="list&lt;list&lt;agent&gt;&gt;" type="-13">
          <operand name="agents" position="0" type="???" />
          <operand name="attributes" position="1" type="msi.gama.util.IList&lt;java.lang.String&gt;" />
          <operand name="parameters" position="2" type="map&lt;string,unknown&gt;" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A list of agent groups clustered by Farthest First Algorithm based on the given attributes. Some paremeters can be defined: num_clusters: the number of clusters</result>
        <seeAlso>
          <see id="clustering_xmeans" />
          <see id="clustering_simple_kmeans" />
          <see id="clustering_em" />
          <see id="clustering_DBScan" />
          <see id="clustering_cobweb" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="clustering_farthestFirst([ag1, ag2, ag3, ag4, ag5],[&quot;size&quot;,&quot;age&quot;, &quot;weight&quot;],[&quot;num_clusters&quot;::3])" equals="for example, can return [[ag1, ag3], [ag2], [ag4, ag5]]" isExecutable="false" isTestOnly="false" test="false" type="list&lt;list&lt;agent&gt;&gt;" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="clustering_cobweb" name="clustering_cobweb" projectName="idees.gama.weka">
      <operatorCategories>
        <category id="Statistical operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="idees/gama/operators/Clustering.java" contentType="5" returnType="list&lt;list&lt;agent&gt;&gt;" type="-13">
          <operand name="agents" position="0" type="???" />
          <operand name="attributes" position="1" type="msi.gama.util.IList&lt;java.lang.String&gt;" />
          <operand name="parameters" position="2" type="map&lt;string,unknown&gt;" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A list of agent groups clusteredby CobWeb Algorithm based on the given attributes. Some paremeters can be defined: acuity: minimum standard deviation for numeric attributes; cutoff: category utility threshold by which to prune nodes seed</result>
        <seeAlso>
          <see id="clustering_xmeans" />
          <see id="clustering_em" />
          <see id="clustering_farthestFirst" />
          <see id="clustering_simple_kmeans" />
          <see id="clustering_cobweb" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="clustering_cobweb([ag1, ag2, ag3, ag4, ag5],[&quot;size&quot;,&quot;age&quot;, &quot;weight&quot;],[&quot;acuity&quot;::3.0, &quot;cutoff&quot;::0.5)" equals="for example, can return [[ag1, ag3], [ag2], [ag4, ag5]]" isExecutable="false" isTestOnly="false" test="false" type="list&lt;list&lt;agent&gt;&gt;" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="clustering_simple_kmeans" name="clustering_simple_kmeans" projectName="idees.gama.weka">
      <operatorCategories>
        <category id="Statistical operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="idees/gama/operators/Clustering.java" contentType="5" returnType="list&lt;list&lt;agent&gt;&gt;" type="-13">
          <operand name="agents" position="0" type="???" />
          <operand name="attributes" position="1" type="msi.gama.util.IList&lt;java.lang.String&gt;" />
          <operand name="parameters" position="2" type="map&lt;string,unknown&gt;" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A list of agent groups clustered by K-Means Algorithm based on the given attributes. Some paremeters can be defined: distance_f: The distance function to use. 4 possible distance functions: euclidean (by default) ; 'chebyshev', 'manhattan' or 'levenshtein'; dont_replace_missing_values: if false, replace missing values globally with mean/mode; max_iterations: the maximum number of iterations to perform;num_clusters: the number of clusters</result>
        <seeAlso>
          <see id="clustering_xmeans" />
          <see id="clustering_em" />
          <see id="clustering_farthestFirst" />
          <see id="clustering_DBScan" />
          <see id="clustering_cobweb" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="clustering_simple_kmeans([ag1, ag2, ag3, ag4, ag5],[&quot;size&quot;,&quot;age&quot;, &quot;weight&quot;],[&quot;distance_f&quot;::&quot;manhattan&quot;, &quot;num_clusters&quot;::3])" equals="for example, can return [[ag1, ag3], [ag2], [ag4, ag5]]" isExecutable="false" isTestOnly="false" test="false" type="list&lt;list&lt;agent&gt;&gt;" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="clustering_xmeans" name="clustering_xmeans" projectName="idees.gama.weka">
      <operatorCategories>
        <category id="Statistical operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="idees/gama/operators/Clustering.java" contentType="5" returnType="list&lt;list&lt;agent&gt;&gt;" type="-13">
          <operand name="agents" position="0" type="???" />
          <operand name="attributes" position="1" type="msi.gama.util.IList&lt;java.lang.String&gt;" />
          <operand name="parameters" position="2" type="map&lt;string,unknown&gt;" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A list of agent groups clustered by X-Means Algorithm based on the given attributes. Some paremeters can be defined: bin_value: value given for true value of boolean attributes; cut_off_factor: the cut-off factor to use;distance_f: The distance function to use. 4 possible distance functions: euclidean (by default) ; 'chebyshev', 'manhattan' or 'levenshtein'; max_iterations: the maximum number of iterations to perform; max_kmeans: the maximum number of iterations to perform in KMeans; max_kmeans_for_children: the maximum number of iterations KMeans that is performed on the child centers;max_num_clusters: the maximum number of clusters; min_num_clusters: the minimal number of clusters</result>
        <seeAlso>
          <see id="clustering_simple_kmeans" />
          <see id="clustering_em" />
          <see id="clustering_farthestFirst" />
          <see id="clustering_DBScan" />
          <see id="clustering_cobweb" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="clustering_xmeans([ag1, ag2, ag3, ag4, ag5],[&quot;size&quot;,&quot;age&quot;, &quot;weight&quot;, &quot;is_male&quot;],[&quot;bin_value&quot;::1.0, &quot;distance_f&quot;::&quot;manhattan&quot;, &quot;max_num_clusters&quot;::10, &quot;min_num_clusters&quot;::2])" equals="for example, can return [[ag1, ag3], [ag2], [ag4, ag5]]" isExecutable="false" isTestOnly="false" test="false" type="list&lt;list&lt;agent&gt;&gt;" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="clustering_DBScan" name="clustering_DBScan" projectName="idees.gama.weka">
      <operatorCategories>
        <category id="Statistical operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="idees/gama/operators/Clustering.java" contentType="5" returnType="list&lt;list&lt;agent&gt;&gt;" type="-13">
          <operand name="agents" position="0" type="???" />
          <operand name="attributes" position="1" type="msi.gama.util.IList&lt;java.lang.String&gt;" />
          <operand name="parameters" position="2" type="map&lt;string,unknown&gt;" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A list of agent groups clustered by DBScan Algorithm based on the given attributes. Some paremeters can be defined: distance_f: The distance function to use for instances comparison (euclidean or manhattan); min_points: minimun number of DataObjects required in an epsilon-range-queryepsilon: epsilon -- radius of the epsilon-range-queries</result>
        <seeAlso>
          <see id="clustering_xmeans" />
          <see id="clustering_em" />
          <see id="clustering_farthestFirst" />
          <see id="clustering_simple_kmeans" />
          <see id="clustering_cobweb" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="clustering_DBScan([ag1, ag2, ag3, ag4, ag5],[&quot;size&quot;,&quot;age&quot;, &quot;weight&quot;],[&quot;distance_f&quot;::&quot;manhattan&quot;])" equals="for example, can return [[ag1, ag3], [ag2], [ag4, ag5]]" isExecutable="false" isTestOnly="false" test="false" type="list&lt;list&lt;agent&gt;&gt;" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="IDW" name="IDW" projectName="idees.gaml.extensions.spatialoperators">
      <operatorCategories>
        <category id="Spatial operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="idees/gaml/operators/Spatial.java" contentType="-13" returnType="msi.gama.util.GamaMap&lt;msi.gama.metamodel.shape.IShape,java.lang.Double&gt;" type="-13">
          <operand name="geometries" position="0" type="msi.gama.util.IContainer&lt;?,? extends msi.gama.metamodel.shape.IShape&gt;" />
          <operand name="points" position="1" type="msi.gama.util.GamaMap&lt;msi.gama.metamodel.shape.GamaPoint,java.lang.Double&gt;" />
          <operand name="power" position="2" type="int" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>Inverse Distance Weighting (IDW) is a type of deterministic method for multivariate interpolation with a known scattered set of points. The assigned values to each geometry are calculated with a weighted average of the values available at the known points. See: http://en.wikipedia.org/wiki/Inverse_distance_weighting Usage: IDW (list of geometries, map of points (key: point, value: value), power parameter)</result>
        <usagesExamples>
          <usage>
            <examples>
              <example code="IDW([ag1, ag2, ag3, ag4, ag5],[{10,10}::25.0, {10,80}::10.0, {100,10}::15.0], 2)" equals="for example, can return [ag1::12.0, ag2::23.0,ag3::12.0,ag4::14.0,ag5::17.0]" isExecutable="false" isTestOnly="false" test="false" type="msi.gama.util.GamaMap&lt;msi.gama.metamodel.shape.IShape,java.lang.Double&gt;" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="CRS_transform" name="CRS_transform" projectName="idees.gaml.extensions.spatialoperators">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Spatial transformations operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="idees/gaml/operators/Projection.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="g" position="0" type="geometry" />
        </operands>
        <operands class="idees/gaml/operators/Projection.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="g" position="0" type="geometry" />
          <operand name="code" position="1" type="string" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result />
        <usages>
          <usage descUsageElt="returns the geometry corresponding to the transfomartion of the given geometry by the current CRS (Coordinate Reference System), the one corresponding to the world's agent one">
            <examples>
              <example code="CRS_transform(shape)" equals="a geometry corresponding to the agent geometry transformed into the current CRS" isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
          <usage descUsageElt="returns the geometry corresponding to the transfomartion of the given geometry by the left operand CRS (Coordinate Reference System)">
            <examples>
              <example code="shape CRS_transform(&quot;EPSG:4326&quot;)" equals="a geometry corresponding to the agent geometry transformed into the EPSG:4326 CRS" isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
        </usages>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="to_GAMA_CRS" name="to_GAMA_CRS" projectName="idees.gaml.extensions.spatialoperators">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Spatial transformations operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="idees/gaml/operators/Projection.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="g" position="0" type="geometry" />
        </operands>
        <operands class="idees/gaml/operators/Projection.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="g" position="0" type="geometry" />
          <operand name="code" position="1" type="string" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result />
        <usages>
          <usage descUsageElt="returns the geometry corresponding to the transfomartion of the given geometry to the GAMA CRS (Coordinate Reference System) assuming the given geometry is referenced by the current CRS, the one corresponding to the world's agent one">
            <examples>
              <example code="to_GAMA_CRS({121,14})" equals="a geometry corresponding to the agent geometry transformed into the GAMA CRS" isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
          <usage descUsageElt="returns the geometry corresponding to the transfomartion of the given geometry to the GAMA CRS (Coordinate Reference System) assuming the given geometry is referenced by given CRS">
            <examples>
              <example code="to_GAMA_CRS({121,14}, &quot;EPSG:4326&quot;)" equals="a geometry corresponding to the agent geometry transformed into the GAMA CRS" isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
        </usages>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="fuzzy_kappa_sim" name="fuzzy_kappa_sim" projectName="idees.gama.mapcomparison">
      <operatorCategories>
        <category id="Map comparaison operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="idees/gama/operators/MapComparison.java" contentType="2" returnType="float" type="-13">
          <operand name="agents" position="0" type="???" />
          <operand name="valsInit" position="1" type="list" />
          <operand name="valsObs" position="2" type="list" />
          <operand name="valsSim" position="3" type="list" />
          <operand name="similarities" position="4" type="list&lt;float&gt;" />
          <operand name="categories" position="5" type="list" />
          <operand name="fuzzytransitions" position="6" type="matrix&lt;float&gt;" />
          <operand name="distance" position="7" type="float" />
        </operands>
        <operands class="idees/gama/operators/MapComparison.java" contentType="2" returnType="float" type="-13">
          <operand name="agents" position="0" type="???" />
          <operand name="valsInit" position="1" type="list" />
          <operand name="valsObs" position="2" type="list" />
          <operand name="valsSim" position="3" type="list" />
          <operand name="similarities" position="4" type="list&lt;float&gt;" />
          <operand name="categories" position="5" type="list" />
          <operand name="fuzzytransitions" position="6" type="matrix&lt;float&gt;" />
          <operand name="distance" position="7" type="float" />
          <operand name="weights" position="8" type="list" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>fuzzy kappa simulation indicator for 2 map comparisons: fuzzy_kappa_sim(agents_list,list_vals1,list_vals2, output_similarity_per_agents,fuzzy_transitions_matrix, fuzzy_distance). Reference: Jasper van Vliet, Alex Hagen-Zanker, Jelle Hurkens, Hedwig van Delden, A fuzzy set approach to assess the predictive accuracy of land use simulations, Ecological Modelling, 24 July 2013, Pages 32-42, ISSN 0304-3800, fuzzy kappa simulation indicator for 2 map comparisons: fuzzy_kappa_sim(agents_list,list_vals1,list_vals2, output_similarity_per_agents,fuzzy_transitions_matrix, fuzzy_distance, weights). Reference: Jasper van Vliet, Alex Hagen-Zanker, Jelle Hurkens, Hedwig van Delden, A fuzzy set approach to assess the predictive accuracy of land use simulations, Ecological Modelling, 24 July 2013, Pages 32-42, ISSN 0304-3800,</result>
        <usagesExamples>
          <usage>
            <examples>
              <example code="fuzzy_kappa_sim([ag1, ag2, ag3, ag4, ag5], [cat1,cat1,cat2,cat3,cat2],[cat2,cat1,cat2,cat1,cat2], similarity_per_agents,[cat1,cat2,cat3],[[1,0,0,0,0,0,0,0,0],[0,1,0,0,0,0,0,0,0],[0,0,1,0,0,0,0,0,0],[0,0,0,1,0,0,0,0,0],[0,0,0,0,1,0,0,0,0],[0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,1,0,0],[0,0,0,0,0,0,0,1,0],[0,0,0,0,0,0,0,0,1]], 2)" isExecutable="false" isTestOnly="false" test="false" type="float" />
            </examples>
          </usage>
          <usage>
            <examples>
              <example code="fuzzy_kappa_sim([ag1, ag2, ag3, ag4, ag5], [cat1,cat1,cat2,cat3,cat2],[cat2,cat1,cat2,cat1,cat2], similarity_per_agents,[cat1,cat2,cat3],[[1,0,0,0,0,0,0,0,0],[0,1,0,0,0,0,0,0,0],[0,0,1,0,0,0,0,0,0],[0,0,0,1,0,0,0,0,0],[0,0,0,0,1,0,0,0,0],[0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,1,0,0],[0,0,0,0,0,0,0,1,0],[0,0,0,0,0,0,0,0,1]], 2,[1.0,3.0,2.0,2.0,4.0])" isExecutable="false" isTestOnly="false" test="false" type="float" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="kappa" name="kappa" projectName="idees.gama.mapcomparison">
      <operatorCategories>
        <category id="Map comparaison operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="idees/gama/operators/MapComparison.java" contentType="2" returnType="float" type="-13">
          <operand name="vals1" position="0" type="list" />
          <operand name="vals2" position="1" type="list" />
          <operand name="categories" position="2" type="list" />
        </operands>
        <operands class="idees/gama/operators/MapComparison.java" contentType="2" returnType="float" type="-13">
          <operand name="vals1" position="0" type="list" />
          <operand name="vals2" position="1" type="list" />
          <operand name="categories" position="2" type="list" />
          <operand name="weights" position="3" type="list" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>kappa indicator for 2 map comparisons: kappa(list_vals1,list_vals2,categories). Reference: Cohen, J. A coefficient of agreement for nominal scales. Educ. Psychol. Meas. 1960, 20.kappa indicator for 2 map comparisons: kappa(list_vals1,list_vals2,categories, weights). Reference: Cohen, J. A coefficient of agreement for nominal scales. Educ. Psychol. Meas. 1960, 20.</result>
        <usagesExamples>
          <usage>
            <examples>
              <example code="kappa([cat1,cat1,cat2,cat3,cat2],[cat2,cat1,cat2,cat1,cat2],[cat1,cat2,cat3])" isExecutable="false" isTestOnly="false" test="false" type="float" />
              <example code="kappa([1,3,5,1,5],[1,1,1,1,5],[1,3,5])" equals="the similarity between 0 and 1" isExecutable="true" isTestOnly="false" test="false" type="float" />
              <example code="kappa([1,1,1,1,5],[1,1,1,1,5],[1,3,5])" equals="1.0" isExecutable="true" isTestOnly="false" test="true" type="float" />
            </examples>
          </usage>
          <usage>
            <examples>
              <example code="kappa([cat1,cat1,cat2,cat3,cat2],[cat2,cat1,cat2,cat1,cat2],[cat1,cat2,cat3], [1.0, 2.0, 3.0, 1.0, 5.0])" isExecutable="false" isTestOnly="false" test="false" type="float" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="kappa_sim" name="kappa_sim" projectName="idees.gama.mapcomparison">
      <operatorCategories>
        <category id="Map comparaison operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="idees/gama/operators/MapComparison.java" contentType="2" returnType="float" type="-13">
          <operand name="valsInit" position="0" type="list" />
          <operand name="valsObs" position="1" type="list" />
          <operand name="valsSim" position="2" type="list" />
          <operand name="categories" position="3" type="list" />
        </operands>
        <operands class="idees/gama/operators/MapComparison.java" contentType="2" returnType="float" type="-13">
          <operand name="valsInit" position="0" type="list" />
          <operand name="valsObs" position="1" type="list" />
          <operand name="valsSim" position="2" type="list" />
          <operand name="categories" position="3" type="list" />
          <operand name="weights" position="4" type="list" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>kappa simulation indicator for 2 map comparisons: kappa(list_valsInits,list_valsObs,list_valsSim, categories). Reference: van Vliet, J., Bregt, A.K. &amp; Hagen-Zanker, A. (2011). Revisiting Kappa to account for change in the accuracy assessment of land-use change models, Ecological Modelling 222(8).kappa simulation indicator for 2 map comparisons: kappa(list_valsInits,list_valsObs,list_valsSim, categories, weights). Reference: van Vliet, J., Bregt, A.K. &amp; Hagen-Zanker, A. (2011). Revisiting Kappa to account for change in the accuracy assessment of land-use change models, Ecological Modelling 222(8)</result>
        <usagesExamples>
          <usage>
            <examples>
              <example code="kappa([cat1,cat1,cat2,cat2,cat2],[cat2,cat1,cat2,cat1,cat3],[cat2,cat1,cat2,cat3,cat3], [cat1,cat2,cat3])" isExecutable="false" isTestOnly="false" test="false" type="float" />
            </examples>
          </usage>
          <usage>
            <examples>
              <example code="kappa([cat1,cat1,cat2,cat2,cat2],[cat2,cat1,cat2,cat1,cat3],[cat2,cat1,cat2,cat3,cat3], [cat1,cat2,cat3],[1.0, 2.0, 3.0, 1.0, 5.0])" isExecutable="false" isTestOnly="false" test="false" type="float" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="percent_absolute_deviation" name="percent_absolute_deviation" projectName="idees.gama.mapcomparison">
      <operatorCategories>
        <category id="Map comparaison operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="idees/gama/operators/MapComparison.java" contentType="2" returnType="float" type="-13">
          <operand name="vals1" position="0" type="list&lt;float&gt;" />
          <operand name="vals2" position="1" type="list&lt;float&gt;" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>percent absolute deviation indicator for 2 series of values: percent_absolute_deviation(list_vals_observe,list_vals_sim)</result>
        <usagesExamples>
          <usage>
            <examples>
              <example code="percent_absolute_deviation([200,300,150,150,200],[250,250,100,200,200])" isExecutable="false" isTestOnly="false" test="false" type="float" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="fuzzy_kappa" name="fuzzy_kappa" projectName="idees.gama.mapcomparison">
      <operatorCategories>
        <category id="Map comparaison operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="idees/gama/operators/MapComparison.java" contentType="2" returnType="float" type="-13">
          <operand name="agents" position="0" type="???" />
          <operand name="vals1" position="1" type="list" />
          <operand name="vals2" position="2" type="list" />
          <operand name="similarities" position="3" type="list&lt;float&gt;" />
          <operand name="categories" position="4" type="list" />
          <operand name="fuzzycategories" position="5" type="matrix&lt;float&gt;" />
          <operand name="distance" position="6" type="float" />
          <operand name="weights" position="7" type="list" />
        </operands>
        <operands class="idees/gama/operators/MapComparison.java" contentType="2" returnType="float" type="-13">
          <operand name="agents" position="0" type="???" />
          <operand name="vals1" position="1" type="list" />
          <operand name="vals2" position="2" type="list" />
          <operand name="similarities" position="3" type="list&lt;float&gt;" />
          <operand name="categories" position="4" type="list" />
          <operand name="fuzzycategories" position="5" type="matrix&lt;float&gt;" />
          <operand name="distance" position="6" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>fuzzy kappa indicator for 2 map comparisons: fuzzy_kappa(agents_list,list_vals1,list_vals2, output_similarity_per_agents,categories,fuzzy_categories_matrix, fuzzy_distance, weights). Reference: Visser, H., and T. de Nijs, 2006. The map comparison kit, Environmental Modelling &amp; Software, 21fuzzy kappa indicator for 2 map comparisons: fuzzy_kappa(agents_list,list_vals1,list_vals2, output_similarity_per_agents,categories,fuzzy_categories_matrix, fuzzy_distance). Reference: Visser, H., and T. de Nijs, 2006. The map comparison kit, Environmental Modelling &amp; Software, 21</result>
        <usagesExamples>
          <usage>
            <examples>
              <example code="fuzzy_kappa([ag1, ag2, ag3, ag4, ag5],[cat1,cat1,cat2,cat3,cat2],[cat2,cat1,cat2,cat1,cat2], similarity_per_agents,[cat1,cat2,cat3],[[1,0,0],[0,1,0],[0,0,1]], 2, [1.0,3.0,2.0,2.0,4.0])" isExecutable="false" isTestOnly="false" test="false" type="float" />
            </examples>
          </usage>
          <usage>
            <examples>
              <example code="fuzzy_kappa([ag1, ag2, ag3, ag4, ag5],[cat1,cat1,cat2,cat3,cat2],[cat2,cat1,cat2,cat1,cat2], similarity_per_agents,[cat1,cat2,cat3],[[1,0,0],[0,1,0],[0,0,1]], 2)" isExecutable="false" isTestOnly="false" test="false" type="float" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="water_level_for" name="water_level_for" projectName="cenres.gaml.extensions.hydro">
      <operatorCategories>
        <category id="Water level operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="cenres/gaml/extensions/hydro/operators/WaterLevel.java" contentType="-13" returnType="float" type="-13">
          <operand name="shape" position="0" type="geometry" />
          <operand name="val" position="1" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result />
        <usagesExamples>
          <usage>
            <examples>
              <example code="waterlevel &lt;- my_river_polyline water_level_for my_area_value" isExecutable="false" isTestOnly="false" test="false" type="float" />
            </examples>
          </usage>
        </usagesExamples>
        <usagesNoExample>
          <usage descUsageElt="if the left operand is a polyline and the right operand a float for the area, returrns the y coordinate of the water (water level)" />
        </usagesNoExample>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="water_polylines_for" name="water_polylines_for" projectName="cenres.gaml.extensions.hydro">
      <operatorCategories>
        <category id="Water level operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="cenres/gaml/extensions/hydro/operators/WaterLevel.java" contentType="-13" returnType="msi.gama.util.IList&lt;msi.gama.util.IList&lt;msi.gama.metamodel.shape.GamaPoint&gt;&gt;" type="-13">
          <operand name="shape" position="0" type="geometry" />
          <operand name="val" position="1" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result />
        <usagesExamples>
          <usage>
            <examples>
              <example code="waterarea &lt;- my_river_polyline water_area_for my_height_value" isExecutable="false" isTestOnly="false" test="false" type="msi.gama.util.IList&lt;msi.gama.util.IList&lt;msi.gama.metamodel.shape.GamaPoint&gt;&gt;" />
            </examples>
          </usage>
        </usagesExamples>
        <usagesNoExample>
          <usage descUsageElt="if the left operand is a polyline and the right operand a float for the water y coordinate, returrns the shapes of the river sections (list of list of points)" />
        </usagesNoExample>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="water_area_for" name="water_area_for" projectName="cenres.gaml.extensions.hydro">
      <operatorCategories>
        <category id="Water level operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="cenres/gaml/extensions/hydro/operators/WaterLevel.java" contentType="-13" returnType="float" type="-13">
          <operand name="shape" position="0" type="geometry" />
          <operand name="val" position="1" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result />
        <usagesExamples>
          <usage>
            <examples>
              <example code="waterarea &lt;- my_river_polyline water_area_for my_height_value" isExecutable="false" isTestOnly="false" test="false" type="float" />
            </examples>
          </usage>
        </usagesExamples>
        <usagesNoExample>
          <usage descUsageElt="if the left operand is a polyline and the right operand a float for the water y coordinate, returrns the area of the water (water flow area)" />
        </usagesNoExample>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="is_obj" name="is_obj" projectName="ummisco.gama.opengl">
      <operatorCategories>
        <category id="Files-related operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="ummisco.gama.opengl.files.GamaObjFile" contentType="" returnType="bool" type="">
          <operand name="val" position="0" type="any" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>Tests whether the operand is a obj file.</result>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="obj_file" name="obj_file" projectName="ummisco.gama.opengl">
      <operatorCategories>
        <category id="Files-related operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="ummisco.gama.opengl.files.GamaObjFile" contentType="" returnType="file" type="">
          <operand name="val" position="0" type="string" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>Constructs a file of type obj. Allowed extensions are limited to obj</result>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="is_threeds" name="is_threeds" projectName="ummisco.gama.opengl">
      <operatorCategories>
        <category id="Files-related operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="ummisco.gama.opengl.files.Gama3DSFile" contentType="" returnType="bool" type="">
          <operand name="val" position="0" type="any" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>Tests whether the operand is a threeds file.</result>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="threeds_file" name="threeds_file" projectName="ummisco.gama.opengl">
      <operatorCategories>
        <category id="Files-related operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="ummisco.gama.opengl.files.Gama3DSFile" contentType="" returnType="file" type="">
          <operand name="val" position="0" type="string" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>Constructs a file of type threeds. Allowed extensions are limited to 3ds, max</result>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="internal_zero_order_equation" name="internal_zero_order_equation" projectName="ummisco.gaml.extensions.maths">
      <operatorCategories>
        <category id="EDP-related operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="ummisco/gaml/extensions/maths/ode/statements/SingleEquationStatement.java" contentType="-13" returnType="float" type="-13">
          <operand name="var" position="0" type="any expression" />
        </operands>
      </combinaisonIO>
    </operator>
    <operator alphabetOrder="ak" id="diff" name="diff" projectName="ummisco.gaml.extensions.maths">
      <operatorCategories>
        <category id="EDP-related operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="ummisco/gaml/extensions/maths/ode/statements/SingleEquationStatement.java" contentType="-13" returnType="float" type="-13">
          <operand name="var" position="0" type="float" />
          <operand name="time" position="1" type="float" />
        </operands>
      </combinaisonIO>
    </operator>
    <operator alphabetOrder="ak" id="diff2" name="diff2" projectName="ummisco.gaml.extensions.maths">
      <operatorCategories>
        <category id="EDP-related operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="ummisco/gaml/extensions/maths/ode/statements/SingleEquationStatement.java" contentType="-13" returnType="float" type="-13">
          <operand name="var" position="0" type="float" />
          <operand name="time" position="1" type="float" />
        </operands>
      </combinaisonIO>
    </operator>
    <operator alphabetOrder="ak" id="image_from_direct_wms" name="image_from_direct_wms" projectName="dream.gama.opengis">
      <operatorCategories>
        <category id="OpenGIS" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="dream/gama/opengis/operators/OpenGIS.java" contentType="-13" returnType="file" type="-13">
          <operand name="fakeFile" position="0" type="string" />
          <operand name="slink" position="1" type="string" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>WMS: A simple call to WMS</result>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="read_json_rest" name="read_json_rest" projectName="dream.gama.opengis">
      <operatorCategories>
        <category id="OpenGIS" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="dream/gama/opengis/operators/OpenGIS.java" contentType="-13" returnType="msi.gama.util.IList&lt;msi.gama.util.IList&lt;java.lang.Object&gt;&gt;" type="-13">
          <operand name="fakeFile" position="0" type="string" />
          <operand name="restLink" position="1" type="string" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>REST: Read data from RESTService</result>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="gml_from_wfs" name="gml_from_wfs" projectName="dream.gama.opengis">
      <operatorCategories>
        <category id="OpenGIS" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="dream/gama/opengis/operators/OpenGIS.java" contentType="-13" returnType="msi.gama.util.IList&lt;msi.gama.util.IList&lt;java.lang.Object&gt;&gt;" type="-13">
          <operand name="fakeFile" position="0" type="string" />
          <operand name="schemaLink" position="1" type="string" />
          <operand name="gmlLink" position="2" type="string" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>WMS: A simple call to WFS/GML2</result>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="image_from_wms" name="image_from_wms" projectName="dream.gama.opengis">
      <operatorCategories>
        <category id="OpenGIS" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="dream/gama/opengis/operators/OpenGIS.java" contentType="-13" returnType="file" type="-13">
          <operand name="fakeFile" position="0" type="string" />
          <operand name="slink" position="1" type="string" />
          <operand name="epsg" position="2" type="int" />
          <operand name="width" position="3" type="int" />
          <operand name="height" position="4" type="int" />
          <operand name="bbox1" position="5" type="float" />
          <operand name="bbox2" position="6" type="float" />
          <operand name="bbox3" position="7" type="float" />
          <operand name="bbox4" position="8" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>WMS: A simple call to WMS</result>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="as_driving_graph" name="as_driving_graph" projectName="simtools.gaml.extensions.traffic">
      <operatorCategories>
        <category id="Driving operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="simtools/gaml/extensions/traffic/DrivingOperators.java" contentType="-19" returnType="graph" type="-13">
          <operand name="edges" position="0" type="container" />
          <operand name="nodes" position="1" type="container" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>creates a graph from the list/map of edges given as operand and connect the node to the edge</result>
        <seeAlso>
          <see id="as_intersection_graph" />
          <see id="as_distance_graph" />
          <see id="as_edge_graph" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="as_driving_graph(road,node)  --:  build a graph while using the road agents as edges and the node agents as nodes" isExecutable="false" isTestOnly="false" test="false" type="graph" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="quantile" name="quantile" projectName="ummisco.gaml.extensions.stats">
      <operatorCategories>
        <category id="DescriptiveStatistics" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="ummisco/gaml/extensions/stats/Stats2/DescriptiveStatistics.java" contentType="-13" returnType="float" type="2">
          <operand name="data" position="0" type="container" />
          <operand name="phi" position="1" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>Returns the phi-quantile; that is, an element elem for which holds that phi percent of data elements are less than elem. The quantile need not necessarily be contained in the data sequence, it can be a linear interpolation.</result>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" alternativeNameOf="binomial_sum" id="pbinom" name="pbinom" projectName="ummisco.gaml.extensions.stats">
      <operatorsCategories>
        <category id="Distributions" />
      </operatorsCategories>
    </operator>
    <operator alphabetOrder="ak" id="binomial_sum" name="binomial_sum" projectName="ummisco.gaml.extensions.stats">
      <operatorCategories>
        <category id="Distributions" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="ummisco/gaml/extensions/stats/Stats2/Distributions.java" contentType="-13" returnType="float" type="2">
          <operand name="k" position="0" type="int" />
          <operand name="n" position="1" type="int" />
          <operand name="p" position="2" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>Returns the sum of the terms 0 through k of the Binomial probability density, where n is the number of trials and p is the probability of success in the range 0 to 1.</result>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="rank_interpolated" name="rank_interpolated" projectName="ummisco.gaml.extensions.stats">
      <operatorCategories>
        <category id="DescriptiveStatistics" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="ummisco/gaml/extensions/stats/Stats2/DescriptiveStatistics.java" contentType="-13" returnType="float" type="2">
          <operand name="data" position="0" type="container" />
          <operand name="element" position="1" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>Returns the linearly interpolated number of elements in a list less or equal to a given element. The rank is the number of elements &lt;= element. Ranks are of the form {0, 1, 2,..., sortedList.size()}. If no element is &lt;= element, then the rank is zero. If the element lies in between two contained elements, then linear interpolation is used and a non integer value is returned.</result>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" alternativeNameOf="chi_square" id="pchisq" name="pchisq" projectName="ummisco.gaml.extensions.stats">
      <operatorsCategories>
        <category id="Distributions" />
      </operatorsCategories>
    </operator>
    <operator alphabetOrder="ak" id="chi_square" name="chi_square" projectName="ummisco.gaml.extensions.stats">
      <operatorCategories>
        <category id="Distributions" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="ummisco/gaml/extensions/stats/Stats2/Distributions.java" contentType="-13" returnType="float" type="2">
          <operand name="x" position="0" type="float" />
          <operand name="df" position="1" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>Returns the area under the left hand tail (from 0 to x) of the Chi square probability density function with df degrees of freedom.</result>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="durbin_watson" name="durbin_watson" projectName="ummisco.gaml.extensions.stats">
      <operatorCategories>
        <category id="DescriptiveStatistics" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="ummisco/gaml/extensions/stats/Stats2/DescriptiveStatistics.java" contentType="-13" returnType="float" type="2">
          <operand name="data" position="0" type="container" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>Durbin-Watson computation</result>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="incomplete_gamma_complement" name="incomplete_gamma_complement" projectName="ummisco.gaml.extensions.stats">
      <operatorCategories>
        <category id="GammaFunction" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="ummisco/gaml/extensions/stats/Stats2/GammaFunction.java" contentType="-13" returnType="float" type="2">
          <operand name="a" position="0" type="float" />
          <operand name="x" position="1" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>Returns the complemented regularized incomplete Gamma function of the argument a and integration start point x.</result>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="incomplete_gamma" name="incomplete_gamma" projectName="ummisco.gaml.extensions.stats">
      <operatorCategories>
        <category id="GammaFunction" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="ummisco/gaml/extensions/stats/Stats2/GammaFunction.java" contentType="-13" returnType="float" type="2">
          <operand name="a" position="0" type="float" />
          <operand name="x" position="1" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>Returns the regularized integral of the Gamma function with argument a to the integration end point x.</result>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="correlation" name="correlation" projectName="ummisco.gaml.extensions.stats">
      <operatorCategories>
        <category id="DescriptiveStatistics" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="ummisco/gaml/extensions/stats/Stats2/DescriptiveStatistics.java" contentType="-13" returnType="float" type="2">
          <operand name="data1" position="0" type="container" />
          <operand name="data2" position="1" type="container" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>Returns the correlation of two data sequences</result>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="auto_correlation" name="auto_correlation" projectName="ummisco.gaml.extensions.stats">
      <operatorCategories>
        <category id="DescriptiveStatistics" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="ummisco/gaml/extensions/stats/Stats2/DescriptiveStatistics.java" contentType="-13" returnType="float" type="2">
          <operand name="data" position="0" type="container" />
          <operand name="lag" position="1" type="int" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>Returns the auto-correlation of a data sequence</result>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" alternativeNameOf="quantile_inverse" id="percentile" name="percentile" projectName="ummisco.gaml.extensions.stats">
      <operatorsCategories>
        <category id="DescriptiveStatistics" />
      </operatorsCategories>
    </operator>
    <operator alphabetOrder="lz" id="quantile_inverse" name="quantile_inverse" projectName="ummisco.gaml.extensions.stats">
      <operatorCategories>
        <category id="DescriptiveStatistics" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="ummisco/gaml/extensions/stats/Stats2/DescriptiveStatistics.java" contentType="-13" returnType="float" type="2">
          <operand name="data" position="0" type="container" />
          <operand name="element" position="1" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>Returns how many percent of the elements contained in the receiver are &lt;= element. Does linear interpolation if the element is not contained but lies in between two contained elements.</result>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" alternativeNameOf="gamma_distribution" id="pgamma" name="pgamma" projectName="ummisco.gaml.extensions.stats">
      <operatorsCategories>
        <category id="Distributions" />
      </operatorsCategories>
    </operator>
    <operator alphabetOrder="ak" id="gamma_distribution" name="gamma_distribution" projectName="ummisco.gaml.extensions.stats">
      <operatorCategories>
        <category id="Distributions" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="ummisco/gaml/extensions/stats/Stats2/Distributions.java" contentType="-13" returnType="float" type="2">
          <operand name="a" position="0" type="float" />
          <operand name="b" position="1" type="float" />
          <operand name="x" position="2" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>Returns the integral from zero to x of the gamma probability density function.</result>
        <comment>incomplete_gamma(a,x) is equal to pgamma(a,1,x).</comment>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="moment" name="moment" projectName="ummisco.gaml.extensions.stats">
      <operatorCategories>
        <category id="DescriptiveStatistics" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="ummisco/gaml/extensions/stats/Stats2/DescriptiveStatistics.java" contentType="-13" returnType="float" type="2">
          <operand name="data" position="0" type="container" />
          <operand name="k" position="1" type="int" />
          <operand name="c" position="2" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>Returns the moment of k-th order with constant c of a data sequence</result>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="rms" name="rms" projectName="ummisco.gaml.extensions.stats">
      <operatorCategories>
        <category id="DescriptiveStatistics" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="ummisco/gaml/extensions/stats/Stats2/DescriptiveStatistics.java" contentType="-13" returnType="float" type="2">
          <operand name="size" position="0" type="int" />
          <operand name="sumOfSquares" position="1" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>Returns the RMS (Root-Mean-Square) of a data sequence. The RMS of data sequence is the square-root of the mean of the squares of the elements in the data sequence. It is a measure of the average size of the elements of a data sequence.</result>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" alternativeNameOf="log_gamma" id="lgamma" name="lgamma" projectName="ummisco.gaml.extensions.stats">
      <operatorsCategories>
        <category id="GammaFunction" />
      </operatorsCategories>
    </operator>
    <operator alphabetOrder="lz" id="log_gamma" name="log_gamma" projectName="ummisco.gaml.extensions.stats">
      <operatorCategories>
        <category id="GammaFunction" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="ummisco/gaml/extensions/stats/Stats2/GammaFunction.java" contentType="-13" returnType="float" type="2">
          <operand name="x" position="0" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>Returns the log of the value of the Gamma function at x.</result>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="student_area" name="student_area" projectName="ummisco.gaml.extensions.stats">
      <operatorCategories>
        <category id="Distributions" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="ummisco/gaml/extensions/stats/Stats2/Distributions.java" contentType="-13" returnType="float" type="2">
          <operand name="x" position="0" type="float" />
          <operand name="df" position="1" type="int" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>Returns the area to the left of x in the Student T distribution with the given degrees of freedom.</result>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" alternativeNameOf="normal_density" id="dnorm" name="dnorm" projectName="ummisco.gaml.extensions.stats">
      <operatorsCategories>
        <category id="Distributions" />
      </operatorsCategories>
    </operator>
    <operator alphabetOrder="lz" id="normal_density" name="normal_density" projectName="ummisco.gaml.extensions.stats">
      <operatorCategories>
        <category id="Distributions" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="ummisco/gaml/extensions/stats/Stats2/Distributions.java" contentType="-13" returnType="float" type="2">
          <operand name="x" position="0" type="float" />
          <operand name="mean" position="1" type="float" />
          <operand name="sd" position="2" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>Returns the probability of x in the normal distribution with the given mean and standard deviation.</result>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="covariance" name="covariance" projectName="ummisco.gaml.extensions.stats">
      <operatorCategories>
        <category id="DescriptiveStatistics" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="ummisco/gaml/extensions/stats/Stats2/DescriptiveStatistics.java" contentType="-13" returnType="float" type="2">
          <operand name="data1" position="0" type="container" />
          <operand name="data2" position="1" type="container" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>Returns the covariance of two data sequences</result>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="student_t_inverse" name="student_t_inverse" projectName="ummisco.gaml.extensions.stats">
      <operatorCategories>
        <category id="Distributions" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="ummisco/gaml/extensions/stats/Stats2/Distributions.java" contentType="-13" returnType="float" type="2">
          <operand name="x" position="0" type="float" />
          <operand name="df" position="1" type="int" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>Returns the value, t, for which the area under the Student-t probability density function (integrated from minus infinity to t) is equal to x.</result>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="beta" name="beta" projectName="ummisco.gaml.extensions.stats">
      <operatorCategories>
        <category id="GammaFunction" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="ummisco/gaml/extensions/stats/Stats2/GammaFunction.java" contentType="-13" returnType="float" type="2">
          <operand name="a" position="0" type="float" />
          <operand name="b" position="1" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>Returns the beta function with arguments a, b.</result>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="incomplete_beta" name="incomplete_beta" projectName="ummisco.gaml.extensions.stats">
      <operatorCategories>
        <category id="GammaFunction" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="ummisco/gaml/extensions/stats/Stats2/GammaFunction.java" contentType="-13" returnType="float" type="2">
          <operand name="a" position="0" type="float" />
          <operand name="b" position="1" type="float" />
          <operand name="x" position="2" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>Returns the regularized integral of the beta function with arguments a and b, from zero to x.</result>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="skew" name="skew" projectName="ummisco.gaml.extensions.stats">
      <operatorCategories>
        <category id="DescriptiveStatistics" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="ummisco/gaml/extensions/stats/Stats2/DescriptiveStatistics.java" contentType="-13" returnType="float" type="2">
          <operand name="moment3" position="0" type="float" />
          <operand name="standardDeviation" position="1" type="float" />
        </operands>
        <operands class="ummisco/gaml/extensions/stats/Stats2/DescriptiveStatistics.java" contentType="-13" returnType="float" type="2">
          <operand name="data" position="0" type="container" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>Returns the skew of a data sequence.Returns the skew of a data sequence, which is moment(data,3,mean) / standardDeviation3</result>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="gamma" name="gamma" projectName="ummisco.gaml.extensions.stats">
      <operatorCategories>
        <category id="GammaFunction" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="ummisco/gaml/extensions/stats/Stats2/GammaFunction.java" contentType="-13" returnType="float" type="2">
          <operand name="x" position="0" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>Returns the value of the Gamma function at x.</result>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="variance" name="variance" projectName="ummisco.gaml.extensions.stats">
      <operatorCategories>
        <category id="DescriptiveStatistics" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="ummisco/gaml/extensions/stats/Stats2/DescriptiveStatistics.java" contentType="-13" returnType="float" type="2">
          <operand name="size" position="0" type="int" />
          <operand name="sum" position="1" type="float" />
          <operand name="numOfSquares" position="2" type="float" />
        </operands>
        <operands class="ummisco/gaml/extensions/stats/Stats2/DescriptiveStatistics.java" contentType="-13" returnType="float" type="2">
          <operand name="standardDeviation" position="0" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>Returns the variance of a data sequence. That is (sumOfSquares - mean*sum) / size with mean = sum/size.Returns the variance from a standard deviation.</result>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="chi_square_complemented" name="chi_square_complemented" projectName="ummisco.gaml.extensions.stats">
      <operatorCategories>
        <category id="Distributions" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="ummisco/gaml/extensions/stats/Stats2/Distributions.java" contentType="-13" returnType="float" type="2">
          <operand name="x" position="0" type="float" />
          <operand name="df" position="1" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>Returns the area under the right hand tail (from x to infinity) of the Chi square probability density function with df degrees of freedom.</result>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="normal_inverse" name="normal_inverse" projectName="ummisco.gaml.extensions.stats">
      <operatorCategories>
        <category id="Distributions" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="ummisco/gaml/extensions/stats/Stats2/Distributions.java" contentType="-13" returnType="float" type="2">
          <operand name="area" position="0" type="float" />
          <operand name="mean" position="1" type="float" />
          <operand name="sd" position="2" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>Returns the x in the normal distribution with the given mean and standard deviation, to the left of which lies the given area. normal.Inverse returns the value in terms of standard deviations from the mean, so we need to adjust it for the given mean and standard deviation.</result>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="gamma_distribution_complemented" name="gamma_distribution_complemented" projectName="ummisco.gaml.extensions.stats">
      <operatorCategories>
        <category id="Distributions" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="ummisco/gaml/extensions/stats/Stats2/Distributions.java" contentType="-13" returnType="float" type="2">
          <operand name="a" position="0" type="float" />
          <operand name="b" position="1" type="float" />
          <operand name="x" position="2" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>Returns the integral from x to infinity of the gamma probability density function.</result>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="kurtosis" name="kurtosis" projectName="ummisco.gaml.extensions.stats">
      <operatorCategories>
        <category id="DescriptiveStatistics" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="ummisco/gaml/extensions/stats/Stats2/DescriptiveStatistics.java" contentType="-13" returnType="float" type="2">
          <operand name="moment4" position="0" type="float" />
          <operand name="standardDeviation" position="1" type="float" />
        </operands>
        <operands class="ummisco/gaml/extensions/stats/Stats2/DescriptiveStatistics.java" contentType="-13" returnType="float" type="2">
          <operand name="data" position="0" type="container" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>Returns the kurtosis (aka excess) of a data sequenceReturns the kurtosis (aka excess) of a data sequence</result>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="binomial_complemented" name="binomial_complemented" projectName="ummisco.gaml.extensions.stats">
      <operatorCategories>
        <category id="Distributions" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="ummisco/gaml/extensions/stats/Stats2/Distributions.java" contentType="-13" returnType="float" type="2">
          <operand name="n" position="0" type="int" />
          <operand name="k" position="1" type="int" />
          <operand name="p" position="2" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>Returns the sum of the terms k+1 through n of the Binomial probability density, where n is the number of trials and P is the probability of success in the range 0 to 1.</result>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="pValue_for_fStat" name="pValue_for_fStat" projectName="ummisco.gaml.extensions.stats">
      <operatorCategories>
        <category id="Distributions" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="ummisco/gaml/extensions/stats/Stats2/Distributions.java" contentType="-13" returnType="float" type="2">
          <operand name="fstat" position="0" type="float" />
          <operand name="dfn" position="1" type="int" />
          <operand name="dfd" position="2" type="int" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>Returns the P value of F statistic fstat with numerator degrees of freedom dfn and denominator degress of freedom dfd. Uses the incomplete Beta function.</result>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" alternativeNameOf="normal_area" id="pnorm" name="pnorm" projectName="ummisco.gaml.extensions.stats">
      <operatorsCategories>
        <category id="Distributions" />
      </operatorsCategories>
    </operator>
    <operator alphabetOrder="lz" id="normal_area" name="normal_area" projectName="ummisco.gaml.extensions.stats">
      <operatorCategories>
        <category id="Distributions" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="ummisco/gaml/extensions/stats/Stats2/Distributions.java" contentType="-13" returnType="float" type="2">
          <operand name="x" position="0" type="float" />
          <operand name="mean" position="1" type="float" />
          <operand name="sd" position="2" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>Returns the area to the left of x in the normal distribution with the given mean and standard deviation.</result>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="pValue_for_tStat" name="pValue_for_tStat" projectName="ummisco.gaml.extensions.stats">
      <operatorCategories>
        <category id="Distributions" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="ummisco/gaml/extensions/stats/Stats2/Distributions.java" contentType="-13" returnType="float" type="2">
          <operand name="tstat" position="0" type="float" />
          <operand name="df" position="1" type="int" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>Returns the P value of the T statistic tstat with df degrees of freedom. This is a two-tailed test so we just double the right tail which is given by studentT of -|tstat|.</result>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="binomial_coeff" name="binomial_coeff" projectName="ummisco.gaml.extensions.stats">
      <operatorCategories>
        <category id="Distributions" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="ummisco/gaml/extensions/stats/Stats2/Distributions.java" contentType="-13" returnType="float" type="2">
          <operand name="n" position="0" type="int" />
          <operand name="k" position="1" type="int" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>Returns n choose k as a double. Note the integerization of the double return value.</result>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" alternativeNameOf="*" id="scaled_by" name="scaled_by" projectName="msi.gama.core">
      <operatorsCategories>
        <category id="Spatial operators" />
        <category id="Spatial transformations operators" />
      </operatorsCategories>
    </operator>
    <operator alphabetOrder="ak" id="as_hexagonal_grid" name="as_hexagonal_grid" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Spatial transformations operators" />
        <category id="Grid-related operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="13" returnType="list&lt;geometry&gt;" type="-13">
          <operand name="ls" position="0" type="geometry" />
          <operand name="param" position="1" type="point" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A list of geometries (hexagonal) corresponding to the hexagonal tesselation of the first operand geometry</result>
        <seeAlso>
          <see id="as_4_grid" />
          <see id="as_grid" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="self as_hexagonal_grid {10, 5}" equals="list of geometries (hexagonal) corresponding to the hexagonal tesselation of the first operand geometry" isExecutable="true" isTestOnly="false" test="false" type="list&lt;geometry&gt;" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="partially_overlaps" name="partially_overlaps" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Spatial properties operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="bool" type="-13">
          <operand name="g1" position="0" type="geometry" />
          <operand name="g" position="1" type="geometry" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A boolean, equal to true if the left-geometry (or agent/point) partially overlaps the right-geometry (or agent/point).</result>
        <comment>if one geometry operand fully covers the other geometry operand, returns false (contrarily to the overlaps operator).</comment>
        <seeAlso>
          <see id="disjoint_from" />
          <see id="crosses" />
          <see id="overlaps" />
          <see id="intersects" />
          <see id="touches" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="polyline([{10,10},{20,20}]) partially_overlaps polyline([{15,15},{25,25}])" equals="true" isExecutable="true" isTestOnly="false" test="true" type="bool" />
              <example code="polygon([{10,10},{10,20},{20,20},{20,10}]) partially_overlaps polygon([{15,15},{15,25},{25,25},{25,15}])" equals="true" isExecutable="true" isTestOnly="false" test="true" type="bool" />
              <example code="polygon([{10,10},{10,20},{20,20},{20,10}]) partially_overlaps {25,25}" equals="false" isExecutable="true" isTestOnly="false" test="true" type="bool" />
              <example code="polygon([{10,10},{10,20},{20,20},{20,10}]) partially_overlaps polygon([{35,35},{35,45},{45,45},{45,35}])" equals="false" isExecutable="true" isTestOnly="false" test="true" type="bool" />
              <example code="polygon([{10,10},{10,20},{20,20},{20,10}]) partially_overlaps polyline([{10,10},{20,20}])" equals="false" isExecutable="true" isTestOnly="false" test="true" type="bool" />
              <example code="polygon([{10,10},{10,20},{20,20},{20,10}]) partially_overlaps {15,15}" equals="false" isExecutable="true" isTestOnly="false" test="true" type="bool" />
              <example code="polygon([{10,10},{10,20},{20,20},{20,10}]) partially_overlaps polygon([{0,0},{0,30},{30,30}, {30,0}])" equals="false" isExecutable="true" isTestOnly="false" test="true" type="bool" />
              <example code="polygon([{10,10},{10,20},{20,20},{20,10}]) partially_overlaps polygon([{15,15},{15,25},{25,25},{25,15}])" equals="true" isExecutable="true" isTestOnly="false" test="true" type="bool" />
              <example code="polygon([{10,10},{10,20},{20,20},{20,10}]) partially_overlaps polygon([{10,20},{20,20},{20,30},{10,30}])" equals="false" isExecutable="true" isTestOnly="false" test="true" type="bool" />
            </examples>
          </usage>
        </usagesExamples>
        <usagesNoExample>
          <usage descUsageElt="if one of the operand is null, returns false." />
        </usagesNoExample>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="as_grid" name="as_grid" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Spatial transformations operators" />
        <category id="Grid-related operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="13" returnType="matrix" type="-13">
          <operand name="g" position="0" type="geometry" />
          <operand name="dim" position="1" type="point" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A matrix of square geometries (grid with 8-neighbourhood) with dimension given by the rigth-hand operand ({nb_cols, nb_lines}) corresponding to the square tessellation of the left-hand operand geometry (geometry, agent)</result>
        <seeAlso>
          <see id="as_4_grid" />
          <see id="as_hexagonal_grid" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="self as_grid {10, 5}" equals="a matrix of square geometries (grid with 8-neighbourhood) with 10 columns and 5 lines corresponding to the square tessellation of the geometry of the agent applying the operator." isExecutable="true" isTestOnly="false" test="false" type="matrix" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="triangle" name="triangle" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Shape" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="side_size" position="0" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A triangle geometry which side size is given by the operand.</result>
        <comment>the centre of the triangle is by default the location of the current agent in which has been called this operator.</comment>
        <seeAlso>
          <see id="around" />
          <see id="circle" />
          <see id="cone" />
          <see id="line" />
          <see id="link" />
          <see id="norm" />
          <see id="point" />
          <see id="polygon" />
          <see id="polyline" />
          <see id="rectangle" />
          <see id="square" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="triangle(5)" equals="a geometry as a triangle with side_size = 5." isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
        </usagesExamples>
        <usagesNoExample>
          <usage descUsageElt="returns nil if the operand is nil." />
        </usagesNoExample>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="squircle" name="squircle" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Shape" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="xRadius" position="0" type="float" />
          <operand name="power" position="1" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A mix of square and circle geometry (see : http://en.wikipedia.org/wiki/Squircle), which side size is equal to the first operand and power is equal to the second operand</result>
        <comment>the centre of the ellipse is by default the location of the current agent in which has been called this operator.</comment>
        <seeAlso>
          <see id="around" />
          <see id="cone" />
          <see id="line" />
          <see id="link" />
          <see id="norm" />
          <see id="point" />
          <see id="polygon" />
          <see id="polyline" />
          <see id="super_ellipse" />
          <see id="rectangle" />
          <see id="square" />
          <see id="circle" />
          <see id="ellipse" />
          <see id="triangle" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="squircle(4,4)" equals="a geometry as a squircle of side 4 with a power of 4." isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
        </usagesExamples>
        <usagesNoExample>
          <usage descUsageElt="returns a point if the side operand is lower or equal to 0." />
        </usagesNoExample>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" alternativeNameOf="+" id="buffer" name="buffer" projectName="msi.gama.core">
      <operatorsCategories>
        <category id="Spatial operators" />
        <category id="Spatial transformations operators" />
      </operatorsCategories>
    </operator>
    <operator alphabetOrder="ak" alternativeNameOf="+" id="enlarged_by" name="enlarged_by" projectName="msi.gama.core">
      <operatorsCategories>
        <category id="Spatial operators" />
        <category id="Spatial transformations operators" />
      </operatorsCategories>
    </operator>
    <operator alphabetOrder="ak" id="closest_to" name="closest_to" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Spatial queries operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="agent" type="-20">
          <operand name="list" position="0" type="msi.gama.util.IContainer&lt;?,? extends msi.gama.metamodel.shape.IShape&gt;" />
          <operand name="source" position="1" type="unknown" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>An agent among the left-operand list of agents, species or meta-population (addition of species), the closest to the operand (casted as a geometry).</result>
        <comment>the distance is computed in the topology of the calling agent (the agent in which this operator is used), with the distance algorithm specific to the topology.</comment>
        <seeAlso>
          <see id="neighbours_at" />
          <see id="neighbours_of" />
          <see id="inside" />
          <see id="overlapping" />
          <see id="agents_overlapping" />
          <see id="agents_inside" />
          <see id="agent_closest_to" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="[ag1, ag2, ag3] closest_to(self)" equals="return the closest agent among ag1, ag2 and ag3 to the agent applying the operator." isExecutable="false" isTestOnly="false" test="false" type="agent" />
              <example code="(species1 + species2) closest_to self" isExecutable="false" isTestOnly="false" test="false" type="agent" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="geometry_collection" name="geometry_collection" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Shape" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="geometries" position="0" type="container&lt;geometry&gt;" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A geometry collection (multi-geometry) composed of the given list of geometries.</result>
        <seeAlso>
          <see id="around" />
          <see id="circle" />
          <see id="cone" />
          <see id="link" />
          <see id="norm" />
          <see id="point" />
          <see id="polygone" />
          <see id="rectangle" />
          <see id="square" />
          <see id="triangle" />
          <see id="line" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="geometry_collection([{0,0}, {0,10}, {10,10}, {10,0}])" equals="a geometry composed of the 4 points (multi-point)." isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
        </usagesExamples>
        <usagesNoExample>
          <usage descUsageElt="if the operand is nil, returns the point geometry {0,0}" />
          <usage descUsageElt="if the operand is composed of a single geometry, returns a copy of the geometry." />
        </usagesNoExample>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="clean" name="clean" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Spatial transformations operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="g" position="0" type="geometry" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A geometry corresponding to the cleaning of the operand (geometry, agent, point)</result>
        <comment>The cleaning corresponds to a buffer with a distance of 0.0</comment>
        <usagesExamples>
          <usage>
            <examples>
              <example code="clean(self)" equals="returns the geometry resulting from the cleaning of the geometry of the agent applying the operator." isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="path_between" name="path_between" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Spatial relations operators" />
        <category id="Path-related operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-20" returnType="path" type="17">
          <operand name="graph" position="0" type="topology" />
          <operand name="nodes" position="1" type="container&lt;geometry&gt;" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A path between a list of two geometries (geometries, agents or points) considering a topology.</result>
        <seeAlso>
          <see id="towards" />
          <see id="direction_to" />
          <see id="distance_between" />
          <see id="direction_between" />
          <see id="path_to" />
          <see id="distance_to" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="my_topology path_between [ag1, ag2]" equals="A path between ag1 and ag2" isExecutable="false" isTestOnly="false" test="false" type="path" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="overlapping" name="overlapping" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Spatial queries operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-20" returnType="list&lt;agent&gt;" type="-13">
          <operand name="list" position="0" type="msi.gama.util.IContainer&lt;?,? extends msi.gama.metamodel.shape.IShape&gt;" />
          <operand name="source" position="1" type="unknown" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A list of agents among the left-operand list, species or meta-population (addition of species), overlapping the operand (casted as a geometry).</result>
        <seeAlso>
          <see id="neighbours_at" />
          <see id="neighbours_of" />
          <see id="agent_closest_to" />
          <see id="agents_inside" />
          <see id="closest_to" />
          <see id="inside" />
          <see id="agents_overlapping" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="[ag1, ag2, ag3] overlapping(self)" equals="return the agents among ag1, ag2 and ag3 that overlap the shape of the agent applying the operator." isExecutable="false" isTestOnly="false" test="false" type="list&lt;agent&gt;" />
              <example code="(species1 + species2) overlapping self" isExecutable="false" isTestOnly="false" test="false" type="list&lt;agent&gt;" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" alternativeNameOf="without_holes" id="solid" name="solid" projectName="msi.gama.core">
      <operatorsCategories>
        <category id="Spatial operators" />
        <category id="Spatial transformations operators" />
      </operatorsCategories>
    </operator>
    <operator alphabetOrder="lz" id="without_holes" name="without_holes" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Spatial transformations operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="g" position="0" type="geometry" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A geometry corresponding to the operand geometry (geometry, agent, point) without its holes</result>
        <usagesExamples>
          <usage>
            <examples>
              <example code="solid(self)" equals="the geometry corresponding to the geometry of the agent applying the operator without its holes." isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" alternativeNameOf="any_location_in" id="any_point_in" name="any_point_in" projectName="msi.gama.core">
      <operatorsCategories>
        <category id="Spatial operators" />
        <category id="Points-related operators" />
      </operatorsCategories>
    </operator>
    <operator alphabetOrder="ak" id="any_location_in" name="any_location_in" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Points-related operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="point" type="-13">
          <operand name="g" position="0" type="geometry" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A point inside (or touching) the operand-geometry.</result>
        <seeAlso>
          <see id="closest_points_with" />
          <see id="farthest_point_to" />
          <see id="points_at" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="any_location_in(square(5))" equals="a point in the square, for example : {3,4.6}." isExecutable="true" isTestOnly="false" test="false" type="point" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="hierarchical_clustering" name="hierarchical_clustering" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Spatial statistical operators" />
        <category id="Statistical operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="5" returnType="list" type="-13">
          <operand name="agents" position="0" type="container&lt;agent&gt;" />
          <operand name="distance" position="1" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A tree (list of list) contained groups of agents clustered by distance considering a distance min between two groups.</result>
        <comment>use of hierarchical clustering with Minimum for linkage criterion between two groups of agents.</comment>
        <seeAlso>
          <see id="simple_clustering_by_distance" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="[ag1, ag2, ag3, ag4, ag5] hierarchical_clustering 20.0" equals="for example, can return [[[ag1],[ag3]], [ag2], [[[ag4],[ag5]],[ag6]]" isExecutable="false" isTestOnly="false" test="false" type="list" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" alternativeNameOf="towards" id="direction_to" name="direction_to" projectName="msi.gama.core">
      <operatorsCategories>
        <category id="Spatial operators" />
        <category id="Spatial relations operators" />
      </operatorsCategories>
    </operator>
    <operator alphabetOrder="lz" id="towards" name="towards" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Spatial relations operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="int" type="-13">
          <operand name="agent" position="0" type="geometry" />
          <operand name="target" position="1" type="geometry" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>The direction (in degree) between the two geometries (geometries, agents, points) considering the topology of the agent applying the operator.</result>
        <seeAlso>
          <see id="distance_between" />
          <see id="distance_to" />
          <see id="direction_between" />
          <see id="path_between" />
          <see id="path_to" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="ag1 towards ag2" equals="the direction between ag1 and ag2 and ag3 considering the topology of the agent applying the operator" isExecutable="false" isTestOnly="false" test="false" type="int" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="agent_closest_to" name="agent_closest_to" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Spatial queries operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="agent" type="11">
          <operand name="source" position="0" type="unknown" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>An agent, the closest to the operand (casted as a geometry).</result>
        <comment>the distance is computed in the topology of the calling agent (the agent in which this operator is used), with the distance algorithm specific to the topology.</comment>
        <seeAlso>
          <see id="neighbours_at" />
          <see id="neighbours_of" />
          <see id="agents_inside" />
          <see id="agents_overlapping" />
          <see id="closest_to" />
          <see id="inside" />
          <see id="overlapping" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="agent_closest_to(self)" equals="the closest agent to the agent applying the operator." isExecutable="true" isTestOnly="false" test="false" type="agent" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="polyhedron" name="polyhedron" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Shape" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="points" position="0" type="container&lt;geometry&gt;" />
          <operand name="depth" position="1" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A polyhedron geometry from the given list of points.</result>
        <seeAlso>
          <see id="around" />
          <see id="circle" />
          <see id="cone" />
          <see id="line" />
          <see id="link" />
          <see id="norm" />
          <see id="point" />
          <see id="polyline" />
          <see id="rectangle" />
          <see id="square" />
          <see id="triangle" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="polyhedron([{0,0}, {0,10}, {10,10}, {10,0}],10)" equals="a polygon geometry composed of the 4 points and of depth 10." isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
        </usagesExamples>
        <usagesNoExample>
          <usage descUsageElt="if the operand is nil, returns the point geometry {0,0}" />
          <usage descUsageElt="if the operand is composed of a single point, returns a point geometry" />
          <usage descUsageElt="if the operand is composed of 2 points, returns a polyline geometry." />
        </usagesNoExample>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" alternativeNameOf="-" id="reduced_by" name="reduced_by" projectName="msi.gama.core">
      <operatorsCategories>
        <category id="Spatial operators" />
        <category id="Spatial transformations operators" />
      </operatorsCategories>
    </operator>
    <operator alphabetOrder="ak" id="covers" name="covers" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Spatial properties operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="bool" type="-13">
          <operand name="g1" position="0" type="geometry" />
          <operand name="g2" position="1" type="geometry" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A boolean, equal to true if the left-geometry (or agent/point) covers the right-geometry (or agent/point).</result>
        <seeAlso>
          <see id="disjoint_from" />
          <see id="crosses" />
          <see id="overlaps" />
          <see id="partially_overlaps" />
          <see id="touches" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="square(5) covers square(2)" equals="true" isExecutable="true" isTestOnly="false" test="true" type="bool" />
            </examples>
          </usage>
        </usagesExamples>
        <usagesNoExample>
          <usage descUsageElt="if one of the operand is null, returns false." />
        </usagesNoExample>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="IDW" name="IDW" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="msi.gama.util.GamaMap&lt;msi.gama.metamodel.shape.IShape,java.lang.Double&gt;" type="-13">
          <operand name="geometries" position="0" type="msi.gama.util.IContainer&lt;?,? extends msi.gama.metamodel.shape.IShape&gt;" />
          <operand name="points" position="1" type="msi.gama.util.GamaMap&lt;msi.gama.metamodel.shape.GamaPoint,java.lang.Double&gt;" />
          <operand name="power" position="2" type="int" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>Inverse Distance Weighting (IDW) is a type of deterministic method for multivariate interpolation with a known scattered set of points. The assigned values to each geometry are calculated with a weighted average of the values available at the known points. See: http://en.wikipedia.org/wiki/Inverse_distance_weighting Usage: IDW (list of geometries, map of points (key: point, value: value), power parameter)</result>
        <usagesExamples>
          <usage>
            <examples>
              <example code="IDW([ag1, ag2, ag3, ag4, ag5],[{10,10}::25.0, {10,80}::10.0, {100,10}::15.0], 2)" equals="for example, can return [ag1::12.0, ag2::23.0,ag3::12.0,ag4::14.0,ag5::17.0]" isExecutable="false" isTestOnly="false" test="false" type="msi.gama.util.GamaMap&lt;msi.gama.metamodel.shape.IShape,java.lang.Double&gt;" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="split_lines" name="split_lines" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Spatial transformations operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="13" returnType="list&lt;geometry&gt;" type="-13">
          <operand name="geoms" position="0" type="container&lt;geometry&gt;" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A list of geometries resulting after cutting the lines at their intersections.</result>
        <usagesExamples>
          <usage>
            <examples>
              <example code="split_lines([line([{0,10}, {20,10}]), line([{0,10}, {20,10}])])" equals="a list of four polylines: line([{0,10}, {10,10}]), line([{10,10}, {20,10}]), line([{10,0}, {10,10}]) and line([{10,10}, {10,20}])" isExecutable="true" isTestOnly="false" test="false" type="list&lt;geometry&gt;" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="ellipse" name="ellipse" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Shape" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="xRadius" position="0" type="float" />
          <operand name="yRadius" position="1" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>An ellipse geometry which x-radius is equal to the first operand and y-radius is equal to the second operand</result>
        <comment>the centre of the ellipse is by default the location of the current agent in which has been called this operator.</comment>
        <seeAlso>
          <see id="around" />
          <see id="cone" />
          <see id="line" />
          <see id="link" />
          <see id="norm" />
          <see id="point" />
          <see id="polygon" />
          <see id="polyline" />
          <see id="rectangle" />
          <see id="square" />
          <see id="circle" />
          <see id="squircle" />
          <see id="triangle" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="ellipse(10, 10)" equals="a geometry as an ellipse of width 10 and height 10." isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
        </usagesExamples>
        <usagesNoExample>
          <usage descUsageElt="returns a point if both operands are lower or equal to 0, a line if only one is." />
        </usagesNoExample>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="cylinder" name="cylinder" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Shape" />
        <category id="3D" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="radius" position="0" type="float" />
          <operand name="depth" position="1" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A cylinder geometry which radius is equal to the operand.</result>
        <comment>the centre of the cylinder is by default the location of the current agent in which has been called this operator.</comment>
        <seeAlso>
          <see id="around" />
          <see id="cone" />
          <see id="line" />
          <see id="link" />
          <see id="norm" />
          <see id="point" />
          <see id="polygon" />
          <see id="polyline" />
          <see id="rectangle" />
          <see id="square" />
          <see id="triangle" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="cylinder(10,10)" equals="a geometry as a circle of radius 10." isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
        </usagesExamples>
        <usagesNoExample>
          <usage descUsageElt="returns a point if the operand is lower or equal to 0." />
        </usagesNoExample>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="farthest_point_to" name="farthest_point_to" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Points-related operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="point" type="-13">
          <operand name="g" position="0" type="geometry" />
          <operand name="p" position="1" type="point" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>the farthest point of the left-operand to the left-point.</result>
        <seeAlso>
          <see id="any_location_in" />
          <see id="any_point_in" />
          <see id="closest_points_with" />
          <see id="points_at" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="geom farthest_point_to(pt)" equals="the closest point of geom to pt" isExecutable="false" isTestOnly="false" test="false" type="point" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="spherical_pie" name="spherical_pie" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Shape" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="radius" position="0" type="float" />
          <operand name="ratio" position="1" type="list&lt;float&gt;" />
        </operands>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="radius" position="0" type="float" />
          <operand name="ratio" position="1" type="list&lt;float&gt;" />
          <operand name="colors" position="2" type="msi.gama.util.IList&lt;msi.gama.util.GamaColor&gt;" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>An sphere geometry which radius is equal to the operand made of n pie.An sphere geometry which radius is equal to the operand made of n pie.</result>
        <comment>the centre of the sphere is by default the location of the current agent in which has been called this operator.the centre of the sphere is by default the location of the current agent in which has been called this operator.</comment>
        <seeAlso>
          <see id="around" />
          <see id="cone" />
          <see id="line" />
          <see id="link" />
          <see id="norm" />
          <see id="point" />
          <see id="polygon" />
          <see id="polyline" />
          <see id="rectangle" />
          <see id="square" />
          <see id="triangle" />
          <see id="hemisphere" />
          <see id="pie3D" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="spherical_pie(10,[1.0,1.0,1.0])" equals="a circle geometry of radius 10, displayed as a sphere with 4 slices." isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
          <usage>
            <examples>
              <example code="spherical_pie(10/2,[0.1,0.9],[#red,#green])" equals="a circle geometry of radius 10, displayed as a sphere with 2 slices." isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
        </usagesExamples>
        <usagesNoExample>
          <usage descUsageElt="returns a point if the operand is lower or equal to 0." />
          <usage descUsageElt="returns a point if the operand is lower or equal to 0." />
        </usagesNoExample>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="*" name="*" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Spatial transformations operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="g" position="0" type="geometry" />
          <operand name="coefficient" position="1" type="float" />
        </operands>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="g" position="0" type="geometry" />
          <operand name="coefficients" position="1" type="point" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result />
        <usages>
          <usage descUsageElt="if the left-hand operand is a geometry and the rigth-hand operand a float, returns a geometry corresponding to the left-hand operand (geometry, agent, point) scaled by the right-hand operand coefficient">
            <examples>
              <example code="circle(10) * 2" equals="circle(20)" isExecutable="true" isTestOnly="false" test="true" type="geometry" />
            </examples>
          </usage>
          <usage descUsageElt="if the left-hand operand is a geometry and the rigth-hand operand a point, returns a geometry corresponding to the left-hand operand (geometry, agent, point) scaled by the right-hand operand coefficients in the 3 dimensions">
            <examples>
              <example code="shape * {0.5,0.5,2}" equals="a geometry corresponding to the geometry of the agent applying the operator scaled by a coefficient of 0.5 in x, 0.5 in y and 2 in z" isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
        </usages>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="voronoi" name="voronoi" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Spatial transformations operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="13" returnType="list&lt;geometry&gt;" type="-13">
          <operand name="pts" position="0" type="list&lt;point&gt;" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result masterDoc="true">A list of geometries corresponding to the Voronoi diagram built from the list of points</result>
        <usagesExamples>
          <usage>
            <examples>
              <example code="voronoi([{10,10},{50,50},{90,90},{10,90},{90,10}])" equals="the list of geometries corresponding to the Voronoi Diagram built from the list of points." isExecutable="true" isTestOnly="false" test="false" type="list&lt;geometry&gt;" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" alternativeNameOf="line" id="polyline" name="polyline" projectName="msi.gama.core">
      <operatorsCategories>
        <category id="Spatial operators" />
        <category id="Shape" />
      </operatorsCategories>
    </operator>
    <operator alphabetOrder="ak" id="agents_inside" name="agents_inside" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Spatial queries operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="11" returnType="list&lt;agent&gt;" type="-13">
          <operand name="source" position="0" type="unknown" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A list of agents covered by the operand (casted as a geometry).</result>
        <seeAlso>
          <see id="agent_closest_to" />
          <see id="agents_overlapping" />
          <see id="closest_to" />
          <see id="inside" />
          <see id="overlapping" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="agents_inside(self)" equals="the agents that are covered by the shape of the agent applying the operator." isExecutable="true" isTestOnly="false" test="false" type="list&lt;agent&gt;" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="envelope" name="envelope" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Shape" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="obj" position="0" type="unknown" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A 3D geometry that represents the box that surrounds the geometries or the surface described by the arguments. More general than geometry(arguments).envelope, as it allows to pass int, double, point, image files, shape files, asc files, or any list combining these arguments, in which case the envelope will be correctly expanded. If an envelope cannot be determined from the arguments, a default one of dimensions (0,100, 0, 100, 0, 100) is returned</result>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="overlaps" name="overlaps" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="bool" type="-13">
          <operand name="g1" position="0" type="geometry" />
          <operand name="g2" position="1" type="geometry" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A boolean, equal to true if the left-geometry (or agent/point) overlaps the right-geometry (or agent/point).</result>
        <seeAlso>
          <see id="disjoint_from" />
          <see id="crosses" />
          <see id="intersects" />
          <see id="partially_overlaps" />
          <see id="touches" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="polyline([{10,10},{20,20}]) overlaps polyline([{15,15},{25,25}])" equals="true" isExecutable="true" isTestOnly="false" test="true" type="bool" />
              <example code="polygon([{10,10},{10,20},{20,20},{20,10}]) overlaps polygon([{15,15},{15,25},{25,25},{25,15}])" equals="true" isExecutable="true" isTestOnly="false" test="true" type="bool" />
              <example code="polygon([{10,10},{10,20},{20,20},{20,10}]) overlaps {25,25}" equals="false" isExecutable="true" isTestOnly="false" test="true" type="bool" />
              <example code="polygon([{10,10},{10,20},{20,20},{20,10}]) overlaps polygon([{35,35},{35,45},{45,45},{45,35}])" equals="false" isExecutable="true" isTestOnly="false" test="true" type="bool" />
              <example code="polygon([{10,10},{10,20},{20,20},{20,10}]) overlaps polyline([{10,10},{20,20}])" equals="true" isExecutable="true" isTestOnly="false" test="true" type="bool" />
              <example code="polygon([{10,10},{10,20},{20,20},{20,10}]) overlaps {15,15}" equals="true" isExecutable="true" isTestOnly="false" test="true" type="bool" />
              <example code="polygon([{10,10},{10,20},{20,20},{20,10}]) overlaps polygon([{0,0},{0,30},{30,30}, {30,0}])" equals="true" isExecutable="true" isTestOnly="false" test="true" type="bool" />
              <example code="polygon([{10,10},{10,20},{20,20},{20,10}]) overlaps polygon([{15,15},{15,25},{25,25},{25,15}])" equals="true" isExecutable="true" isTestOnly="false" test="true" type="bool" />
              <example code="polygon([{10,10},{10,20},{20,20},{20,10}]) overlaps polygon([{10,20},{20,20},{20,30},{10,30}])" equals="true" isExecutable="true" isTestOnly="false" test="true" type="bool" />
            </examples>
          </usage>
        </usagesExamples>
        <usagesNoExample>
          <usage descUsageElt="if one of the operand is null, returns false." />
          <usage descUsageElt="if one operand is a point, returns true if the point is included in the geometry" />
        </usagesNoExample>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="split_at" name="split_at" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="13" returnType="list&lt;geometry&gt;" type="-13">
          <operand name="geom" position="0" type="geometry" />
          <operand name="pt" position="1" type="point" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>The two part of the left-operand lines split at the given right-operand point</result>
        <usagesExamples>
          <usage>
            <examples>
              <example code="polyline([{1,2},{4,6}]) split_at {7,6}" equals="[polyline([{1.0,2.0},{7.0,6.0}]), polyline([{7.0,6.0},{4.0,6.0}])]" isExecutable="true" isTestOnly="false" test="true" type="list&lt;geometry&gt;" />
            </examples>
          </usage>
        </usagesExamples>
        <usagesNoExample>
          <usage descUsageElt="if the left-operand is a point or a polygon, returns an empty list" />
        </usagesNoExample>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="at_distance" name="at_distance" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Spatial queries operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-20" returnType="list&lt;agent&gt;" type="-13">
          <operand name="list" position="0" type="msi.gama.util.IContainer&lt;?,? extends msi.gama.metamodel.shape.IShape&gt;" />
          <operand name="distance" position="1" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A list of agents among the left-operand list that are located at a distance &lt;= the right operand from the caller agent (in its topology)</result>
        <seeAlso>
          <see id="neighbours_at" />
          <see id="neighbours_of" />
          <see id="agent_closest_to" />
          <see id="agents_inside" />
          <see id="closest_to" />
          <see id="inside" />
          <see id="overlapping" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="[ag1, ag2, ag3] at_distance 20" equals="the agents of the list located at a distance &lt;= 20 from the caller agent (in the same order)." isExecutable="false" isTestOnly="false" test="false" type="list&lt;agent&gt;" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="circle" name="circle" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Shape" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="radius" position="0" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A circle geometry which radius is equal to the operand.</result>
        <comment>the centre of the circle is by default the location of the current agent in which has been called this operator.</comment>
        <seeAlso>
          <see id="around" />
          <see id="cone" />
          <see id="line" />
          <see id="link" />
          <see id="norm" />
          <see id="point" />
          <see id="polygon" />
          <see id="polyline" />
          <see id="rectangle" />
          <see id="square" />
          <see id="triangle" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="circle(10)" equals="a geometry as a circle of radius 10." isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
        </usagesExamples>
        <usagesNoExample>
          <usage descUsageElt="returns a point if the operand is lower or equal to 0." />
        </usagesNoExample>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="-" name="-" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Spatial transformations operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="g1" position="0" type="geometry" />
          <operand name="agents" position="1" type="container&lt;geometry&gt;" />
        </operands>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="g" position="0" type="geometry" />
          <operand name="size" position="1" type="float" />
        </operands>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="g1" position="0" type="geometry" />
          <operand name="g2" position="1" type="geometry" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result />
        <usages>
          <usage descUsageElt="if the right-operand is a list of points, geometries or agents, returns the geometry resulting from the difference between the left-geometry and all of the right-geometries">
            <examples>
              <example code="rectangle(10,10) - [circle(2), square(2)]" equals="rectangle(10,10) - (circle(2) + square(2))" isExecutable="true" isTestOnly="false" test="true" type="geometry" />
            </examples>
          </usage>
          <usage descUsageElt="if the left-hand operand is a geometry and the rigth-hand operand a float, returns a geometry corresponding to the left-hand operand (geometry, agent, point) reduced by the right-hand operand distance">
            <examples>
              <example code="shape - 5" equals="a geometry corresponding to the geometry of the agent applying the operator reduced by a distance of 5" isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
          <usage descUsageElt="if both operands are a point, a geometry or an agent, returns the geometry resulting from the difference between both geometries">
            <examples>
              <example code="geom1 - geom2" equals="a geometry corresponding to difference between geom1 and geom2" isExecutable="false" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
        </usages>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="closest_points_with" name="closest_points_with" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Points-related operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="7" returnType="list&lt;point&gt;" type="5">
          <operand name="a" position="0" type="geometry" />
          <operand name="b" position="1" type="geometry" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A list of two closest points between the two geometries.</result>
        <seeAlso>
          <see id="any_location_in" />
          <see id="any_point_in" />
          <see id="farthest_point_to" />
          <see id="points_at" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="geom1 closest_points_with(geom2)" equals="[pt1, pt2] with pt1 the closest point of geom1 to geom2 and pt1 the closest point of geom2 to geom1" isExecutable="false" isTestOnly="false" test="false" type="list&lt;point&gt;" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="rgb_to_xyz" name="rgb_to_xyz" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="3D" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="7" returnType="list&lt;point&gt;" type="5">
          <operand name="textureFileName" position="0" type="file" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A list of point corresponding to RGB value of an image (r:x , g:y, b:z)</result>
        <usagesExamples>
          <usage>
            <examples>
              <example code="rgb_to_xyz(texture)" equals="a list of points" isExecutable="false" isTestOnly="false" test="false" type="list&lt;point&gt;" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="disjoint_from" name="disjoint_from" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="bool" type="-13">
          <operand name="g1" position="0" type="geometry" />
          <operand name="g2" position="1" type="geometry" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A boolean, equal to true if the left-geometry (or agent/point) is disjoints from the right-geometry (or agent/point).</result>
        <seeAlso>
          <see id="intersects" />
          <see id="crosses" />
          <see id="overlaps" />
          <see id="partially_overlaps" />
          <see id="touches" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="polyline([{10,10},{20,20}]) disjoint_from polyline([{15,15},{25,25}])" equals="false" isExecutable="true" isTestOnly="false" test="true" type="bool" />
              <example code="polygon([{10,10},{10,20},{20,20},{20,10}]) disjoint_from polygon([{15,15},{15,25},{25,25},{25,15}])" equals="false" isExecutable="true" isTestOnly="false" test="true" type="bool" />
              <example code="polygon([{10,10},{10,20},{20,20},{20,10}]) disjoint_from {15,15}" equals="false" isExecutable="true" isTestOnly="false" test="true" type="bool" />
              <example code="polygon([{10,10},{10,20},{20,20},{20,10}]) disjoint_from {25,25}" equals="true" isExecutable="true" isTestOnly="false" test="true" type="bool" />
              <example code="polygon([{10,10},{10,20},{20,20},{20,10}]) disjoint_from polygon([{35,35},{35,45},{45,45},{45,35}])" equals="true" isExecutable="true" isTestOnly="false" test="true" type="bool" />
            </examples>
          </usage>
        </usagesExamples>
        <usagesNoExample>
          <usage descUsageElt="if one of the operand is null, returns true." />
          <usage descUsageElt="if one operand is a point, returns false if the point is included in the geometry." />
        </usagesNoExample>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="neighbours_at" name="neighbours_at" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Spatial queries operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-18" returnType="list" type="-13">
          <operand name="agent" position="0" type="geometry" />
          <operand name="distance" position="1" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>a list, containing all the agents of the same species than the left argument (if it is an agent) located at a distance inferior or equal to the right-hand operand to the left-hand operand (geometry, agent, point).</result>
        <comment>The topology used to compute the neighbourhood  is the one of the left-operand if this one is an agent; otherwise the one of the agent applying the operator.</comment>
        <seeAlso>
          <see id="neighbours_of" />
          <see id="closest_to" />
          <see id="overlapping" />
          <see id="agents_overlapping" />
          <see id="agents_inside" />
          <see id="agent_closest_to" />
          <see id="at_distance" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="(self neighbours_at (10))" equals="all the agents located at a distance lower or equal to 10 to the agent applying the operator." isExecutable="true" isTestOnly="false" test="false" type="list" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="union" name="union" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="elements" position="0" type="container&lt;geometry&gt;" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result />
        <usagesExamples>
          <usage>
            <examples>
              <example code="union([geom1, geom2, geom3])" equals="a geometry corresponding to union between geom1, geom2 and geom3" isExecutable="false" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
        </usagesExamples>
        <usagesNoExample>
          <usage descUsageElt="if the right-operand is a container of points, geometries or agents, returns the geometry resulting from the union all the geometries" />
        </usagesNoExample>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="+" name="+" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Spatial transformations operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="g" position="0" type="geometry" />
          <operand name="parameters" position="1" type="map" />
        </operands>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="g" position="0" type="geometry" />
          <operand name="size" position="1" type="float" />
        </operands>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="g1" position="0" type="geometry" />
          <operand name="g2" position="1" type="geometry" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result />
        <usages>
          <usage descUsageElt="if the left-hand operand is a geometry and the rigth-hand operand a map (with [distance::float, quadrantSegments:: int (the number of line segments used to represent a quadrant of a circle), endCapStyle::int (1: (default) a semi-circle, 2: a straight line perpendicular to the end segment, 3: a half-square)]), returns a geometry corresponding to the left-hand operand (geometry, agent, point) enlarged considering the right-hand operand parameters">
            <examples>
              <example code="shape + [&quot;distance&quot;::5.0, &quot;quadrantSegments&quot;::4, &quot;endCapStyle&quot;:: 2]" equals="a geometry corresponding to the geometry of the agent applying the operator enlarged by a distance of 5, with 4 segments to represent a quadrant of a circle and a straight line perpendicular to the end segment" isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
          <usage descUsageElt="if the left-hand operand is a geometry and the rigth-hand operand a float, returns a geometry corresponding to the left-hand operand (geometry, agent, point) enlarged by the right-hand operand distance">
            <examples>
              <example code="circle(5) + 5" equals="circle(10)" isExecutable="true" isTestOnly="false" test="true" type="geometry" />
            </examples>
          </usage>
          <usage descUsageElt="if the right-operand is a point, a geometry or an agent, returns the geometry resulting from the union between both geometries">
            <examples>
              <example code="geom1 + geom2" equals="a geometry corresponding to union between geom1 and geom2" isExecutable="false" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
        </usages>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="smooth" name="smooth" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Spatial transformations operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="13" returnType="geometry" type="-13">
          <operand name="geometry" position="0" type="geometry" />
          <operand name="fit" position="1" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result masterDoc="true">Returns a 'smoothed' geometry, where straight lines are replaces by polynomial (bicubic) curves. The first parameter is the original geometry, the second is the 'fit' parameter which can be in the range 0 (loose fit) to 1 (tightest fit).</result>
        <usagesExamples>
          <usage>
            <examples>
              <example code="smooth(square(10), 0.0)" equals="a 'rounded' square" isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="angle_between" name="angle_between" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Points-related operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="int" type="-13">
          <operand name="p0" position="0" type="point" />
          <operand name="p1" position="1" type="point" />
          <operand name="p2" position="2" type="point" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>the angle between vectors P0P1 and P0P2 (P0, P1, P2 being the three point operands)</result>
        <usagesExamples>
          <usage>
            <examples>
              <example code="angle_between({5,5},{10,5},{5,10})" equals="90" isExecutable="true" isTestOnly="false" test="true" type="int" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="hemisphere" name="hemisphere" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Shape" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="radius" position="0" type="float" />
          <operand name="ratio" position="1" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>An hemisphere geometry which radius is equal to the operand.</result>
        <comment>the centre of the hemisphere is by default the location of the current agent in which has been called this operator.</comment>
        <seeAlso>
          <see id="around" />
          <see id="cone" />
          <see id="line" />
          <see id="link" />
          <see id="norm" />
          <see id="point" />
          <see id="polygon" />
          <see id="polyline" />
          <see id="rectangle" />
          <see id="square" />
          <see id="triangle" />
          <see id="hemisphere" />
          <see id="pie3D" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="hemisphere(10,0.5)" equals="a geometry as a circle of radius 10 but displays an hemisphere." isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
        </usagesExamples>
        <usagesNoExample>
          <usage descUsageElt="returns a point if the operand is lower or equal to 0." />
        </usagesNoExample>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="points_on" name="points_on" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Points-related operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="7" returnType="list" type="5">
          <operand name="geom" position="0" type="geometry" />
          <operand name="distance" position="1" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A list of points of the operand-geometry distant from each other to the float right-operand .</result>
        <seeAlso>
          <see id="closest_points_with" />
          <see id="farthest_point_to" />
          <see id="points_at" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code=" square(5) points_on(2)" equals="a list of points belonging to the exterior ring of the square distant from each other of 2." isExecutable="true" isTestOnly="false" test="false" type="list" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" alternativeNameOf="inter" id="intersection" name="intersection" projectName="msi.gama.core">
      <operatorsCategories>
        <category id="Spatial operators" />
      </operatorsCategories>
    </operator>
    <operator alphabetOrder="ak" id="inter" name="inter" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="g1" position="0" type="geometry" />
          <operand name="g2" position="1" type="geometry" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A geometry resulting from the intersection between the two geometries</result>
        <seeAlso>
          <see id="union" />
          <see id="+" />
          <see id="-" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="square(10) inter circle(5)" equals="circle(5)" isExecutable="true" isTestOnly="false" test="true" type="geometry" />
            </examples>
          </usage>
        </usagesExamples>
        <usagesNoExample>
          <usage descUsageElt="returns nil if one of the operands is nil" />
        </usagesNoExample>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="crs" name="crs" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Files-related operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="string" type="-13">
          <operand name="gisFile" position="0" type="file" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>the Coordinate Reference System (CRS) of the GIS file</result>
        <usagesExamples>
          <usage>
            <examples>
              <example code="crs(my_shapefile)" equals="the crs of the shapefile" isExecutable="false" isTestOnly="false" test="false" type="string" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="around" name="around" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="width" position="0" type="float" />
          <operand name="toBeCastedIntoGeometry" position="1" type="unknown" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A geometry resulting from the difference between a buffer around the right-operand casted in geometry at a distance left-operand (right-operand buffer left-operand) and the right-operand casted as geometry.</result>
        <seeAlso>
          <see id="circle" />
          <see id="cone" />
          <see id="line" />
          <see id="link" />
          <see id="norm" />
          <see id="point" />
          <see id="polygon" />
          <see id="polyline" />
          <see id="rectangle" />
          <see id="square" />
          <see id="triangle" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="10 around circle(5)" equals="the ring geometry between 5 and 10." isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
        </usagesExamples>
        <usagesNoExample>
          <usage descUsageElt="returns a circle geometry of radius right-operand if the left-operand is nil" />
        </usagesNoExample>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" alternativeNameOf="triangulate" id="to_triangles" name="to_triangles" projectName="msi.gama.core">
      <operatorsCategories>
        <category id="Spatial operators" />
        <category id="Spatial transformations operators" />
      </operatorsCategories>
    </operator>
    <operator alphabetOrder="lz" id="simplification" name="simplification" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Spatial transformations operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="g1" position="0" type="geometry" />
          <operand name="distanceTolerance" position="1" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A geometry corresponding to the simplification of the operand (geometry, agent, point) considering a tolerance distance.</result>
        <comment>The algorithm used for the simplification is Douglas-Peucker</comment>
        <usagesExamples>
          <usage>
            <examples>
              <example code="self simplification 0.1" equals="the geometry resulting from the application of the Douglas-Peuker algorithm on the geometry of the agent applying the operator with a tolerance distance of 0.1." isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" alternativeNameOf="simple_clustering_by_distance" id="simple_clustering_by_envelope_distance" name="simple_clustering_by_envelope_distance" projectName="msi.gama.core">
      <operatorsCategories>
        <category id="Spatial operators" />
        <category id="Spatial statistical operators" />
        <category id="Statistical operators" />
      </operatorsCategories>
    </operator>
    <operator alphabetOrder="lz" id="simple_clustering_by_distance" name="simple_clustering_by_distance" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Spatial statistical operators" />
        <category id="Statistical operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="5" returnType="list&lt;list&lt;agent&gt;&gt;" type="-13">
          <operand name="agents" position="0" type="container&lt;agent&gt;" />
          <operand name="distance" position="1" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A list of agent groups clustered by distance considering a distance min between two groups.</result>
        <seeAlso>
          <see id="hierarchical_clustering" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="[ag1, ag2, ag3, ag4, ag5] simpleClusteringByDistance 20.0" equals="for example, can return [[ag1, ag3], [ag2], [ag4, ag5]]" isExecutable="false" isTestOnly="false" test="false" type="list&lt;list&lt;agent&gt;&gt;" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="teapot" name="teapot" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Shape" />
        <category id="3D" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="size" position="0" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A teapot geometry which radius is equal to the operand.</result>
        <comment>the centre of the teapot is by default the location of the current agent in which has been called this operator.</comment>
        <seeAlso>
          <see id="around" />
          <see id="cone" />
          <see id="line" />
          <see id="link" />
          <see id="norm" />
          <see id="point" />
          <see id="polygon" />
          <see id="polyline" />
          <see id="rectangle" />
          <see id="square" />
          <see id="triangle" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="teapot(10)" equals="a geometry as a circle of radius 10 but displays a teapot." isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
        </usagesExamples>
        <usagesNoExample>
          <usage descUsageElt="returns a point if the operand is lower or equal to 0." />
        </usagesNoExample>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="neighbours_of" name="neighbours_of" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Spatial queries operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="11" returnType="list" type="-13">
          <operand name="t" position="0" type="topology" />
          <operand name="agent" position="1" type="agent" />
        </operands>
        <operands class="msi/gaml/operators/Spatial.java" contentType="11" returnType="list" type="-13">
          <operand name="t" position="0" type="topology" />
          <operand name="agent" position="1" type="geometry" />
          <operand name="distance" position="2" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result masterDoc="true">a list, containing all the agents of the same species than the argument (if it is an agent) located at a distance inferior or equal to 1 to the right-hand operand agent considering the left-hand operand topology.</result>
        <seeAlso>
          <see id="neighbours_at" />
          <see id="closest_to" />
          <see id="overlapping" />
          <see id="agents_overlapping" />
          <see id="agents_inside" />
          <see id="agent_closest_to" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="topology(self) neighbours_of self" equals="returns all the agents located at a distance lower or equal to 1 to the agent applying the operator considering its topology." isExecutable="true" isTestOnly="false" test="false" type="list" />
            </examples>
          </usage>
        </usagesExamples>
        <usages>
          <usage descUsageElt="a list, containing all the agents of the same species than the left argument (if it is an agent) located at a distance inferior or equal to the third argument to the second argument (agent, geometry or point) considering the first operand topology.">
            <examples>
              <example code="neighbours_of (topology(self), self,10)" equals="all the agents located at a distance lower or equal to 10 to the agent applying the operator considering its topology." isExecutable="true" isTestOnly="false" test="false" type="list" />
            </examples>
          </usage>
        </usages>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="add_point" name="add_point" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Points-related operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="g" position="0" type="geometry" />
          <operand name="p" position="1" type="point" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A geometry resulting from the addition of the right point (coordinate) to the left-hand geometry</result>
        <usagesExamples>
          <usage>
            <examples>
              <example code="polygon([{10,10},{10,20},{20,20}]) add_point {20,10}" equals="polygon([{10,10},{10,20},{20,20},{20,10}])" isExecutable="true" isTestOnly="false" test="true" type="geometry" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="box" name="box" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Shape" />
        <category id="3D" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="p" position="0" type="point" />
        </operands>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="x" position="0" type="float" />
          <operand name="y" position="1" type="float" />
          <operand name="z" position="2" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result masterDoc="true">A box geometry which side sizes are given by the operands.</result>
        <comment>the centre of the box is by default the location of the current agent in which has been called this operator.the centre of the box is by default the location of the current agent in which has been called this operator.</comment>
        <seeAlso>
          <see id="around" />
          <see id="circle" />
          <see id="sphere" />
          <see id="cone" />
          <see id="line" />
          <see id="link" />
          <see id="norm" />
          <see id="point" />
          <see id="polygon" />
          <see id="polyline" />
          <see id="square" />
          <see id="cube" />
          <see id="triangle" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="box({10, 5 , 5})" equals="a geometry as a rectangle with width = 10, heigh = 5 depth= 5." isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
          <usage>
            <examples>
              <example code="box(10, 5 , 5)" equals="a geometry as a rectangle with width = 10, heigh = 5 depth= 5." isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
        </usagesExamples>
        <usagesNoExample>
          <usage descUsageElt="returns nil if the operand is nil." />
          <usage descUsageElt="returns nil if the operand is nil." />
        </usagesNoExample>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" alternativeNameOf="plan" id="polyplan" name="polyplan" projectName="msi.gama.core">
      <operatorsCategories>
        <category id="Spatial operators" />
        <category id="Shape" />
      </operatorsCategories>
    </operator>
    <operator alphabetOrder="lz" id="plan" name="plan" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Shape" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="points" position="0" type="container&lt;geometry&gt;" />
          <operand name="depth" position="1" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A polyline geometry from the given list of points.</result>
        <seeAlso>
          <see id="around" />
          <see id="circle" />
          <see id="cone" />
          <see id="link" />
          <see id="norm" />
          <see id="point" />
          <see id="polygone" />
          <see id="rectangle" />
          <see id="square" />
          <see id="triangle" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="polyplan([{0,0}, {0,10}, {10,10}, {10,0}],10)" equals="a polyline geometry composed of the 4 points with a depth of 10." isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
        </usagesExamples>
        <usagesNoExample>
          <usage descUsageElt="if the operand is nil, returns the point geometry {0,0}" />
          <usage descUsageElt="if the operand is composed of a single point, returns a point geometry." />
        </usagesNoExample>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" alternativeNameOf="at_location" id="translated_to" name="translated_to" projectName="msi.gama.core">
      <operatorsCategories>
        <category id="Spatial operators" />
        <category id="Spatial transformations operators" />
      </operatorsCategories>
    </operator>
    <operator alphabetOrder="ak" id="at_location" name="at_location" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Spatial transformations operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="g" position="0" type="geometry" />
          <operand name="p" position="1" type="point" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A geometry resulting from the tran of a translation to the right-hand operand point of the left-hand operand (geometry, agent, point)</result>
        <usagesExamples>
          <usage>
            <examples>
              <example code="self at_location {10, 20}" equals="the geometry resulting from a translation to the location {10, 20} of the left-hand geometry (or agent)." isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="sphere" name="sphere" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Shape" />
        <category id="3D" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="radius" position="0" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A sphere geometry which radius is equal to the operand.</result>
        <comment>the centre of the sphere is by default the location of the current agent in which has been called this operator.</comment>
        <seeAlso>
          <see id="around" />
          <see id="cone" />
          <see id="line" />
          <see id="link" />
          <see id="norm" />
          <see id="point" />
          <see id="polygon" />
          <see id="polyline" />
          <see id="rectangle" />
          <see id="square" />
          <see id="triangle" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="sphere(10)" equals="a geometry as a circle of radius 10 but displays a sphere." isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
        </usagesExamples>
        <usagesNoExample>
          <usage descUsageElt="returns a point if the operand is lower or equal to 0." />
        </usagesNoExample>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="touches" name="touches" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Spatial properties operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="bool" type="-13">
          <operand name="g" position="0" type="geometry" />
          <operand name="g2" position="1" type="geometry" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A boolean, equal to true if the left-geometry (or agent/point) touches the right-geometry (or agent/point).</result>
        <comment>returns true when the left-operand only touches the right-operand. When one geometry covers partially (or fully) the other one, it returns false.</comment>
        <seeAlso>
          <see id="disjoint_from" />
          <see id="crosses" />
          <see id="overlaps" />
          <see id="partially_overlaps" />
          <see id="intersects" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="polyline([{10,10},{20,20}]) touches {15,15}" equals="false" isExecutable="true" isTestOnly="false" test="true" type="bool" />
              <example code="polyline([{10,10},{20,20}]) touches {10,10}" equals="true" isExecutable="true" isTestOnly="false" test="true" type="bool" />
              <example code="{15,15} touches {15,15}" equals="false" isExecutable="true" isTestOnly="false" test="true" type="bool" />
              <example code="polyline([{10,10},{20,20}]) touches polyline([{10,10},{5,5}])" equals="true" isExecutable="true" isTestOnly="false" test="true" type="bool" />
              <example code="polyline([{10,10},{20,20}]) touches polyline([{5,5},{15,15}])" equals="false" isExecutable="true" isTestOnly="false" test="true" type="bool" />
              <example code="polyline([{10,10},{20,20}]) touches polyline([{15,15},{25,25}])" equals="false" isExecutable="true" isTestOnly="false" test="true" type="bool" />
              <example code="polygon([{10,10},{10,20},{20,20},{20,10}]) touches polygon([{15,15},{15,25},{25,25},{25,15}])" equals="false" isExecutable="true" isTestOnly="false" test="true" type="bool" />
              <example code="polygon([{10,10},{10,20},{20,20},{20,10}]) touches polygon([{10,20},{20,20},{20,30},{10,30}])" equals="true" isExecutable="true" isTestOnly="false" test="true" type="bool" />
              <example code="polygon([{10,10},{10,20},{20,20},{20,10}]) touches polygon([{10,10},{0,10},{0,0},{10,0}])" equals="true" isExecutable="true" isTestOnly="false" test="true" type="bool" />
              <example code="polygon([{10,10},{10,20},{20,20},{20,10}]) touches {15,15}" equals="false" isExecutable="true" isTestOnly="false" test="true" type="bool" />
              <example code="polygon([{10,10},{10,20},{20,20},{20,10}]) touches {10,15}" equals="true" isExecutable="true" isTestOnly="false" test="true" type="bool" />
            </examples>
          </usage>
        </usagesExamples>
        <usagesNoExample>
          <usage descUsageElt="if one of the operand is null, returns false." />
        </usagesNoExample>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="line" name="line" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Shape" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="points" position="0" type="container&lt;geometry&gt;" />
        </operands>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="points" position="0" type="container&lt;geometry&gt;" />
          <operand name="radius" position="1" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A polyline geometry from the given list of points.A polyline geometry from the given list of points represented as a cylinder of radius r.</result>
        <usagesExamples>
          <usage>
            <examples>
              <example code="polyline([{0,0}, {0,10}, {10,10}, {10,0}])" equals="a polyline geometry composed of the 4 points." isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
        </usagesExamples>
        <seeAlso>
          <see id="around" />
          <see id="circle" />
          <see id="cone" />
          <see id="link" />
          <see id="norm" />
          <see id="point" />
          <see id="polygone" />
          <see id="rectangle" />
          <see id="square" />
          <see id="triangle" />
        </seeAlso>
        <usagesNoExample>
          <usage descUsageElt="if the operand is nil, returns the point geometry {0,0}" />
          <usage descUsageElt="if the operand is composed of a single point, returns a point geometry." />
          <usage descUsageElt="if the operand is nil, returns the point geometry {0,0}" />
          <usage descUsageElt="if the operand is composed of a single point, returns a point geometry." />
        </usagesNoExample>
        <usages>
          <usage descUsageElt="if a radius is added, the given list of points represented as a cylinder of radius r">
            <examples>
              <example code="polyline([{0,0}, {0,10}, {10,10}, {10,0}],0.2)" equals="a polyline geometry composed of the 4 points." isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
        </usages>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="masked_by" name="masked_by" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="source" position="0" type="geometry" />
          <operand name="obstacles" position="1" type="container&lt;geometry&gt;" />
          <operand name="precision" position="2" type="int" />
        </operands>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="source" position="0" type="geometry" />
          <operand name="obstacles" position="1" type="container&lt;geometry&gt;" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result />
        <usagesExamples>
          <usage>
            <examples>
              <example code="perception_geom masked_by obstacle_list" equals="the geometry representing the part of perception_geom visible from the agent position considering the list of obstacles obstacle_list." isExecutable="false" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
          <usage>
            <examples>
              <example code="perception_geom masked_by obstacle_list" equals="the geometry representing the part of perception_geom visible from the agent position considering the list of obstacles obstacle_list." isExecutable="false" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="transformed_by" name="transformed_by" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Spatial transformations operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="g" position="0" type="geometry" />
          <operand name="p" position="1" type="point" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A geometry resulting from the application of a rotation and a scaling (rigth-operand : point {angle(degree), scale factor} of the left-hand operand (geometry, agent, point)</result>
        <seeAlso>
          <see id="rotated_by" />
          <see id="translated_by" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="self transformed_by {45, 0.5}" equals="the geometry resulting from 45 degrees rotation and 50% scaling of the geometry of the agent applying the operator." isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="link" name="link" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Shape" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="points" position="0" type="pair" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A link between the 2 elements of the pair.</result>
        <comment>The geometry of the link is the intersection of the two geometries when they intersect, and a line between their centroids when they do not.</comment>
        <seeAlso>
          <see id="around" />
          <see id="circle" />
          <see id="cone" />
          <see id="line" />
          <see id="norm" />
          <see id="point" />
          <see id="polygon" />
          <see id="polyline" />
          <see id="rectangle" />
          <see id="square" />
          <see id="triangle" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="link (geom1::geom2)" equals="a link geometry between geom1 and geom2." isExecutable="false" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
        </usagesExamples>
        <usagesNoExample>
          <usage descUsageElt="if the operand is nil, link returns a point {0,0}" />
          <usage descUsageElt="if one of the elements of the pair is a list of geometries or a species, link will consider the union of the geometries or of the geometry of each agent of the species" />
        </usagesNoExample>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="distance_to" name="distance_to" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Spatial relations operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="float" type="-13">
          <operand name="source" position="0" type="point" />
          <operand name="target" position="1" type="point" />
        </operands>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="float" type="-13">
          <operand name="source" position="0" type="geometry" />
          <operand name="target" position="1" type="geometry" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result masterDoc="true">A distance between two geometries (geometries, agents or points) considering the topology of the agent applying the operator.</result>
        <seeAlso>
          <see id="towards" />
          <see id="direction_to" />
          <see id="distance_between" />
          <see id="direction_between" />
          <see id="path_between" />
          <see id="path_to" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="ag1 distance_to ag2" equals="the distance between ag1 and ag2 considering the topology of the agent applying the operator" isExecutable="false" isTestOnly="false" test="false" type="float" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="skeletonize" name="skeletonize" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Spatial transformations operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="13" returnType="list&lt;geometry&gt;" type="-13">
          <operand name="g" position="0" type="geometry" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A list of geometries (polylines) corresponding to the skeleton of the operand geometry (geometry, agent)</result>
        <usagesExamples>
          <usage>
            <examples>
              <example code="skeletonize(self)" equals="the list of geometries corresponding to the skeleton of the geometry of the agent applying the operator." isExecutable="true" isTestOnly="false" test="false" type="list&lt;geometry&gt;" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="inside" name="inside" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Spatial queries operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-20" returnType="list&lt;agent&gt;" type="-13">
          <operand name="list" position="0" type="msi.gama.util.IContainer&lt;?,? extends msi.gama.metamodel.shape.IShape&gt;" />
          <operand name="source" position="1" type="unknown" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A list of agents among the left-operand list, species or meta-population (addition of species), covered by the operand (casted as a geometry).</result>
        <seeAlso>
          <see id="neighbours_at" />
          <see id="neighbours_of" />
          <see id="closest_to" />
          <see id="overlapping" />
          <see id="agents_overlapping" />
          <see id="agents_inside" />
          <see id="agent_closest_to" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="[ag1, ag2, ag3] inside(self)" equals="the agents among ag1, ag2 and ag3 that are covered by the shape of the right-hand argument." isExecutable="false" isTestOnly="false" test="false" type="list&lt;agent&gt;" />
              <example code="(species1 + species2) inside (self)" equals="the agents among species species1 and species2 that are covered by the shape of the right-hand argument." isExecutable="false" isTestOnly="false" test="false" type="list&lt;agent&gt;" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="set_z" name="set_z" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="3D" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="geom" position="0" type="geometry" />
          <operand name="index" position="1" type="int" />
          <operand name="z" position="2" type="float" />
        </operands>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="geom" position="0" type="geometry" />
          <operand name="coords" position="1" type="msi.gama.util.IContainer&lt;?,java.lang.Double&gt;" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result masterDoc="true">Sets the z ordinate of the n-th point of a geometry to the value provided by the third argument</result>
        <seeAlso>
          <see id="add_z" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="loop i from: 0 to: length(shape.points) - 1{set shape &lt;-  set_z (shape, i, 3.0);}" isExecutable="true" isTestOnly="false" test="true" type="geometry" />
            </examples>
          </usage>
          <usage>
            <examples>
              <example code="shape &lt;- triangle(3) set_z [5,10,14];" isExecutable="true" isTestOnly="false" test="true" type="geometry" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="as_4_grid" name="as_4_grid" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Spatial transformations operators" />
        <category id="Grid-related operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="13" returnType="matrix" type="-13">
          <operand name="g" position="0" type="geometry" />
          <operand name="dim" position="1" type="point" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A matrix of square geometries (grid with 4-neighbourhood) with dimension given by the rigth-hand operand ({nb_cols, nb_lines}) corresponding to the square tessellation of the left-hand operand geometry (geometry, agent)</result>
        <seeAlso>
          <see id="as_grid" />
          <see id="as_hexagonal_grid" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="self as_4_grid {10, 5}" equals="the matrix of square geometries (grid with 4-neighbourhood) with 10 columns and 5 lines corresponding to the square tessellation of the geometry of the agent applying the operator." isExecutable="true" isTestOnly="false" test="false" type="matrix" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="pacman" name="pacman" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Shape" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="radius" position="0" type="float" />
          <operand name="ratio" position="1" type="float" />
        </operands>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="radius" position="0" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>An pacman geometry with a dynamic opening mouth which radius is equal to first argument.An pacman geometry which radius is equal to first argument.</result>
        <comment>the centre of the sphere is by default the location of the current agent in which has been called this operator.the centre of the sphere is by default the location of the current agent in which has been called this operator.</comment>
        <seeAlso>
          <see id="around" />
          <see id="cone" />
          <see id="line" />
          <see id="link" />
          <see id="norm" />
          <see id="point" />
          <see id="polygon" />
          <see id="polyline" />
          <see id="rectangle" />
          <see id="square" />
          <see id="triangle" />
          <see id="hemisphere" />
          <see id="pie3D" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="pacman(1,0.2)" equals="a geometry as a circle of radius 10 but displays a sphere." isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
          <usage>
            <examples>
              <example code="pacman(1)" equals="a geometry as a circle of radius 10 but displays a sphere." isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
        </usagesExamples>
        <usagesNoExample>
          <usage descUsageElt="returns a point if the operand is lower or equal to 0." />
          <usage descUsageElt="returns a point if the operand is lower or equal to 0." />
        </usagesNoExample>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="rotated_by" name="rotated_by" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Spatial transformations operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="g1" position="0" type="geometry" />
          <operand name="angle" position="1" type="int" />
        </operands>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="g1" position="0" type="geometry" />
          <operand name="rotation" position="1" type="float" />
          <operand name="vector" position="2" type="point" />
        </operands>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="g1" position="0" type="geometry" />
          <operand name="angle" position="1" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result masterDoc="true">A geometry resulting from the application of a rotation by the right-hand operand angles (degree) along the three axis (x,y,z) to the left-hand operand (geometry, agent, point)A geometry resulting from the application of a rotation by the right-hand operand angle (degree) to the left-hand operand (geometry, agent, point)</result>
        <comment>the right-hand operand can be a float or a int</comment>
        <seeAlso>
          <see id="transformed_by" />
          <see id="translated_by" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="rotated_by(45, {1,0,0})" equals="the geometry resulting from a 45 degres rotation along the {1,0,0} vector to the geometry of the agent applying the operator." isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
          <usage>
            <examples>
              <example code="self rotated_by 45" equals="the geometry resulting from a 45 degres rotation to the geometry of the agent applying the operator." isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="translated_by" name="translated_by" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Spatial transformations operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="g" position="0" type="geometry" />
          <operand name="p" position="1" type="point" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A geometry resulting from the application of a translation by the right-hand operand distance to the left-hand operand (geometry, agent, point)</result>
        <seeAlso>
          <see id="rotated_by" />
          <see id="transformed_by" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="self translated_by {10,10,10}" equals="the geometry resulting from applying the translation to the left-hand geometry (or agent)." isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="triangulate" name="triangulate" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Spatial transformations operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="13" returnType="list&lt;geometry&gt;" type="-13">
          <operand name="ls" position="0" type="list&lt;geometry&gt;" />
        </operands>
        <operands class="msi/gaml/operators/Spatial.java" contentType="13" returnType="list&lt;geometry&gt;" type="-13">
          <operand name="g" position="0" type="geometry" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result masterDoc="true">A list of geometries (triangles) corresponding to the Delaunay triangulation of the operand geometry (geometry, agent, point)</result>
        <usagesExamples>
          <usage>
            <examples>
              <example code="triangulate(self)" equals="the list of geometries (triangles) corresponding to the Delaunay triangulation of the geometry of the agent applying the operator." isExecutable="true" isTestOnly="false" test="false" type="list&lt;geometry&gt;" />
            </examples>
          </usage>
          <usage>
            <examples>
              <example code="triangulate(self)" equals="the list of geometries (triangles) corresponding to the Delaunay triangulation of the geometry of the agent applying the operator." isExecutable="true" isTestOnly="false" test="false" type="list&lt;geometry&gt;" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="cone3D" name="cone3D" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Shape" />
        <category id="3D" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="radius" position="0" type="float" />
          <operand name="height" position="1" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A cone geometry which radius is equal to the operand.</result>
        <comment>the centre of the cone is by default the location of the current agent in which has been called this operator.</comment>
        <seeAlso>
          <see id="around" />
          <see id="cone" />
          <see id="line" />
          <see id="link" />
          <see id="norm" />
          <see id="point" />
          <see id="polygon" />
          <see id="polyline" />
          <see id="rectangle" />
          <see id="square" />
          <see id="triangle" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="cone3D(10.0,10.0)" equals="a geometry as a circle of radius 10 but displays a cone." isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
        </usagesExamples>
        <usagesNoExample>
          <usage descUsageElt="returns a point if the operand is lower or equal to 0." />
        </usagesNoExample>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="rgbtriangle" name="rgbtriangle" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Shape" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="side_size" position="0" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A triangle geometry which side size is given by the operand.</result>
        <comment>the centre of the triangle is by default the location of the current agent in which has been called this operator.</comment>
        <seeAlso>
          <see id="around" />
          <see id="circle" />
          <see id="cone" />
          <see id="line" />
          <see id="link" />
          <see id="norm" />
          <see id="point" />
          <see id="polygon" />
          <see id="polyline" />
          <see id="rectangle" />
          <see id="square" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="triangle(5)" equals="a geometry as a triangle with side_size = 5." isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
        </usagesExamples>
        <usagesNoExample>
          <usage descUsageElt="returns nil if the operand is nil." />
        </usagesNoExample>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="slice" name="slice" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Shape" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="radius" position="0" type="float" />
          <operand name="ratio" position="1" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>An sphere geometry which radius is equal to the operand made of 2 hemisphere.</result>
        <comment>the centre of the sphere is by default the location of the current agent in which has been called this operator.</comment>
        <seeAlso>
          <see id="around" />
          <see id="cone" />
          <see id="line" />
          <see id="link" />
          <see id="norm" />
          <see id="point" />
          <see id="polygon" />
          <see id="polyline" />
          <see id="rectangle" />
          <see id="square" />
          <see id="triangle" />
          <see id="hemisphere" />
          <see id="pie3D" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="slice(10,0.3)" equals="a circle geometry of radius 10, displayed as a slice." isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
        </usagesExamples>
        <usagesNoExample>
          <usage descUsageElt="returns a point if the operand is lower or equal to 0." />
        </usagesNoExample>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="antislice" name="antislice" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Shape" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="radius" position="0" type="float" />
          <operand name="ratio" position="1" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A sphere geometry which radius is equal to the operand made of 2 hemispheres.</result>
        <comment>the centre of the sphere is by default the location of the current agent that is calling this operator.</comment>
        <seeAlso>
          <see id="around" />
          <see id="cone" />
          <see id="line" />
          <see id="link" />
          <see id="norm" />
          <see id="point" />
          <see id="polygon" />
          <see id="polyline" />
          <see id="rectangle" />
          <see id="square" />
          <see id="triangle" />
          <see id="hemisphere" />
          <see id="pie3D" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="antislice(10,0.3)" equals="a circle geometry of radius 10, displayed as an antislice." isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
        </usagesExamples>
        <usagesNoExample>
          <usage descUsageElt="returns a point if the operand is lower or equal to 0." />
        </usagesNoExample>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="scaled_to" name="scaled_to" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Spatial transformations operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="g" position="0" type="geometry" />
          <operand name="bounds" position="1" type="point" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>allows to restrict the size of a geometry so that it fits in the envelope {width, height, depth} defined by the second operand</result>
        <usagesExamples>
          <usage>
            <examples>
              <example code="shape scaled_to {10,10}" equals="a geometry corresponding to the geometry of the agent applying the operator scaled so that it fits a square of 10x10" isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="agents_at_distance" name="agents_at_distance" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Spatial queries operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="11" returnType="list" type="-13">
          <operand name="distance" position="0" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A list of agents situated at a distance lower than the right argument.</result>
        <seeAlso>
          <see id="neighbours_at" />
          <see id="neighbours_of" />
          <see id="agent_closest_to" />
          <see id="agents_inside" />
          <see id="closest_to" />
          <see id="inside" />
          <see id="overlapping" />
          <see id="at_distance" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="agents_at_distance(20)" equals="all the agents (excluding the caller) which distance to the caller is lower than 20" isExecutable="true" isTestOnly="false" test="false" type="list" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="distance_between" name="distance_between" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Spatial relations operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="float" type="-13">
          <operand name="t" position="0" type="topology" />
          <operand name="geometries" position="1" type="container&lt;geometry&gt;" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A distance between a list of geometries (geometries, agents, points) considering a topology.</result>
        <seeAlso>
          <see id="towards" />
          <see id="direction_to" />
          <see id="distance_to" />
          <see id="direction_between" />
          <see id="path_between" />
          <see id="path_to" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="my_topology distance_between [ag1, ag2, ag3]" equals="the distance between ag1, ag2 and ag3 considering the topology my_topology" isExecutable="false" isTestOnly="false" test="false" type="float" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="direction_between" name="direction_between" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Spatial relations operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="int" type="-13">
          <operand name="t" position="0" type="topology" />
          <operand name="geometries" position="1" type="container&lt;geometry&gt;" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A direction (in degree) between a list of two geometries (geometries, agents, points) considering a topology.</result>
        <seeAlso>
          <see id="towards" />
          <see id="direction_to" />
          <see id="distance_to" />
          <see id="distance_between" />
          <see id="path_between" />
          <see id="path_to" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="my_topology direction_between [ag1, ag2]" equals="the direction between ag1 and ag2 considering the topology my_topology" isExecutable="false" isTestOnly="false" test="false" type="int" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="points_at" name="points_at" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Points-related operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="7" returnType="list&lt;point&gt;" type="-13">
          <operand name="nbLoc" position="0" type="int" />
          <operand name="distance" position="1" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A list of left-operand number of points located at a the right-operand distance to the agent location.</result>
        <seeAlso>
          <see id="any_location_in" />
          <see id="any_point_in" />
          <see id="closest_points_with" />
          <see id="farthest_point_to" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="3 points_at(20.0)" equals="returns [pt1, pt2, pt3] with pt1, pt2 and pt3 located at a distance of 20.0 to the agent location" isExecutable="true" isTestOnly="false" test="false" type="list&lt;point&gt;" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="arc" name="arc" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Shape" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="xRadius" position="0" type="float" />
          <operand name="heading" position="1" type="float" />
          <operand name="amplitude" position="2" type="float" />
          <operand name="filled" position="3" type="bool" />
        </operands>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="xRadius" position="0" type="float" />
          <operand name="heading" position="1" type="float" />
          <operand name="amplitude" position="2" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>An arc, which radius is equal to the first operand, heading to the second, amplitude to the third and a boolean indicating whether to return a linestring or a polygon to the fourthAn arc, which radius is equal to the first operand, heading to the second and amplitude the third</result>
        <comment>the centre of the arc is by default the location of the current agent in which has been called this operator.the centre of the arc is by default the location of the current agent in which has been called this operator. This operator returns a polygon by default.</comment>
        <seeAlso>
          <see id="around" />
          <see id="cone" />
          <see id="line" />
          <see id="link" />
          <see id="norm" />
          <see id="point" />
          <see id="polygon" />
          <see id="polyline" />
          <see id="super_ellipse" />
          <see id="rectangle" />
          <see id="square" />
          <see id="circle" />
          <see id="ellipse" />
          <see id="triangle" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="arc(4,45,90, false)" equals="a geometry as an arc of radius 4, in a direction of 45Â° and an amplitude of 90Â°, which only contains the points on the arc" isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
          <usage>
            <examples>
              <example code="arc(4,45,90)" equals="a geometry as an arc of radius 4, in a direction of 45Â° and an amplitude of 90Â°" isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
        </usagesExamples>
        <usagesNoExample>
          <usage descUsageElt="returns a point if the radius operand is lower or equal to 0." />
          <usage descUsageElt="returns a point if the radius operand is lower or equal to 0." />
        </usagesNoExample>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="curve" name="curve" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Shape" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="P0" position="0" type="point" />
          <operand name="P1" position="1" type="point" />
          <operand name="P2" position="2" type="point" />
          <operand name="P3" position="3" type="point" />
          <operand name="nbPoints" position="4" type="int" />
        </operands>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="P0" position="0" type="point" />
          <operand name="P1" position="1" type="point" />
          <operand name="P2" position="2" type="point" />
        </operands>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="P0" position="0" type="point" />
          <operand name="P1" position="1" type="point" />
          <operand name="P2" position="2" type="point" />
          <operand name="P3" position="3" type="point" />
        </operands>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="P0" position="0" type="point" />
          <operand name="P1" position="1" type="point" />
          <operand name="P2" position="2" type="point" />
          <operand name="nbPoints" position="3" type="int" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A cubic Bezier curve geometry built from the four given points composed of a given number of points.A quadratic Bezier curve geometry built from the three given points composed of 10 points.A cubic Bezier curve geometry built from the four given points composed of 10 points.A quadratic Bezier curve geometry built from the three given points composed of a given numnber of points.</result>
        <seeAlso>
          <see id="around" />
          <see id="circle" />
          <see id="cone" />
          <see id="link" />
          <see id="norm" />
          <see id="point" />
          <see id="polygone" />
          <see id="rectangle" />
          <see id="square" />
          <see id="triangle" />
          <see id="line" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="curve({0,0}, {0,10}, {10,10})" equals="a cubic Bezier curve geometry composed of 10 points from p0 to p3." isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
          <usage>
            <examples>
              <example code="curve({0,0}, {0,10}, {10,10})" equals="a quadratic Bezier curve geometry composed of 10 points from p0 to p2." isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
          <usage>
            <examples>
              <example code="curve({0,0}, {0,10}, {10,10})" equals="a cubic Bezier curve geometry composed of 10 points from p0 to p3." isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
          <usage>
            <examples>
              <example code="curve({0,0}, {0,10}, {10,10}, 20)" equals="a quadratic Bezier curve geometry composed of 20 points from p0 to p2." isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
        </usagesExamples>
        <usagesNoExample>
          <usage descUsageElt="if the operand is nil, returns nil" />
          <usage descUsageElt="if the last operand (number of points) is inferior to 2, returns nil" />
          <usage descUsageElt="if the operand is nil, returns nil" />
          <usage descUsageElt="if the operand is nil, returns nil" />
          <usage descUsageElt="if the operand is nil, returns nil" />
          <usage descUsageElt="if the last operand (number of points) is inferior to 2, returns nil" />
        </usagesNoExample>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" alternativeNameOf="split_geometry" id="to_rectangles" name="to_rectangles" projectName="msi.gama.core">
      <operatorsCategories>
        <category id="Spatial operators" />
        <category id="Spatial transformations operators" />
      </operatorsCategories>
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Spatial transformations operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="13" returnType="list&lt;geometry&gt;" type="5">
          <operand name="geom" position="0" type="geometry" />
          <operand name="nbCols" position="1" type="int" />
          <operand name="nbRows" position="2" type="int" />
          <operand name="overlaps" position="3" type="bool" />
        </operands>
        <operands class="msi/gaml/operators/Spatial.java" contentType="13" returnType="list&lt;geometry&gt;" type="-13">
          <operand name="geom" position="0" type="geometry" />
          <operand name="dimension" position="1" type="point" />
          <operand name="overlaps" position="2" type="bool" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A list of rectangles corresponding to the given dimension that result from the decomposition of the geometry into rectangles (geometry, nb_cols, nb_rows, overlaps) by a grid composed of the given number of columns and rows, if overlaps = true, add the rectangles that overlap the border of the geometryA list of rectangles of the size corresponding to the given dimension that result from the decomposition of the geometry into rectangles (geometry, dimension, overlaps), if overlaps = true, add the rectangles that overlap the border of the geometry</result>
        <usagesExamples>
          <usage>
            <examples>
              <example code="to_rectangles(self, 5, 20, true)" equals="the list of rectangles corresponding to the discretisation by a grid of 5 columns and 20 rows into rectangles of the geometry of the agent applying the operator. The rectangles overlapping the border of the geometry are kept" isExecutable="true" isTestOnly="false" test="false" type="list&lt;geometry&gt;" />
            </examples>
          </usage>
          <usage>
            <examples>
              <example code="to_rectangles(self, {10.0, 15.0}, true)" equals="the list of rectangles of size {10.0, 15.0} corresponding to the discretisation into rectangles of the geometry of the agent applying the operator. The rectangles overlapping the border of the geometry are kept" isExecutable="true" isTestOnly="false" test="false" type="list&lt;geometry&gt;" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="rgbcube" name="rgbcube" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Shape" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="side_size" position="0" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A cube geometry which side size is equal to the operand.</result>
        <comment>the centre of the cube is by default the location of the current agent in which has been called this operator.</comment>
        <seeAlso>
          <see id="around" />
          <see id="circle" />
          <see id="cone" />
          <see id="line" />
          <see id="link" />
          <see id="norm" />
          <see id="point" />
          <see id="polygon" />
          <see id="polyline" />
          <see id="rectangle" />
          <see id="triangle" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="cube(10)" equals="a geometry as a square of side size 10." isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
        </usagesExamples>
        <usagesNoExample>
          <usage descUsageElt="returns nil if the operand is nil." />
        </usagesNoExample>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="CRS_transform" name="CRS_transform" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Spatial transformations operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="g" position="0" type="geometry" />
          <operand name="code" position="1" type="string" />
        </operands>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="g" position="0" type="geometry" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result />
        <usages>
          <usage descUsageElt="returns the geometry corresponding to the transfomartion of the given geometry by the left operand CRS (Coordinate Reference System)">
            <examples>
              <example code="shape CRS_transform(&quot;EPSG:4326&quot;)" equals="a geometry corresponding to the agent geometry transformed into the EPSG:4326 CRS" isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
          <usage descUsageElt="returns the geometry corresponding to the transfomartion of the given geometry by the current CRS (Coordinate Reference System), the one corresponding to the world's agent one">
            <examples>
              <example code="CRS_transform(shape)" equals="a geometry corresponding to the agent geometry transformed into the current CRS" isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
        </usages>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="pyramid" name="pyramid" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Shape" />
        <category id="3D" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="side_size" position="0" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A square geometry which side size is given by the operand.</result>
        <comment>the centre of the pyramid is by default the location of the current agent in which has been called this operator.</comment>
        <seeAlso>
          <see id="around" />
          <see id="circle" />
          <see id="cone" />
          <see id="line" />
          <see id="link" />
          <see id="norm" />
          <see id="point" />
          <see id="polygon" />
          <see id="polyline" />
          <see id="rectangle" />
          <see id="square" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="pyramid(5)" equals="a geometry as a square with side_size = 5." isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
        </usagesExamples>
        <usagesNoExample>
          <usage descUsageElt="returns nil if the operand is nil." />
        </usagesNoExample>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="intersects" name="intersects" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Spatial properties operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="bool" type="-13">
          <operand name="g1" position="0" type="geometry" />
          <operand name="g2" position="1" type="geometry" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A boolean, equal to true if the left-geometry (or agent/point) intersects the right-geometry (or agent/point).</result>
        <seeAlso>
          <see id="disjoint_from" />
          <see id="crosses" />
          <see id="overlaps" />
          <see id="partially_overlaps" />
          <see id="touches" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="square(5) intersects {10,10}" equals="false" isExecutable="true" isTestOnly="false" test="true" type="bool" />
            </examples>
          </usage>
        </usagesExamples>
        <usagesNoExample>
          <usage descUsageElt="if one of the operand is null, returns false." />
        </usagesNoExample>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="split_geometry" name="split_geometry" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Spatial transformations operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="13" returnType="list&lt;geometry&gt;" type="-13">
          <operand name="geom" position="0" type="geometry" />
          <operand name="nbCols" position="1" type="int" />
          <operand name="nbRows" position="2" type="int" />
        </operands>
        <operands class="msi/gaml/operators/Spatial.java" contentType="13" returnType="list&lt;geometry&gt;" type="-13">
          <operand name="geom" position="0" type="geometry" />
          <operand name="dimension" position="1" type="float" />
        </operands>
        <operands class="msi/gaml/operators/Spatial.java" contentType="13" returnType="list&lt;geometry&gt;" type="-13">
          <operand name="geom" position="0" type="geometry" />
          <operand name="dimension" position="1" type="point" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A list of geometries that result from the decomposition of the geometry according to a grid with the given number of rows and columns (geometry, nb_cols, nb_rows)A list of geometries that result from the decomposition of the geometry by square cells of the given side size (geometry, size)A list of geometries that result from the decomposition of the geometry by rectangle cells of the given dimension (geometry, {size_x, size_y})</result>
        <usagesExamples>
          <usage>
            <examples>
              <example code="to_rectangles(self, 10,20)" equals="the list of the geometries corresponding to the decomposition of the geometry of the agent applying the operator" isExecutable="true" isTestOnly="false" test="false" type="list&lt;geometry&gt;" />
            </examples>
          </usage>
          <usage>
            <examples>
              <example code="to_squares(self, 10.0)" equals="the list of the geometries corresponding to the decomposition of the geometry by squares of side size 10.0" isExecutable="true" isTestOnly="false" test="false" type="list&lt;geometry&gt;" />
            </examples>
          </usage>
          <usage>
            <examples>
              <example code="to_rectangles(self, {10.0, 15.0})" equals="the list of the geometries corresponding to the decomposition of the geometry by rectangles of size 10.0, 15.0" isExecutable="true" isTestOnly="false" test="false" type="list&lt;geometry&gt;" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="hexagon" name="hexagon" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Shape" />
        <category id="3D" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="size" position="0" type="point" />
        </operands>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="size" position="0" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result masterDoc="true">A hexagon geometry which the given with and height</result>
        <comment>the centre of the hexagon is by default the location of the current agent in which has been called this operator.the centre of the hexagon is by default the location of the current agent in which has been called this operator.</comment>
        <seeAlso>
          <see id="around" />
          <see id="circle" />
          <see id="cone" />
          <see id="line" />
          <see id="link" />
          <see id="norm" />
          <see id="point" />
          <see id="polygon" />
          <see id="polyline" />
          <see id="rectangle" />
          <see id="triangle" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="hexagon({10,5})" equals="a geometry as a hexagon of width of 10 and height of 5." isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
          <usage>
            <examples>
              <example code="hexagon(10)" equals="a geometry as a hexagon of width of 10 and height of 10." isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
        </usagesExamples>
        <usagesNoExample>
          <usage descUsageElt="returns nil if the operand is nil." />
          <usage descUsageElt="returns nil if the operand is nil." />
        </usagesNoExample>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="crosses" name="crosses" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Spatial properties operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="bool" type="-13">
          <operand name="g1" position="0" type="geometry" />
          <operand name="g2" position="1" type="geometry" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A boolean, equal to true if the left-geometry (or agent/point) crosses the right-geometry (or agent/point).</result>
        <seeAlso>
          <see id="disjoint_from" />
          <see id="intersects" />
          <see id="overlaps" />
          <see id="partially_overlaps" />
          <see id="touches" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="polyline([{10,10},{20,20}]) crosses polyline([{10,20},{20,10}])" equals="true" isExecutable="true" isTestOnly="false" test="true" type="bool" />
              <example code="polyline([{10,10},{20,20}]) crosses {15,15}" equals="true" isExecutable="true" isTestOnly="false" test="true" type="bool" />
              <example code="polyline([{0,0},{25,25}]) crosses polygon([{10,10},{10,20},{20,20},{20,10}])" equals="true" isExecutable="true" isTestOnly="false" test="true" type="bool" />
            </examples>
          </usage>
        </usagesExamples>
        <usagesNoExample>
          <usage descUsageElt="if one of the operand is null, returns false." />
          <usage descUsageElt="if one operand is a point, returns false." />
        </usagesNoExample>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="to_GAMA_CRS" name="to_GAMA_CRS" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Spatial transformations operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="g" position="0" type="geometry" />
          <operand name="code" position="1" type="string" />
        </operands>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="g" position="0" type="geometry" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result />
        <usages>
          <usage descUsageElt="returns the geometry corresponding to the transfomartion of the given geometry to the GAMA CRS (Coordinate Reference System) assuming the given geometry is referenced by given CRS">
            <examples>
              <example code="to_GAMA_CRS({121,14}, &quot;EPSG:4326&quot;)" equals="a geometry corresponding to the agent geometry transformed into the GAMA CRS" isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
          <usage descUsageElt="returns the geometry corresponding to the transfomartion of the given geometry to the GAMA CRS (Coordinate Reference System) assuming the given geometry is referenced by the current CRS, the one corresponding to the world's agent one">
            <examples>
              <example code="to_GAMA_CRS({121,14})" equals="a geometry corresponding to the agent geometry transformed into the GAMA CRS" isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
        </usages>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="rectangle" name="rectangle" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Shape" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="p" position="0" type="point" />
        </operands>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="x" position="0" type="float" />
          <operand name="y" position="1" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result masterDoc="true">A rectangle geometry which side sizes are given by the operands.</result>
        <comment>the centre of the rectangle is by default the location of the current agent in which has been called this operator.the centre of the rectangle is by default the location of the current agent in which has been called this operator.</comment>
        <seeAlso>
          <see id="around" />
          <see id="circle" />
          <see id="cone" />
          <see id="line" />
          <see id="link" />
          <see id="norm" />
          <see id="point" />
          <see id="polygon" />
          <see id="polyline" />
          <see id="square" />
          <see id="triangle" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="rectangle({10, 5})" equals="a geometry as a rectangle with width = 10 and heigh = 5." isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
          <usage>
            <examples>
              <example code="rectangle(10, 5)" equals="a geometry as a rectangle with width = 10 and heigh = 5." isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
        </usagesExamples>
        <usagesNoExample>
          <usage descUsageElt="returns nil if the operand is nil." />
          <usage descUsageElt="returns nil if the operand is nil." />
        </usagesNoExample>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="polygon" name="polygon" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Shape" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="points" position="0" type="msi.gama.util.IContainer&lt;?,? extends msi.gama.metamodel.shape.IShape&gt;" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A polygon geometry from the given list of points.</result>
        <seeAlso>
          <see id="around" />
          <see id="circle" />
          <see id="cone" />
          <see id="line" />
          <see id="link" />
          <see id="norm" />
          <see id="point" />
          <see id="polyline" />
          <see id="rectangle" />
          <see id="square" />
          <see id="triangle" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="polygon([{0,0}, {0,10}, {10,10}, {10,0}])" equals="a polygon geometry composed of the 4 points." isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
        </usagesExamples>
        <usagesNoExample>
          <usage descUsageElt="if the operand is nil, returns the point geometry {0,0}" />
          <usage descUsageElt="if the operand is composed of a single point, returns a point geometry" />
          <usage descUsageElt="if the operand is composed of 2 points, returns a polyline geometry." />
        </usagesNoExample>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="path_to" name="path_to" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Spatial relations operators" />
        <category id="Path-related operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="path" type="17">
          <operand name="g" position="0" type="geometry" />
          <operand name="g1" position="1" type="geometry" />
        </operands>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="path" type="17">
          <operand name="g" position="0" type="point" />
          <operand name="g1" position="1" type="point" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result masterDoc="true">A path between two geometries (geometries, agents or points) considering the topology of the agent applying the operator.</result>
        <seeAlso>
          <see id="towards" />
          <see id="direction_to" />
          <see id="distance_between" />
          <see id="direction_between" />
          <see id="path_between" />
          <see id="distance_to" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="ag1 path_to ag2" equals="the path between ag1 and ag2 considering the topology of the agent applying the operator" isExecutable="false" isTestOnly="false" test="false" type="path" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="square" name="square" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Shape" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="side_size" position="0" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A square geometry which side size is equal to the operand.</result>
        <comment>the centre of the square is by default the location of the current agent in which has been called this operator.</comment>
        <seeAlso>
          <see id="around" />
          <see id="circle" />
          <see id="cone" />
          <see id="line" />
          <see id="link" />
          <see id="norm" />
          <see id="point" />
          <see id="polygon" />
          <see id="polyline" />
          <see id="rectangle" />
          <see id="triangle" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="square(10)" equals="a geometry as a square of side size 10." isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
        </usagesExamples>
        <usagesNoExample>
          <usage descUsageElt="returns nil if the operand is nil." />
        </usagesNoExample>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="dem" name="dem" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="3D" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="demFileName" position="0" type="file" />
          <operand name="z_factor" position="1" type="float" />
        </operands>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="demFileName" position="0" type="file" />
        </operands>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="demFile" position="0" type="file" />
          <operand name="textureFile" position="1" type="file" />
          <operand name="z_factor" position="2" type="float" />
        </operands>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="demFile" position="0" type="file" />
          <operand name="textureFile" position="1" type="file" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result masterDoc="true">A polygon that is equivalent to the surface of the texture</result>
        <usagesNoExample>
          <usage descUsageElt="a point if the operand is lower or equal to 0." />
        </usagesNoExample>
        <usagesExamples>
          <usage>
            <examples>
              <example code="dem(dem,z_factor)" equals="a geometry as a rectangle of weight and height equal to the texture." isExecutable="false" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
          <usage>
            <examples>
              <example code="dem(dem)" equals="returns a geometry as a rectangle of weight and height equal to the texture." isExecutable="false" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
          <usage>
            <examples>
              <example code="dem(dem,texture,z_factor)" equals="a geometry as a rectangle of weight and height equal to the texture." isExecutable="false" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
          <usage>
            <examples>
              <example code="dem(dem,texture)" equals="a geometry as a rectangle of weight and height equal to the texture." isExecutable="false" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="cone" name="cone" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Shape" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="p" position="0" type="point" />
        </operands>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="p1" position="0" type="int" />
          <operand name="p2" position="1" type="int" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A cone geometry which min and max angles are given by the operands.A cone geometry which min and max angles are given by the operands.</result>
        <comment>the centre of the cone is by default the location of the current agent in which has been called this operator.the centre of the cone is by default the location of the current agent in which has been called this operator.</comment>
        <seeAlso>
          <see id="around" />
          <see id="circle" />
          <see id="line" />
          <see id="link" />
          <see id="norm" />
          <see id="point" />
          <see id="polygon" />
          <see id="polyline" />
          <see id="rectangle" />
          <see id="square" />
          <see id="triangle" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="cone({0, 45})" equals="a geometry as a cone with min angle is 0 and max angle is 45." isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
          <usage>
            <examples>
              <example code="cone(0, 45)" equals="a geometry as a cone with min angle is 0 and max angle is 45." isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
        </usagesExamples>
        <usagesNoExample>
          <usage descUsageElt="returns nil if the operand is nil." />
          <usage descUsageElt="returns nil if the operand is nil." />
        </usagesNoExample>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="cube" name="cube" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Shape" />
        <category id="3D" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="side_size" position="0" type="float" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A cube geometry which side size is equal to the operand.</result>
        <comment>the centre of the cube is by default the location of the current agent in which has been called this operator.</comment>
        <seeAlso>
          <see id="around" />
          <see id="circle" />
          <see id="cone" />
          <see id="line" />
          <see id="link" />
          <see id="norm" />
          <see id="point" />
          <see id="polygon" />
          <see id="polyline" />
          <see id="rectangle" />
          <see id="triangle" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="cube(10)" equals="a geometry as a square of side size 10." isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
        </usagesExamples>
        <usagesNoExample>
          <usage descUsageElt="returns nil if the operand is nil." />
        </usagesNoExample>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="agents_overlapping" name="agents_overlapping" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Spatial queries operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="11" returnType="list&lt;agent&gt;" type="-13">
          <operand name="source" position="0" type="unknown" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A list of agents overlapping the operand (casted as a geometry).</result>
        <seeAlso>
          <see id="neighbours_at" />
          <see id="neighbours_of" />
          <see id="agent_closest_to" />
          <see id="agents_inside" />
          <see id="closest_to" />
          <see id="inside" />
          <see id="overlapping" />
          <see id="at_distance" />
        </seeAlso>
        <usagesExamples>
          <usage>
            <examples>
              <example code="agents_overlapping(self)" equals="the agents that overlap the shape of the agent applying the operator." isExecutable="true" isTestOnly="false" test="false" type="list&lt;agent&gt;" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="lz" id="to_squares" name="to_squares" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Spatial transformations operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="13" returnType="list&lt;geometry&gt;" type="5">
          <operand name="geom" position="0" type="geometry" />
          <operand name="dimension" position="1" type="float" />
          <operand name="overlaps" position="2" type="bool" />
        </operands>
        <operands class="msi/gaml/operators/Spatial.java" contentType="13" returnType="list&lt;geometry&gt;" type="5">
          <operand name="geom" position="0" type="geometry" />
          <operand name="nbSquares" position="1" type="int" />
          <operand name="overlaps" position="2" type="bool" />
          <operand name="precision" position="3" type="float" />
        </operands>
        <operands class="msi/gaml/operators/Spatial.java" contentType="13" returnType="list&lt;geometry&gt;" type="5">
          <operand name="geom" position="0" type="geometry" />
          <operand name="nbSquares" position="1" type="int" />
          <operand name="overlaps" position="2" type="bool" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A list of squares of the size corresponding to the given size that result from the decomposition of the geometry into squares (geometry, size, overlaps), if overlaps = true, add the squares that overlap the border of the geometryA list of a given number of squares from the decomposition of the geometry into squares (geometry, nb_square, overlaps, precision_coefficient), if overlaps = true, add the squares that overlap the border of the geometry, coefficient_precision should be close to 1.0A list of a given number of squares from the decomposition of the geometry into squares (geometry, nb_square, overlaps), if overlaps = true, add the squares that overlap the border of the geometry</result>
        <usagesExamples>
          <usage>
            <examples>
              <example code="to_squares(self, 10.0, true)" equals="the list of squares of side size 10.0 corresponding to the discretisation into squares of the geometry of the agent applying the operator. The squares overlapping the border of the geometry are kept" isExecutable="true" isTestOnly="false" test="false" type="list&lt;geometry&gt;" />
            </examples>
          </usage>
          <usage>
            <examples>
              <example code="to_squares(self, 10, true, 0.99)" equals="the list of 10 squares corresponding to the discretisation into squares of the geometry of the agent applying the operator. The squares overlapping the border of the geometry are kept" isExecutable="true" isTestOnly="false" test="false" type="list&lt;geometry&gt;" />
            </examples>
          </usage>
          <usage>
            <examples>
              <example code="to_squares(self, 10, true)" equals="the list of 10 squares corresponding to the discretisation into squares of the geometry of the agent applying the operator. The squares overlapping the border of the geometry are kept" isExecutable="true" isTestOnly="false" test="false" type="list&lt;geometry&gt;" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
    <operator alphabetOrder="ak" id="convex_hull" name="convex_hull" projectName="msi.gama.core">
      <operatorCategories>
        <category id="Spatial operators" />
        <category id="Spatial transformations operators" />
      </operatorCategories>
      <combinaisonIO>
        <operands class="msi/gaml/operators/Spatial.java" contentType="-13" returnType="geometry" type="-13">
          <operand name="g" position="0" type="geometry" />
        </operands>
      </combinaisonIO>
      <documentation>
        <result>A geometry corresponding to the convex hull of the operand.</result>
        <usagesExamples>
          <usage>
            <examples>
              <example code="convex_hull(self)" equals="the convex hull of the geometry of the agent applying the operator" isExecutable="true" isTestOnly="false" test="false" type="geometry" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
    </operator>
  </operators>
  <skills>
    <skill class="msi.gaml.extensions.humanmoving.HumanMovingSkill" extends="msi.gaml.skills.MovingSkill" id="humanmoving" name="humanmoving" projectName="msi.gaml.extensions.humanmoving">
      <actions>
        <action name="wanderAbove" returnType="point">
          <args>
            <arg name="speed" optional="true" type="float">
              <documentation>
                <result>the speed to use for this move (replaces the current value of speed)</result>
              </documentation>
            </arg>
            <arg name="agent_size" optional="true" type="int">
              <documentation>
                <result>specifiaction of size of the agent</result>
              </documentation>
            </arg>
          </args>
        </action>
        <action name="wanderAndAvoid" returnType="point">
          <args>
            <arg name="speed" optional="true" type="float">
              <documentation>
                <result>the speed to use for this move (replaces the current value of speed)</result>
              </documentation>
            </arg>
            <arg name="agent_size" optional="true" type="int">
              <documentation>
                <result>specifiaction of size of the agent</result>
              </documentation>
            </arg>
            <arg name="background" optional="true" type="" />
            <arg name="ignore_type" optional="true" type="" />
          </args>
        </action>
        <action name="blindWander" returnType="point">
          <args>
            <arg name="speed" optional="true" type="float">
              <documentation>
                <result>the speed to use for this move (replaces the current value of speed)</result>
              </documentation>
            </arg>
            <arg name="agent_size" optional="true" type="int">
              <documentation>
                <result>specifiaction of size of the agent</result>
              </documentation>
            </arg>
            <arg name="background" optional="true" type="agent" />
            <arg name="target" optional="true" type="agent" />
          </args>
        </action>
        <action name="blindWander2" returnType="point">
          <args>
            <arg name="speed" optional="true" type="float">
              <documentation>
                <result>the speed to use for this move (replaces the current value of speed)</result>
              </documentation>
            </arg>
            <arg name="agent_size" optional="true" type="int">
              <documentation>
                <result>specifiaction of size of the agent</result>
              </documentation>
            </arg>
            <arg name="background" optional="true" type="agent" />
            <arg name="target" optional="true" type="agent" />
          </args>
        </action>
        <action name="blindStraightWander" returnType="point">
          <args>
            <arg name="speed" optional="true" type="float">
              <documentation>
                <result>the speed to use for this move (replaces the current value of speed)</result>
              </documentation>
            </arg>
            <arg name="agent_size" optional="true" type="int">
              <documentation>
                <result>specifiaction of size of the agent</result>
              </documentation>
            </arg>
            <arg name="background" optional="true" type="agent" />
            <arg name="direction" optional="true" type="int" />
            <arg name="target" optional="true" type="agent" />
          </args>
        </action>
        <action name="blindStraightWander2" returnType="point">
          <args>
            <arg name="speed" optional="true" type="float">
              <documentation>
                <result>the speed to use for this move (replaces the current value of speed)</result>
              </documentation>
            </arg>
            <arg name="agent_size" optional="true" type="int">
              <documentation>
                <result>specifiaction of size of the agent</result>
              </documentation>
            </arg>
            <arg name="background" optional="true" type="agent" />
            <arg name="direction" optional="true" type="int" />
            <arg name="target" optional="true" type="agent" />
          </args>
        </action>
        <action name="approach" returnType="point">
          <args>
            <arg name="speed" optional="true" type="float">
              <documentation>
                <result>the speed to use for this move (replaces the current value of speed)</result>
              </documentation>
            </arg>
            <arg name="agent_size" optional="true" type="int">
              <documentation>
                <result>specifiaction of size of the agent</result>
              </documentation>
            </arg>
            <arg name="background" optional="true" type="agent" />
            <arg name="target" optional="true" type="agent" />
          </args>
        </action>
        <action name="approachAvoidPassedPosition" returnType="point">
          <args>
            <arg name="speed" optional="true" type="float">
              <documentation>
                <result>the speed to use for this move (replaces the current value of speed)</result>
              </documentation>
            </arg>
            <arg name="agent_size" optional="true" type="int">
              <documentation>
                <result>specifiaction of size of the agent</result>
              </documentation>
            </arg>
            <arg name="background" optional="true" type="agent" />
            <arg name="target" optional="true" type="agent" />
            <arg name="passedList" optional="true" type="list" />
          </args>
        </action>
        <action name="approachAvoidPassedPosition2" returnType="point">
          <args>
            <arg name="speed" optional="true" type="float">
              <documentation>
                <result>the speed to use for this move (replaces the current value of speed)</result>
              </documentation>
            </arg>
            <arg name="agent_size" optional="true" type="int">
              <documentation>
                <result>specifiaction of size of the agent</result>
              </documentation>
            </arg>
            <arg name="background" optional="true" type="agent" />
            <arg name="target" optional="true" type="agent" />
            <arg name="passedList" optional="true" type="list" />
          </args>
        </action>
        <action name="blindWallTracking" returnType="point">
          <args>
            <arg name="speed" optional="true" type="float">
              <documentation>
                <result>the speed to use for this move (replaces the current value of speed)</result>
              </documentation>
            </arg>
            <arg name="agent_size" optional="true" type="int">
              <documentation>
                <result>specifiaction of size of the agent</result>
              </documentation>
            </arg>
            <arg name="background" optional="true" type="agent" />
            <arg name="passedList" optional="true" type="list" />
            <arg name="target" optional="true" type="agent" />
          </args>
        </action>
        <action name="blindWallTracking2" returnType="point">
          <args>
            <arg name="speed" optional="true" type="float">
              <documentation>
                <result>the speed to use for this move (replaces the current value of speed)</result>
              </documentation>
            </arg>
            <arg name="agent_size" optional="true" type="int">
              <documentation>
                <result>specifiaction of size of the agent</result>
              </documentation>
            </arg>
            <arg name="background" optional="true" type="agent" />
            <arg name="passedList" optional="true" type="list" />
            <arg name="target" optional="true" type="agent" />
          </args>
        </action>
      </actions>
    </skill>
    <skill class="ummisco.gama.communicator.skills.Communication" extends="ummisco.gama.communicator.common.ConnectionManager" id="network" name="network" projectName="ummisco.gama.communicator">
      <vars>
        <var constant="false" depends_on="" name="netAgtName" type="string">
          <documentation>
            <result>Net ID of the agent</result>
          </documentation>
        </var>
      </vars>
      <actions>
        <action name="connectMessenger" returnType="void">
          <args>
            <arg name="to" optional="false" type="string">
              <documentation>
                <result>server URL</result>
              </documentation>
            </arg>
            <arg name="at" optional="false" type="string">
              <documentation>
                <result>server URL</result>
              </documentation>
            </arg>
            <arg name="withName" optional="false" type="string">
              <documentation>
                <result>agent Name</result>
              </documentation>
            </arg>
          </args>
          <documentation>
            <result>moves the agent towards the target passed in the arguments.</result>
            <usagesExamples>
              <usage>
                <examples>
                  <example code="do action: goto{&#xA; arg target value: one_of (list (species (self))); &#xA; arg speed value: speed * 2; &#xA; arg on value: road_network;}" isExecutable="true" isTestOnly="false" test="true" />
                </examples>
              </usage>
            </usagesExamples>
          </documentation>
        </action>
        <action name="emptyMessageBox" returnType="bool">
          <args />
          <documentation>
            <result>moves the agent towards the target passed in the arguments.</result>
            <usagesExamples>
              <usage>
                <examples>
                  <example code="do action: goto{&#xA; arg target value: one_of (list (species (self))); &#xA; arg speed value: speed * 2; &#xA; arg on value: road_network;}" isExecutable="true" isTestOnly="false" test="true" />
                </examples>
              </usage>
            </usagesExamples>
          </documentation>
        </action>
        <action name="fetchMessage" returnType="map&lt;string,unknown&gt;">
          <args />
          <documentation>
            <result>moves the agent towards the target passed in the arguments.</result>
            <usagesExamples>
              <usage>
                <examples>
                  <example code="do action: goto{&#xA; arg target value: one_of (list (species (self))); &#xA; arg speed value: speed * 2; &#xA; arg on value: road_network;}" isExecutable="true" isTestOnly="false" test="true" />
                </examples>
              </usage>
            </usagesExamples>
          </documentation>
        </action>
        <action name="sendMessage" returnType="void">
          <args>
            <arg name="dest" optional="true" type="string">
              <documentation>
                <result>The network ID of the agent who receive the message</result>
              </documentation>
            </arg>
            <arg name="content" optional="true" type="any type">
              <documentation>
                <result>The content of the message</result>
              </documentation>
            </arg>
          </args>
          <documentation>
            <result>Send a message to a destination.</result>
            <usagesExamples>
              <usage>
                <examples>
                  <example code="do action: goto{&#xA; arg target value: one_of (list (species (self))); &#xA; arg speed value: speed * 2; &#xA; arg on value: road_network;}" isExecutable="true" isTestOnly="false" test="true" />
                </examples>
              </usage>
            </usagesExamples>
          </documentation>
        </action>
      </actions>
    </skill>
    <skill class="ummisco.miro.extension.moving.TrafficMovingSkill" extends="msi.gaml.skills.MovingSkill" id="trafficMoving" name="trafficMoving" projectName="ummisco.miro.extension.traffic">
      <actions>
        <action name="theorical_duration" returnType="java.lang.Float">
          <args>
            <arg name="from" optional="false" type="point,geometry,agent">
              <documentation>
                <result>the location or entity towards which to move.</result>
              </documentation>
            </arg>
            <arg name="to" optional="false" type="point,geometry,agent">
              <documentation>
                <result>the location or entity towards which to move.</result>
              </documentation>
            </arg>
            <arg name="on" optional="true" type="list,agent,graph,geometry">
              <documentation>
                <result>list, agent, graph, geometry that restrains this move (the agent moves inside this geometry)</result>
              </documentation>
            </arg>
            <arg name="max_speed" optional="true" type="float">
              <documentation>
                <result>speedMoving</result>
              </documentation>
            </arg>
          </args>
          <documentation>
            <result>moves the agent towards the target passed in the arguments while considering the other agents in the network (only for graph topology)</result>
            <usagesExamples>
              <usage>
                <examples>
                  <example code="do gotoTraffic target: one_of (list (species (self))) speed: speed * 2 on: road_network living_space: 2.0;" isExecutable="true" isTestOnly="false" test="true" />
                </examples>
              </usage>
            </usagesExamples>
          </documentation>
        </action>
        <action name="goto_traffic" returnType="void">
          <args>
            <arg name="target" optional="false" type="point,geometry,agent">
              <documentation>
                <result>the location or entity towards which to move.</result>
              </documentation>
            </arg>
            <arg name="speed" optional="true" type="float">
              <documentation>
                <result>the speed to use for this move (replaces the current value of speed)</result>
              </documentation>
            </arg>
            <arg name="on" optional="true" type="list,agent,graph,geometry">
              <documentation>
                <result>list, agent, graph, geometry that restrains this move (the agent moves inside this geometry)</result>
              </documentation>
            </arg>
            <arg name="duration" optional="true" type="float">
              <documentation>
                <result>duration of the moving</result>
              </documentation>
            </arg>
            <arg name="max_speed" optional="true" type="float">
              <documentation>
                <result>speedMoving</result>
              </documentation>
            </arg>
            <arg name="return_path" optional="true" type="boolean">
              <documentation>
                <result>if true, return the path followed (by default: false)</result>
              </documentation>
            </arg>
          </args>
          <documentation>
            <result>moves the agent towards the target passed in the arguments while considering the other agents in the network (only for graph topology)</result>
            <usagesExamples>
              <usage>
                <examples>
                  <example code="do gotoTraffic target: one_of (list (species (self))) speed: speed * 2 on: road_network living_space: 2.0;" isExecutable="true" isTestOnly="false" test="true" />
                </examples>
              </usage>
            </usagesExamples>
          </documentation>
        </action>
      </actions>
    </skill>
    <skill class="ummisco.miro.extension.transportation.skill.TransportationSkill" extends="" id="busTransportation" name="busTransportation" projectName="ummisco.miro.extension">
      <vars>
        <var constant="false" depends_on="" name="filePath" type="string" />
        <var constant="false" depends_on="" name="isTemporalGraph" type="boolean" />
        <var constant="false" depends_on="" name="individualGraph" type="graph" />
        <var constant="false" depends_on="" name="stationID" type="string">
          <documentation>
            <result>DB identificator of the station</result>
          </documentation>
        </var>
      </vars>
      <actions>
        <action name="travel_arrival" returnType="map">
          <args>
            <arg name="from" optional="false" type="string">
              <documentation>
                <result>departure station ID</result>
              </documentation>
            </arg>
            <arg name="to" optional="false" type="string">
              <documentation>
                <result>arrival Station ID</result>
              </documentation>
            </arg>
            <arg name="on" optional="true" type="list,agent,graph,geometry">
              <documentation>
                <result>list, agent, graph, geometry that restrains this move (the agent moves inside this geometry)</result>
              </documentation>
            </arg>
            <arg name="departureDate" optional="false" type="int">
              <documentation>
                <result>date of the departure</result>
              </documentation>
            </arg>
          </args>
          <documentation>
            <result>moves the agent towards the target passed in the arguments.</result>
            <usagesExamples>
              <usage>
                <examples>
                  <example code="do action: goto{&#xA; arg target value: one_of (list (species (self))); &#xA; arg speed value: speed * 2; &#xA; arg on value: road_network;}" isExecutable="true" isTestOnly="false" test="true" />
                </examples>
              </usage>
            </usagesExamples>
          </documentation>
        </action>
        <action name="loadFile" returnType="void">
          <args>
            <arg name="source" optional="false" type="string">
              <documentation>
                <result>Path of the source file</result>
              </documentation>
            </arg>
            <arg name="datatype" optional="true" type="string">
              <documentation>
                <result>determine file datatype: OD -&gt; it is an Origin Destination Matrix; busline -&gt; official timetable of the transportation service</result>
              </documentation>
            </arg>
          </args>
          <documentation>
            <result>moves the agent towards the target passed in the arguments.</result>
            <usagesExamples>
              <usage>
                <examples>
                  <example code="do action: goto{&#xA; arg target value: one_of (list (species (self))); &#xA; arg speed value: speed * 2; &#xA; arg on value: road_network;}" isExecutable="true" isTestOnly="false" test="true" />
                </examples>
              </usage>
            </usagesExamples>
          </documentation>
        </action>
        <action name="loadVehicleGraph" returnType="unknown">
          <args>
            <arg name="source" optional="true" type="graph" />
          </args>
        </action>
      </actions>
    </skill>
    <skill class="ummisco.miro.extension.moving.TrafficMovingSkill" extends="msi.gaml.skills.MovingSkill" id="trafficMoving" name="trafficMoving" projectName="ummisco.miro.extension">
      <actions>
        <action name="theorical_duration" returnType="java.lang.Float">
          <args>
            <arg name="from" optional="false" type="point,geometry,agent">
              <documentation>
                <result>the location or entity towards which to move.</result>
              </documentation>
            </arg>
            <arg name="to" optional="false" type="point,geometry,agent">
              <documentation>
                <result>the location or entity towards which to move.</result>
              </documentation>
            </arg>
            <arg name="on" optional="true" type="list,agent,graph,geometry">
              <documentation>
                <result>list, agent, graph, geometry that restrains this move (the agent moves inside this geometry)</result>
              </documentation>
            </arg>
            <arg name="max_speed" optional="true" type="float">
              <documentation>
                <result>speedMoving</result>
              </documentation>
            </arg>
          </args>
          <documentation>
            <result>moves the agent towards the target passed in the arguments while considering the other agents in the network (only for graph topology)</result>
            <usagesExamples>
              <usage>
                <examples>
                  <example code="do gotoTraffic target: one_of (list (species (self))) speed: speed * 2 on: road_network living_space: 2.0;" isExecutable="true" isTestOnly="false" test="true" />
                </examples>
              </usage>
            </usagesExamples>
          </documentation>
        </action>
        <action name="goto_traffic" returnType="void">
          <args>
            <arg name="target" optional="false" type="point,geometry,agent">
              <documentation>
                <result>the location or entity towards which to move.</result>
              </documentation>
            </arg>
            <arg name="speed" optional="true" type="float">
              <documentation>
                <result>the speed to use for this move (replaces the current value of speed)</result>
              </documentation>
            </arg>
            <arg name="on" optional="true" type="list,agent,graph,geometry">
              <documentation>
                <result>list, agent, graph, geometry that restrains this move (the agent moves inside this geometry)</result>
              </documentation>
            </arg>
            <arg name="duration" optional="true" type="float">
              <documentation>
                <result>duration of the moving</result>
              </documentation>
            </arg>
            <arg name="max_speed" optional="true" type="float">
              <documentation>
                <result>speedMoving</result>
              </documentation>
            </arg>
            <arg name="return_path" optional="true" type="boolean">
              <documentation>
                <result>if true, return the path followed (by default: false)</result>
              </documentation>
            </arg>
          </args>
          <documentation>
            <result>moves the agent towards the target passed in the arguments while considering the other agents in the network (only for graph topology)</result>
            <usagesExamples>
              <usage>
                <examples>
                  <example code="do gotoTraffic target: one_of (list (species (self))) speed: speed * 2 on: road_network living_space: 2.0;" isExecutable="true" isTestOnly="false" test="true" />
                </examples>
              </usage>
            </usagesExamples>
          </documentation>
        </action>
      </actions>
    </skill>
    <skill class="dream.gama.opengis.operators.SocketSkill" extends="" id="socket" name="socket" projectName="dream.gama.opengis">
      <documentation>
        <result>k</result>
      </documentation>
      <vars>
        <var constant="false" depends_on="" name="msg" type="string" />
        <var constant="false" depends_on="" name="port" type="int">
          <documentation>
            <result>t)</result>
          </documentation>
        </var>
        <var constant="false" depends_on="" name="ip" type="string">
          <documentation>
            <result>cs</result>
          </documentation>
        </var>
      </vars>
      <actions>
        <action name="listen_client" returnType="void">
          <args />
          <documentation>
            <result>.</result>
            <usagesExamples>
              <usage>
                <examples>
                  <example code="d;" isExecutable="true" isTestOnly="false" test="true" />
                </examples>
              </usage>
            </usagesExamples>
          </documentation>
        </action>
        <action name="listen_server" returnType="void">
          <args />
          <documentation>
            <result>.</result>
            <usagesExamples>
              <usage>
                <examples>
                  <example code="d;" isExecutable="true" isTestOnly="false" test="true" />
                </examples>
              </usage>
            </usagesExamples>
          </documentation>
        </action>
        <action name="open_socket" returnType="void">
          <args />
          <documentation>
            <result>.</result>
            <usagesExamples>
              <usage>
                <examples>
                  <example code="d;" isExecutable="true" isTestOnly="false" test="true" />
                </examples>
              </usage>
            </usagesExamples>
          </documentation>
        </action>
        <action name="send_to_client" returnType="void">
          <args>
            <arg name="msg" optional="false" type="string">
              <documentation>
                <result>td)</result>
              </documentation>
            </arg>
          </args>
          <documentation>
            <result>M.</result>
            <usagesExamples>
              <usage>
                <examples>
                  <example code="tA;" isExecutable="true" isTestOnly="false" test="true" />
                </examples>
              </usage>
            </usagesExamples>
          </documentation>
        </action>
        <action name="send_to_server" returnType="void">
          <args>
            <arg name="msg" optional="false" type="string">
              <documentation>
                <result>td)</result>
              </documentation>
            </arg>
          </args>
          <documentation>
            <result>M.</result>
            <usagesExamples>
              <usage>
                <examples>
                  <example code="tA;" isExecutable="true" isTestOnly="false" test="true" />
                </examples>
              </usage>
            </usagesExamples>
          </documentation>
        </action>
      </actions>
    </skill>
    <skill class="simtools.gaml.extensions.traffic.AdvancedDrivingSkill" extends="msi.gaml.skills.MovingSkill" id="advanced_driving" name="advanced_driving" projectName="simtools.gaml.extensions.traffic">
      <vars>
        <var constant="false" depends_on="" name="speed" type="float">
          <documentation>
            <result>the speed of the agent (in meter/second)</result>
          </documentation>
        </var>
        <var constant="false" depends_on="" name="current_path" type="path">
          <documentation>
            <result>the current path that tha agent follow</result>
          </documentation>
        </var>
        <var constant="false" depends_on="" name="final_target" type="point">
          <documentation>
            <result>the final target of the agent</result>
          </documentation>
        </var>
        <var constant="false" depends_on="" name="current_target" type="point">
          <documentation>
            <result>the current target of the agent</result>
          </documentation>
        </var>
        <var constant="false" depends_on="" name="current_index" type="int">
          <documentation>
            <result>the current index of the agent target (according to the targets list)</result>
          </documentation>
        </var>
        <var constant="false" depends_on="" name="targets" type="list">
          <documentation>
            <result>the current list of points that the agent has to reach (path)</result>
          </documentation>
        </var>
        <var constant="false" depends_on="" name="security_distance_coeff" type="float">
          <documentation>
            <result>the coefficient for the computation of the the min distance between two drivers (according to the vehicle speed - security_distance = 1#m + security_distance_coeff `*` real_speed )</result>
          </documentation>
        </var>
        <var constant="false" depends_on="" name="real_speed" type="float">
          <documentation>
            <result>real speed of the agent (in meter/second)</result>
          </documentation>
        </var>
        <var constant="false" depends_on="" name="current_lane" type="int">
          <documentation>
            <result>the current lane on which the agent is</result>
          </documentation>
        </var>
        <var constant="false" depends_on="" name="vehicle_length" type="float">
          <documentation>
            <result>the length of the vehicle (in meters)</result>
          </documentation>
        </var>
        <var constant="false" depends_on="" name="speed_coeff" type="float">
          <documentation>
            <result>speed coefficient for the speed that the driver want to reach (according to the max speed of the road)</result>
          </documentation>
        </var>
        <var constant="false" depends_on="" name="max_acceleration" type="float">
          <documentation>
            <result>maximum acceleration of the car for a cycle</result>
          </documentation>
        </var>
        <var constant="false" depends_on="" name="current_road" type="agent">
          <documentation>
            <result>current road on which the agent is</result>
          </documentation>
        </var>
        <var constant="false" depends_on="" name="on_linked_road" type="boolean">
          <documentation>
            <result>is the agent on the linked road?</result>
          </documentation>
        </var>
        <var constant="false" depends_on="" name="proba_lane_change_up" type="float">
          <documentation>
            <result>probability to change lane to a upper lane (left lane if right side driving) if necessary</result>
          </documentation>
        </var>
        <var constant="false" depends_on="" name="proba_lane_change_down" type="float">
          <documentation>
            <result>probability to change lane to a lower lane (right lane if right side driving) if necessary</result>
          </documentation>
        </var>
        <var constant="false" depends_on="" name="proba_respect_priorities" type="float">
          <documentation>
            <result>probability to respect priority (right or left) laws</result>
          </documentation>
        </var>
        <var constant="false" depends_on="" name="proba_respect_stops" type="list">
          <documentation>
            <result>probability to respect stop laws - one value for each type of stop</result>
          </documentation>
        </var>
        <var constant="false" depends_on="" name="proba_block_node" type="float">
          <documentation>
            <result>probability to block a node (do not let other driver cross the crossroad)</result>
          </documentation>
        </var>
        <var constant="false" depends_on="" name="proba_use_linked_road" type="float">
          <documentation>
            <result>probability to change lane to a linked road lane if necessary</result>
          </documentation>
        </var>
        <var constant="false" depends_on="" name="right_side_driving" type="boolean">
          <documentation>
            <result>are drivers driving on the right size of the road?</result>
          </documentation>
        </var>
        <var constant="false" depends_on="" name="max_speed" type="float">
          <documentation>
            <result>maximal speed of the vehicle</result>
          </documentation>
        </var>
        <var constant="false" depends_on="" name="distance_to_goal" type="float">
          <documentation>
            <result>euclidean distance to the next point of the current segment</result>
          </documentation>
        </var>
        <var constant="false" depends_on="" name="segment_index_on_road" type="int">
          <documentation>
            <result>current segment index of the agent on the current road</result>
          </documentation>
        </var>
      </vars>
      <actions>
        <action name="advanced_follow_driving" returnType="float">
          <args>
            <arg name="path" optional="false" type="path">
              <documentation>
                <result>a path to be followed.</result>
              </documentation>
            </arg>
            <arg name="target" optional="true" type="point">
              <documentation>
                <result>the target to reach</result>
              </documentation>
            </arg>
            <arg name="speed" optional="true" type="float">
              <documentation>
                <result>the speed to use for this move (replaces the current value of speed)</result>
              </documentation>
            </arg>
            <arg name="time" optional="true" type="float">
              <documentation>
                <result>time to travel</result>
              </documentation>
            </arg>
          </args>
          <documentation>
            <result>moves the agent towards along the path passed in the arguments while considering the other agents in the network (only for graph topology)</result>
            <usagesExamples>
              <usage>
                <examples>
                  <example code="do osm_follow path: the_path on: road_network;" isExecutable="true" isTestOnly="false" test="true" />
                </examples>
              </usage>
            </usagesExamples>
          </documentation>
        </action>
        <action name="compute_path" returnType="path">
          <args>
            <arg name="graph" optional="false" type="graph">
              <documentation>
                <result>the graph on wich compute the path</result>
              </documentation>
            </arg>
            <arg name="target" optional="false" type="agent">
              <documentation>
                <result>the target node to reach</result>
              </documentation>
            </arg>
            <arg name="source" optional="true" type="agent">
              <documentation>
                <result>the source node (optional, if not defined, closest node to the agent location)</result>
              </documentation>
            </arg>
          </args>
          <documentation>
            <result>action to compute a path to a target location according to a given graph</result>
            <usagesExamples>
              <usage>
                <examples>
                  <example code="do compute_path graph: road_network target: the_node;" isExecutable="true" isTestOnly="false" test="true" />
                </examples>
              </usage>
            </usagesExamples>
          </documentation>
        </action>
        <action name="path_from_nodes" returnType="path">
          <args>
            <arg name="graph" optional="false" type="graph">
              <documentation>
                <result>the graph on wich compute the path</result>
              </documentation>
            </arg>
            <arg name="nodes" optional="false" type="list">
              <documentation>
                <result>the list of nodes composing the path</result>
              </documentation>
            </arg>
          </args>
          <documentation>
            <result>action to compute a path from a list of nodes according to a given graph</result>
            <usagesExamples>
              <usage>
                <examples>
                  <example code="do compute_path graph: road_network nodes: [node1, node5, node10];" isExecutable="true" isTestOnly="false" test="true" />
                </examples>
              </usage>
            </usagesExamples>
          </documentation>
        </action>
        <action name="drive" returnType="void">
          <args />
          <documentation>
            <result>action to drive toward the final target</result>
            <usagesExamples>
              <usage>
                <examples>
                  <example code="do drive;" isExecutable="true" isTestOnly="false" test="true" />
                </examples>
              </usage>
            </usagesExamples>
          </documentation>
        </action>
        <action name="external_factor_impact" returnType="float">
          <args>
            <arg name="new_road" optional="false" type="agent">
              <documentation>
                <result>the road on which to the driver wants to go</result>
              </documentation>
            </arg>
            <arg name="remaining_time" optional="false" type="float">
              <documentation>
                <result>the remaining time</result>
              </documentation>
            </arg>
          </args>
          <documentation>
            <result>action that allows to define how the remaining time is impacted by external factor</result>
            <usagesExamples>
              <usage>
                <examples>
                  <example code="do external_factor_impact new_road: a_road remaining_time: 0.5;" isExecutable="true" isTestOnly="false" test="true" />
                </examples>
              </usage>
            </usagesExamples>
          </documentation>
        </action>
        <action name="is_ready_next_road" returnType="bool">
          <args>
            <arg name="new_road" optional="false" type="agent">
              <documentation>
                <result>the road to test</result>
              </documentation>
            </arg>
            <arg name="lane" optional="false" type="int">
              <documentation>
                <result>the lane to test</result>
              </documentation>
            </arg>
          </args>
          <documentation>
            <result>action to test if the driver can take the given road at the given lane</result>
            <usagesExamples>
              <usage>
                <examples>
                  <example code="do is_ready_next_road new_road: a_road lane: 0;" isExecutable="true" isTestOnly="false" test="true" />
                </examples>
              </usage>
            </usagesExamples>
          </documentation>
        </action>
        <action name="lane_choice" returnType="int">
          <args>
            <arg name="new_road" optional="false" type="agent">
              <documentation>
                <result>the road on which to choose the lane</result>
              </documentation>
            </arg>
          </args>
          <documentation>
            <result>action to choose a lane</result>
            <usagesExamples>
              <usage>
                <examples>
                  <example code="do lane_choice new_road: a_road;" isExecutable="true" isTestOnly="false" test="true" />
                </examples>
              </usage>
            </usagesExamples>
          </documentation>
        </action>
        <action name="speed_choice" returnType="float">
          <args>
            <arg name="new_road" optional="false" type="agent">
              <documentation>
                <result>the road on which to choose the speed</result>
              </documentation>
            </arg>
          </args>
          <documentation>
            <result>action to choose a speed</result>
            <usagesExamples>
              <usage>
                <examples>
                  <example code="do speed_choice new_road: the_road;" isExecutable="true" isTestOnly="false" test="true" />
                </examples>
              </usage>
            </usagesExamples>
          </documentation>
        </action>
        <action name="test_next_road" returnType="bool">
          <args>
            <arg name="new_road" optional="false" type="agent">
              <documentation>
                <result>the road to test</result>
              </documentation>
            </arg>
          </args>
          <documentation>
            <result>action to test if the driver can take the given road</result>
            <usagesExamples>
              <usage>
                <examples>
                  <example code="do test_next_road new_road: a_road;" isExecutable="true" isTestOnly="false" test="true" />
                </examples>
              </usage>
            </usagesExamples>
          </documentation>
        </action>
      </actions>
    </skill>
    <skill class="simtools.gaml.extensions.traffic.DrivingSkill" extends="msi.gaml.skills.MovingSkill" id="driving" name="driving" projectName="simtools.gaml.extensions.traffic">
      <vars>
        <var constant="false" depends_on="" name="living_space" type="float">
          <documentation>
            <result>the min distance between the agent and an obstacle (in meter)</result>
          </documentation>
        </var>
        <var constant="false" depends_on="" name="lanes_attribute" type="string">
          <documentation>
            <result>the name of the attribut of the road agent that determine the number of road lanes</result>
          </documentation>
        </var>
        <var constant="false" depends_on="" name="tolerance" type="float">
          <documentation>
            <result>the tolerance distance used for the computation (in meter)</result>
          </documentation>
        </var>
        <var constant="false" depends_on="" name="obstacle_species" type="list">
          <documentation>
            <result>the list of species that are considered as obstacles</result>
          </documentation>
        </var>
        <var constant="false" depends_on="" name="speed" type="float">
          <documentation>
            <result>the speed of the agent (in meter/second)</result>
          </documentation>
        </var>
      </vars>
      <actions>
        <action name="follow_driving" returnType="path">
          <args>
            <arg name="speed" optional="true" type="float">
              <documentation>
                <result>the speed to use for this move (replaces the current value of speed)</result>
              </documentation>
            </arg>
            <arg name="path" optional="true" type="path">
              <documentation>
                <result>a path to be followed.</result>
              </documentation>
            </arg>
            <arg name="return_path" optional="true" type="boolean">
              <documentation>
                <result>if true, return the path followed (by default: false)</result>
              </documentation>
            </arg>
            <arg name="move_weights" optional="true" type="map">
              <documentation>
                <result>Weigths used for the moving.</result>
              </documentation>
            </arg>
            <arg name="living_space" optional="true" type="float">
              <documentation>
                <result>min distance between the agent and an obstacle (replaces the current value of living_space)</result>
              </documentation>
            </arg>
            <arg name="tolerance" optional="true" type="float">
              <documentation>
                <result>tolerance distance used for the computation (replaces the current value of tolerance)</result>
              </documentation>
            </arg>
            <arg name="lanes_attribute" optional="true" type="string">
              <documentation>
                <result>the name of the attribut of the road agent that determine the number of road lanes (replaces the current value of lanes_attribute)</result>
              </documentation>
            </arg>
          </args>
          <documentation>
            <result>moves the agent along a given path passed in the arguments while considering the other agents in the network.</result>
            <usagesExamples>
              <usage>
                <examples>
                  <example code="do follow speed: speed * 2 path: road_path;" isExecutable="true" isTestOnly="false" test="true" />
                </examples>
              </usage>
            </usagesExamples>
          </documentation>
        </action>
        <action name="goto_driving" returnType="path">
          <args>
            <arg name="target" optional="false" type="point,geometry,agent">
              <documentation>
                <result>the location or entity towards which to move.</result>
              </documentation>
            </arg>
            <arg name="speed" optional="true" type="float">
              <documentation>
                <result>the speed to use for this move (replaces the current value of speed)</result>
              </documentation>
            </arg>
            <arg name="on" optional="true" type="list,agent,graph,geometry">
              <documentation>
                <result>list, agent, graph, geometry that restrains this move (the agent moves inside this geometry)</result>
              </documentation>
            </arg>
            <arg name="return_path" optional="true" type="boolean">
              <documentation>
                <result>if true, return the path followed (by default: false)</result>
              </documentation>
            </arg>
            <arg name="move_weights" optional="true" type="map">
              <documentation>
                <result>Weigths used for the moving.</result>
              </documentation>
            </arg>
            <arg name="living_space" optional="true" type="float">
              <documentation>
                <result>min distance between the agent and an obstacle (replaces the current value of living_space)</result>
              </documentation>
            </arg>
            <arg name="tolerance" optional="true" type="float">
              <documentation>
                <result>tolerance distance used for the computation (replaces the current value of tolerance)</result>
              </documentation>
            </arg>
            <arg name="lanes_attribute" optional="true" type="string">
              <documentation>
                <result>the name of the attribut of the road agent that determine the number of road lanes (replaces the current value of lanes_attribute)</result>
              </documentation>
            </arg>
          </args>
          <documentation>
            <result>moves the agent towards the target passed in the arguments while considering the other agents in the network (only for graph topology)</result>
            <usagesExamples>
              <usage>
                <examples>
                  <example code="do gotoTraffic target: one_of (list (species (self))) speed: speed * 2 on: road_network living_space: 2.0;" isExecutable="true" isTestOnly="false" test="true" />
                </examples>
              </usage>
            </usagesExamples>
          </documentation>
        </action>
      </actions>
    </skill>
    <skill class="simtools.gaml.extensions.traffic.RoadNodeSkill" extends="" id="skill_road_node" name="skill_road_node" projectName="simtools.gaml.extensions.traffic">
      <vars>
        <var constant="false" depends_on="" name="roads_in" type="list">
          <documentation>
            <result>the list of input roads</result>
          </documentation>
        </var>
        <var constant="false" depends_on="" name="priority_roads" type="list">
          <documentation>
            <result>the list of priority roads</result>
          </documentation>
        </var>
        <var constant="false" depends_on="" name="roads_out" type="list">
          <documentation>
            <result>the list of output roads</result>
          </documentation>
        </var>
        <var constant="false" depends_on="" name="stop" type="list">
          <documentation>
            <result>define for each type of stop, the list of concerned roads</result>
          </documentation>
        </var>
        <var constant="false" depends_on="" name="block" type="map">
          <documentation>
            <result>define the list of agents blocking the node, and for each agent, the list of concerned roads</result>
          </documentation>
        </var>
      </vars>
      <actions />
    </skill>
    <skill class="simtools.gaml.extensions.traffic.RoadSkill" extends="" id="skill_road" name="skill_road" projectName="simtools.gaml.extensions.traffic">
      <vars>
        <var constant="false" depends_on="" name="agents_on" type="list">
          <documentation>
            <result>for each lane of the road, the list of agents for each segment</result>
          </documentation>
        </var>
        <var constant="false" depends_on="" name="all_agents" type="list">
          <documentation>
            <result>the list of agents on the road</result>
          </documentation>
        </var>
        <var constant="false" depends_on="" name="source_node" type="agent">
          <documentation>
            <result>the source node of the road</result>
          </documentation>
        </var>
        <var constant="false" depends_on="" name="target_node" type="agent">
          <documentation>
            <result>the target node of the road</result>
          </documentation>
        </var>
        <var constant="false" depends_on="" name="lanes" type="int">
          <documentation>
            <result>the number of lanes</result>
          </documentation>
        </var>
        <var constant="false" depends_on="" name="linked_road" type="agent">
          <documentation>
            <result>the linked road: the lanes of this linked road will be usable by drivers on the road</result>
          </documentation>
        </var>
        <var constant="false" depends_on="" name="maxspeed" type="float">
          <documentation>
            <result>the maximal speed on the road</result>
          </documentation>
        </var>
      </vars>
      <actions>
        <action name="register" returnType="void">
          <args>
            <arg name="agent" optional="false" type="agent">
              <documentation>
                <result>the agent to register on the road.</result>
              </documentation>
            </arg>
            <arg name="lane" optional="false" type="int">
              <documentation>
                <result>the lane index on which to register; if lane index &gt;= number of lanes, then register on the linked road</result>
              </documentation>
            </arg>
          </args>
          <documentation>
            <result>register the agent on the road at the given lane</result>
            <usagesExamples>
              <usage>
                <examples>
                  <example code="do register agent: the_driver lane: 0" isExecutable="true" isTestOnly="false" test="true" />
                </examples>
              </usage>
            </usagesExamples>
          </documentation>
        </action>
        <action name="unregister" returnType="void">
          <args>
            <arg name="agent" optional="false" type="agent">
              <documentation>
                <result>the agent to unregister on the road.</result>
              </documentation>
            </arg>
          </args>
          <documentation>
            <result>unregister the agent on the road</result>
            <usagesExamples>
              <usage>
                <examples>
                  <example code="do unregister agent: the_driver" isExecutable="true" isTestOnly="false" test="true" />
                </examples>
              </usage>
            </usagesExamples>
          </documentation>
        </action>
      </actions>
    </skill>
    <skill class="irit.gaml.skills.MAELIASkill" extends="" id="MAELIA" name="MAELIA" projectName="irit.maelia.gaml.additions">
      <actions>
        <action name="maeliaTimeStamp" returnType="float">
          <args />
        </action>
      </actions>
    </skill>
    <skill class="msi.gaml.extensions.traffic2d.DrivingSkill2d" extends="msi.gaml.skills.MovingSkill" id="driving2d" name="driving2d" projectName="msi.gaml.extensions.traffic2d">
      <vars>
        <var constant="false" depends_on="" name="considering_range" type="int" />
        <var constant="false" depends_on="" name="isCalculatedPerimeter" type="boolean" />
        <var constant="false" depends_on="" name="isPassedFalseTarget" type="boolean" />
        <var constant="false" depends_on="" name="currentPerimeter" type="float" />
        <var constant="false" depends_on="" name="currentDistance" type="float" />
        <var constant="false" depends_on="" name="obstacle_species" type="list" />
        <var constant="false" depends_on="" name="background_species" type="list" />
        <var constant="false" depends_on="" name="speed" type="float" />
      </vars>
      <actions>
        <action name="pedestrian_goto" returnType="int">
          <args>
            <arg name="target" optional="false" type="point,geometry,agent">
              <documentation>
                <result>the location or entity towards which to move.</result>
              </documentation>
            </arg>
            <arg name="speed" optional="true" type="float">
              <documentation>
                <result>the speed to use for this move (replaces the current value of speed)</result>
              </documentation>
            </arg>
            <arg name="background" optional="false" type="list,agent,graph,geometry">
              <documentation>
                <result>list, agent, graph, geometry on which the agent moves (the agent moves inside this geometry)</result>
              </documentation>
            </arg>
            <arg name="on" optional="true" type="list,agent,graph,geometry">
              <documentation>
                <result>list, agent, graph, geometry that restrains this move (the agent moves inside this geometry)</result>
              </documentation>
            </arg>
          </args>
          <documentation>
            <result>moves the agent towards the target passed in the arguments.</result>
            <usagesExamples>
              <usage>
                <examples>
                  <example code="do goto{&#xA; arg target value: one_of (list (species (self))); &#xA; arg speed value: speed * 2; &#xA; arg on value: road_network;}" isExecutable="true" isTestOnly="false" test="true" />
                </examples>
              </usage>
            </usagesExamples>
          </documentation>
        </action>
        <action name="read_replay" returnType="list">
          <args>
            <arg name="file_name" optional="false" type="string">
              <documentation>
                <result>File name.</result>
              </documentation>
            </arg>
          </args>
        </action>
        <action name="read_replay_file" returnType="list">
          <args>
            <arg name="file_name" optional="false" type="string">
              <documentation>
                <result>File name.</result>
              </documentation>
            </arg>
          </args>
        </action>
        <action name="save_replay" returnType="unknown">
          <args>
            <arg name="file_name" optional="false" type="string">
              <documentation>
                <result>File name.</result>
              </documentation>
            </arg>
            <arg name="agent_information" optional="false" type="list">
              <documentation>
                <result>list of position</result>
              </documentation>
            </arg>
          </args>
        </action>
        <action name="vehicle_goto" returnType="int">
          <args>
            <arg name="target" optional="false" type="point,geometry,agent">
              <documentation>
                <result>the location or entity towards which to move.</result>
              </documentation>
            </arg>
            <arg name="speed" optional="true" type="float">
              <documentation>
                <result>the speed to use for this move (replaces the current value of speed)</result>
              </documentation>
            </arg>
            <arg name="background" optional="false" type="list,agent,graph,geometry">
              <documentation>
                <result>list, agent, graph, geometry on which the agent moves (the agent moves inside this geometry)</result>
              </documentation>
            </arg>
            <arg name="on" optional="true" type="list,agent,graph,geometry">
              <documentation>
                <result>list, agent, graph, geometry that restrains this move (the agent moves inside this geometry)</result>
              </documentation>
            </arg>
          </args>
          <documentation>
            <result>moves the agent towards the target passed in the arguments.</result>
            <usagesExamples>
              <usage>
                <examples>
                  <example code="do action: goto{&#xA; arg target value: one_of (list (species (self))); &#xA; arg speed value: speed * 2; &#xA; arg on value: road_network;}" isExecutable="true" isTestOnly="false" test="true" />
                </examples>
              </usage>
            </usagesExamples>
          </documentation>
        </action>
      </actions>
    </skill>
    <skill class="msi.gaml.extensions.cplex.OptimizingSkill" extends="" id="optimizing" name="optimizing" projectName="msi.gaml.extensions.cplex">
      <actions>
        <action name="computeAverageEvacuationTime" returnType="unknown">
          <args />
        </action>
        <action name="optimizeDirection" returnType="unknown">
          <args />
        </action>
        <action name="optimizeSigns" returnType="unknown">
          <args />
        </action>
        <action name="doTest" returnType="unknown">
          <args />
        </action>
      </actions>
    </skill>
  </skills>
  <architectures>
    <architecture id="simple_bdi" name="simple_bdi" projectName="msi.gaml.architecture.simplebdi">
      <vars>
        <var constant="false" depends_on="" name="plan_persistence" type="float">
          <documentation>
            <result>plan persistence</result>
          </documentation>
        </var>
        <var constant="false" depends_on="" name="intention_persistence" type="float">
          <documentation>
            <result>intention persistence</result>
          </documentation>
        </var>
        <var constant="false" depends_on="" name="probabilistic_choice" type="boolean" />
        <var constant="false" depends_on="" name="belief_base" type="list" />
        <var constant="false" depends_on="" name="thinking" type="list" />
        <var constant="false" depends_on="" name="intention_base" type="list" />
        <var constant="false" depends_on="" name="desire_base" type="list" />
        <var constant="false" depends_on="" name="plan_base" type="list" />
        <var constant="false" depends_on="" name="current_plan" type="any type" />
      </vars>
      <actions>
        <action name="add_subintention" returnType="bool">
          <args>
            <arg name="predicate" optional="false" type="546704">
              <documentation>
                <result>predicate name</result>
              </documentation>
            </arg>
            <arg name="subintentions" optional="false" type="546704">
              <documentation>
                <result>the subintention to add to the predicate</result>
              </documentation>
            </arg>
            <arg name="add_as_desire" optional="true" type="boolean">
              <documentation>
                <result>add the subintention as a desire as well (by default, false)</result>
              </documentation>
            </arg>
          </args>
          <documentation>
            <result>adds the predicates is in the desire base.</result>
            <usagesExamples>
              <usage>
                <examples>
                  <example code="" isExecutable="true" isTestOnly="false" test="true" />
                </examples>
              </usage>
            </usagesExamples>
          </documentation>
        </action>
        <action name="get_current_intention" returnType="msi.gaml.architecture.simplebdi.Predicate">
          <args />
          <documentation>
            <result>returns the current intention (last entry of intention base).</result>
            <usagesExamples>
              <usage>
                <examples>
                  <example code="" isExecutable="true" isTestOnly="false" test="true" />
                </examples>
              </usage>
            </usagesExamples>
          </documentation>
        </action>
        <action name="get_belief" returnType="msi.gaml.architecture.simplebdi.Predicate">
          <args>
            <arg name="predicate" optional="false" type="546704">
              <documentation>
                <result>predicate to check</result>
              </documentation>
            </arg>
          </args>
          <documentation>
            <result>get the predicates is in the belief base (if several, returns the first one).</result>
            <usagesExamples>
              <usage>
                <examples>
                  <example code="get_belief(new_predicate(&quot;has_water&quot;, true))" isExecutable="true" isTestOnly="false" test="true" />
                </examples>
              </usage>
            </usagesExamples>
          </documentation>
        </action>
        <action name="get_belief_with_name" returnType="msi.gaml.architecture.simplebdi.Predicate">
          <args>
            <arg name="name" optional="false" type="string">
              <documentation>
                <result>name of the predicate to check</result>
              </documentation>
            </arg>
          </args>
          <documentation>
            <result>get the predicates is in the belief base (if several, returns the first one).</result>
            <usagesExamples>
              <usage>
                <examples>
                  <example code="get_belief(&quot;has_water&quot;)" isExecutable="true" isTestOnly="false" test="true" />
                </examples>
              </usage>
            </usagesExamples>
          </documentation>
        </action>
        <action name="get_beliefs" returnType="java.util.List&lt;msi.gaml.architecture.simplebdi.Predicate&gt;">
          <args>
            <arg name="predicate" optional="false" type="546704">
              <documentation>
                <result>name of the predicates to check</result>
              </documentation>
            </arg>
          </args>
          <documentation>
            <result>get the list of predicates is in the belief base</result>
            <usagesExamples>
              <usage>
                <examples>
                  <example code="get_belief(&quot;has_water&quot;)" isExecutable="true" isTestOnly="false" test="true" />
                </examples>
              </usage>
            </usagesExamples>
          </documentation>
        </action>
        <action name="get_beliefs_with_name" returnType="java.util.List&lt;msi.gaml.architecture.simplebdi.Predicate&gt;">
          <args>
            <arg name="name" optional="false" type="string">
              <documentation>
                <result>name of the predicates to check</result>
              </documentation>
            </arg>
          </args>
          <documentation>
            <result>get the list of predicates is in the belief base with the given name.</result>
            <usagesExamples>
              <usage>
                <examples>
                  <example code="get_belief(&quot;has_water&quot;)" isExecutable="true" isTestOnly="false" test="true" />
                </examples>
              </usage>
            </usagesExamples>
          </documentation>
        </action>
        <action name="get_plans" returnType="msi.gama.util.IList&lt;msi.gaml.architecture.simplebdi.BDIPlan&gt;">
          <args />
          <documentation>
            <result>get the list of plans.</result>
            <usagesExamples>
              <usage>
                <examples>
                  <example code="get_plans()" isExecutable="true" isTestOnly="false" test="true" />
                </examples>
              </usage>
            </usagesExamples>
          </documentation>
        </action>
        <action name="is_current_intention" returnType="bool">
          <args>
            <arg name="predicate" optional="false" type="546704">
              <documentation>
                <result>predicate to check</result>
              </documentation>
            </arg>
          </args>
          <documentation>
            <result>check if the predicates is the current intention (last entry of intention base).</result>
            <usagesExamples>
              <usage>
                <examples>
                  <example code="" isExecutable="true" isTestOnly="false" test="true" />
                </examples>
              </usage>
            </usagesExamples>
          </documentation>
        </action>
        <action name="add_belief" returnType="bool">
          <args>
            <arg name="predicate" optional="true" type="map">
              <documentation>
                <result>predicate to check</result>
              </documentation>
            </arg>
          </args>
          <documentation>
            <result>check if the predicates is in the desire base.</result>
            <usagesExamples>
              <usage>
                <examples>
                  <example code="" isExecutable="true" isTestOnly="false" test="true" />
                </examples>
              </usage>
            </usagesExamples>
          </documentation>
        </action>
        <action name="add_desire" returnType="bool">
          <args>
            <arg name="predicate" optional="false" type="546704">
              <documentation>
                <result>predicate to add</result>
              </documentation>
            </arg>
            <arg name="todo" optional="true" type="546704">
              <documentation>
                <result>add the desire as a subintention of this parameter</result>
              </documentation>
            </arg>
          </args>
          <documentation>
            <result>adds the predicates is in the desire base.</result>
            <usagesExamples>
              <usage>
                <examples>
                  <example code="" isExecutable="true" isTestOnly="false" test="true" />
                </examples>
              </usage>
            </usagesExamples>
          </documentation>
        </action>
        <action name="current_intention_on_hold" returnType="bool">
          <args>
            <arg name="on_hold_until" optional="true" type="any type">
              <documentation>
                <result>the specified intention is put on hold (fited plan are not considered) until specific condition is reached. Can be an expression (which will be tested), a list (of subintentions), or nil (by default the condition will be the current list of subintentions of the intention)</result>
              </documentation>
            </arg>
          </args>
          <documentation>
            <result>puts the current intention on hold until the specified condition is reached or all subintentions are reached (not in desire base anymore).</result>
            <usagesExamples>
              <usage>
                <examples>
                  <example code="" isExecutable="true" isTestOnly="false" test="true" />
                </examples>
              </usage>
            </usagesExamples>
          </documentation>
        </action>
        <action name="replace_belief" returnType="bool">
          <args>
            <arg name="old_predicate" optional="false" type="546704">
              <documentation>
                <result>predicate to remove</result>
              </documentation>
            </arg>
            <arg name="predicate" optional="false" type="546704">
              <documentation>
                <result>predicate to add</result>
              </documentation>
            </arg>
          </args>
          <documentation>
            <result>replace the old predicate by the new one.</result>
            <usagesExamples>
              <usage>
                <examples>
                  <example code="" isExecutable="true" isTestOnly="false" test="true" />
                </examples>
              </usage>
            </usagesExamples>
          </documentation>
        </action>
        <action name="remove_belief" returnType="bool">
          <args>
            <arg name="predicate" optional="true" type="546704">
              <documentation>
                <result>predicate to add</result>
              </documentation>
            </arg>
          </args>
          <documentation>
            <result>removes the predicates from the belief base.</result>
            <usagesExamples>
              <usage>
                <examples>
                  <example code="" isExecutable="true" isTestOnly="false" test="true" />
                </examples>
              </usage>
            </usagesExamples>
          </documentation>
        </action>
        <action name="remove_desire" returnType="bool">
          <args>
            <arg name="predicate" optional="true" type="546704">
              <documentation>
                <result>predicate to add</result>
              </documentation>
            </arg>
          </args>
          <documentation>
            <result>removes the predicates from the desire base.</result>
            <usagesExamples>
              <usage>
                <examples>
                  <example code="" isExecutable="true" isTestOnly="false" test="true" />
                </examples>
              </usage>
            </usagesExamples>
          </documentation>
        </action>
        <action name="remove_intention" returnType="bool">
          <args>
            <arg name="predicate" optional="true" type="546704">
              <documentation>
                <result>predicate to add</result>
              </documentation>
            </arg>
            <arg name="desire_also" optional="false" type="boolean">
              <documentation>
                <result>removes also desire</result>
              </documentation>
            </arg>
          </args>
          <documentation>
            <result>removes the predicates from the desire base.</result>
            <usagesExamples>
              <usage>
                <examples>
                  <example code="" isExecutable="true" isTestOnly="false" test="true" />
                </examples>
              </usage>
            </usagesExamples>
          </documentation>
        </action>
        <action name="has_belief" returnType="bool">
          <args>
            <arg name="predicate" optional="true" type="546704">
              <documentation>
                <result>predicate to check</result>
              </documentation>
            </arg>
          </args>
          <documentation>
            <result>check if the predicates is in the belief base.</result>
            <usagesExamples>
              <usage>
                <examples>
                  <example code="" isExecutable="true" isTestOnly="false" test="true" />
                </examples>
              </usage>
            </usagesExamples>
          </documentation>
        </action>
        <action name="has_desire" returnType="bool">
          <args>
            <arg name="predicate" optional="true" type="546704">
              <documentation>
                <result>predicate to check</result>
              </documentation>
            </arg>
          </args>
          <documentation>
            <result>check if the predicates is in the desire base.</result>
            <usagesExamples>
              <usage>
                <examples>
                  <example code="" isExecutable="true" isTestOnly="false" test="true" />
                </examples>
              </usage>
            </usagesExamples>
          </documentation>
        </action>
      </actions>
    </architecture>
  </architectures>
  <speciess>
    <species id="Physical3DWorld" name="Physical3DWorld" projectName="simtools.gaml.extensions.physics">
      <actions>
        <action name="computeForces" returnType="unknown">
          <args />
        </action>
      </actions>
    </species>
    <species id="AgentDB" name="AgentDB" projectName="irit.gaml.extensions.database">
      <actions>
        <action name="close" returnType="unknown">
          <args />
        </action>
        <action name="connect" returnType="unknown">
          <args>
            <arg name="params" optional="false" type="map">
              <documentation>
                <result>Connection parameters</result>
              </documentation>
            </arg>
          </args>
        </action>
        <action name="executeUpdate" returnType="int">
          <args>
            <arg name="updateComm" optional="false" type="string">
              <documentation>
                <result>SQL commands such as Create, Update, Delete, Drop with question mark</result>
              </documentation>
            </arg>
            <arg name="values" optional="true" type="list">
              <documentation>
                <result>List of values that are used to replace question mark</result>
              </documentation>
            </arg>
          </args>
        </action>
        <action name="getParameter" returnType="unknown">
          <args />
        </action>
        <action name="helloWorld" returnType="unknown">
          <args />
        </action>
        <action name="insert" returnType="int">
          <args>
            <arg name="into" optional="false" type="string">
              <documentation>
                <result>Table name</result>
              </documentation>
            </arg>
            <arg name="columns" optional="true" type="list">
              <documentation>
                <result>List of column name of table</result>
              </documentation>
            </arg>
            <arg name="values" optional="false" type="list">
              <documentation>
                <result>List of values that are used to insert into table. Columns and values must have same size</result>
              </documentation>
            </arg>
          </args>
        </action>
        <action name="isConnected" returnType="bool">
          <args />
        </action>
        <action name="select" returnType="list">
          <args>
            <arg name="select" optional="false" type="string">
              <documentation>
                <result>select string</result>
              </documentation>
            </arg>
            <arg name="values" optional="true" type="list">
              <documentation>
                <result>List of values that are used to replace question marks</result>
              </documentation>
            </arg>
          </args>
        </action>
        <action name="setParameter" returnType="unknown">
          <args>
            <arg name="params" optional="false" type="map">
              <documentation>
                <result>Connection parameters</result>
              </documentation>
            </arg>
          </args>
        </action>
        <action name="testConnection" returnType="bool">
          <args>
            <arg name="params" optional="false" type="map">
              <documentation>
                <result>Connection parameters</result>
              </documentation>
            </arg>
          </args>
        </action>
        <action name="timeStamp" returnType="float">
          <args />
        </action>
      </actions>
    </species>
    <species id="agent" name="agent" projectName="msi.gama.core">
      <actions>
        <action name="_init_" returnType="unknown">
          <args />
        </action>
        <action name="_step_" returnType="unknown">
          <args />
        </action>
      </actions>
    </species>
  </speciess>
  <statements>
    <statement id="layout_forceatlas2" kind="Single statement" name="layout_forceatlas2" projectName="simtools.graphanalysis.fr">
      <facets>
        <facet name="graph" omissible="true" optional="false" type="graph">
          <documentation>
            <result>the graph to apply the layout.</result>
          </documentation>
        </facet>
        <facet name="nb_steps" omissible="false" optional="true" type="int">
          <documentation>
            <result>The number of steps of the algorithm to perform (default 1).</result>
          </documentation>
        </facet>
        <facet name="thread_number" omissible="false" optional="true" type="int">
          <documentation>
            <result>More threads means more speed (default: 1).</result>
          </documentation>
        </facet>
        <facet name="dissuade_hubs" omissible="false" optional="true" type="boolean">
          <documentation>
            <result>Distributes attraction along outbound edges. Hubs attract less and thus are pushed to the borders (default: false).</result>
          </documentation>
        </facet>
        <facet name="linlog_mode" omissible="false" optional="true" type="boolean">
          <documentation>
            <result>Switch model from lin-lin to lin-log. Makes clusters more tight (default: false).</result>
          </documentation>
        </facet>
        <facet name="prevent_overlap" omissible="false" optional="true" type="boolean">
          <documentation>
            <result>Should not be used with approximate_repulsion default: false</result>
          </documentation>
        </facet>
        <facet name="edge_weight_influence" omissible="false" optional="true" type="float">
          <documentation>
            <result>How much influence you give to the edges wight. 0 is no influence, 1 is normal. default: 1.0</result>
          </documentation>
        </facet>
        <facet name="scaling" omissible="false" optional="true" type="float">
          <documentation>
            <result>How much repulsion you want. More makes a more sparse graph. default: 2.0</result>
          </documentation>
        </facet>
        <facet name="stronger_gravity" omissible="false" optional="true" type="boolean">
          <documentation>
            <result>A stronger gravity law default: false</result>
          </documentation>
        </facet>
        <facet name="gravity" omissible="false" optional="true" type="float">
          <documentation>
            <result>Attracts nodes to the center. Prevents islands from drifting away. default: 1.0</result>
          </documentation>
        </facet>
        <facet name="tolerance" omissible="false" optional="true" type="float">
          <documentation>
            <result>How much swinging you allow. Above 1 discouraged. Lower gives less speed and more precision. default: 0.1</result>
          </documentation>
        </facet>
        <facet name="approximate_repulsion" omissible="false" optional="true" type="boolean">
          <documentation>
            <result>Barnes Hut optimization: n2 complexity to n.ln(n); allows larger graphs. default: false</result>
          </documentation>
        </facet>
        <facet name="approximation" omissible="false" optional="true" type="float">
          <documentation>
            <result>Theta of the Barnes Hut optimization. default: 1.2</result>
          </documentation>
        </facet>
        <facet name="bounded_point1" omissible="false" optional="true" type="point">
          <documentation>
            <result>The new nodes positions are bounded within the two bound points if both are not null. default: null</result>
          </documentation>
        </facet>
        <facet name="bounded_point2" omissible="false" optional="true" type="point">
          <documentation>
            <result>The new nodes positions are bounded within the two bound points if both are not null. default: null</result>
          </documentation>
        </facet>
      </facets>
      <inside>
        <symbols />
        <kinds>
          <kind>Behavior</kind>
          <kind>Sequence of statements or action</kind>
        </kinds>
      </inside>
    </statement>
    <statement id="layout_yifanhu" kind="Single statement" name="layout_yifanhu" projectName="simtools.graphanalysis.fr">
      <facets>
        <facet name="graph" omissible="true" optional="false" type="graph">
          <documentation>
            <result>the graph to apply the layout.</result>
          </documentation>
        </facet>
        <facet name="optimal_distance" omissible="false" optional="true" type="float">
          <documentation>
            <result>the natural length of the springs. Bigger values mean nodes will be farther apart (default: 100).</result>
          </documentation>
        </facet>
        <facet name="quadtree_max_level" omissible="false" optional="true" type="int">
          <documentation>
            <result>The maximum level to be used in the quadtree representation. Greater values mean more accuracy (default: 10).</result>
          </documentation>
        </facet>
        <facet name="theta" omissible="false" optional="true" type="float">
          <documentation>
            <result>The theta parameter for Barnes-Hut opening criteria. Smaller values mean more accuracy (default: 1.2).</result>
          </documentation>
        </facet>
        <facet name="relative_strength" omissible="false" optional="true" type="float">
          <documentation>
            <result>The relative strength between electrical force (repulsion) and spring force (attriaction). default: 0.2</result>
          </documentation>
        </facet>
        <facet name="step_size" omissible="false" optional="true" type="float">
          <documentation>
            <result>The step size used in the algorithm. It has to be a meaningful size compared to the optimal distance (e.g. 10%). default: 10</result>
          </documentation>
        </facet>
        <facet name="nb_steps" omissible="false" optional="true" type="int">
          <documentation>
            <result>The number of steps of the algorithm to perform (default 1).</result>
          </documentation>
        </facet>
        <facet name="bounded_point1" omissible="false" optional="true" type="point">
          <documentation>
            <result>The new nodes positions are bounded within the two bound points if both are not null. default: null</result>
          </documentation>
        </facet>
        <facet name="bounded_point2" omissible="false" optional="true" type="point">
          <documentation>
            <result>The new nodes positions are bounded within the two bound points if both are not null. default: null</result>
          </documentation>
        </facet>
      </facets>
      <inside>
        <symbols />
        <kinds>
          <kind>Behavior</kind>
          <kind>Sequence of statements or action</kind>
        </kinds>
      </inside>
    </statement>
    <statement id="resume_sound" kind="Sequence of statements or action" name="resume_sound" projectName="ummisco.gaml.extensions.sound">
      <inside>
        <symbols />
        <kinds>
          <kind>Behavior</kind>
          <kind>Sequence of statements or action</kind>
        </kinds>
      </inside>
    </statement>
    <statement id="start_sound" kind="Sequence of statements or action" name="start_sound" projectName="ummisco.gaml.extensions.sound">
      <facets>
        <facet name="source" omissible="false" optional="false" type="string">
          <documentation>
            <result>The path to music file. This path is relative to the path of the model.</result>
          </documentation>
        </facet>
        <facet name="mode" omissible="false" optional="true" type="an identifier" values=", takes values in: {overwrite, ignore}">
          <documentation>
            <result>Mode of</result>
          </documentation>
        </facet>
        <facet name="repeat" omissible="false" optional="true" type="boolean">
          <documentation>
            <result />
          </documentation>
        </facet>
      </facets>
      <inside>
        <symbols />
        <kinds>
          <kind>Behavior</kind>
          <kind>Sequence of statements or action</kind>
        </kinds>
      </inside>
    </statement>
    <statement id="pause_sound" kind="Sequence of statements or action" name="pause_sound" projectName="ummisco.gaml.extensions.sound">
      <inside>
        <symbols />
        <kinds>
          <kind>Behavior</kind>
          <kind>Sequence of statements or action</kind>
        </kinds>
      </inside>
    </statement>
    <statement id="stop_sound" kind="Sequence of statements or action" name="stop_sound" projectName="ummisco.gaml.extensions.sound">
      <inside>
        <symbols />
        <kinds>
          <kind>Behavior</kind>
          <kind>Sequence of statements or action</kind>
        </kinds>
      </inside>
    </statement>
    <statement id="run" kind="Sequence of statements or action" name="run" projectName="msi.gama.headless">
      <facets>
        <facet name="of" omissible="false" optional="false" type="string" />
        <facet name="experiment" omissible="true" optional="false" type="string" />
        <facet name="end_cycle" omissible="false" optional="true" type="int" />
        <facet name="core" omissible="false" optional="true" type="int" />
        <facet name="out" omissible="false" optional="true" type="string" />
        <facet name="with_output" omissible="false" optional="true" type="map" />
        <facet name="with_param" omissible="false" optional="true" type="map" />
      </facets>
      <inside>
        <symbols />
        <kinds>
          <kind>Behavior</kind>
          <kind>Single statement</kind>
          <kind>Species</kind>
          <kind>Model</kind>
        </kinds>
      </inside>
    </statement>
    <statement id="diffusion" kind="Single statement" name="diffusion" projectName="ummisco.gaml.extensions.maths">
      <facets>
        <facet name="var" omissible="true" optional="false" type="an identifier">
          <documentation>
            <result>the variable to be diffused</result>
          </documentation>
        </facet>
        <facet name="on" omissible="false" optional="false" type="an identifier">
          <documentation>
            <result>the species (in general a grid), on which the diffusion will occur</result>
          </documentation>
        </facet>
        <facet name="mat_diffu" omissible="false" optional="true" type="matrix">
          <documentation>
            <result>the diffusion matrix (can have any size)</result>
          </documentation>
        </facet>
        <facet name="method" omissible="false" optional="true" type="an identifier" values=", takes values in: {convolution, dot_product}">
          <documentation>
            <result>the diffusion method</result>
          </documentation>
        </facet>
        <facet name="mask" omissible="false" optional="true" type="matrix">
          <documentation>
            <result>a matrix masking the diffusion (matrix created from a image for example)</result>
          </documentation>
        </facet>
        <facet name="proportion" omissible="false" optional="true" type="float">
          <documentation>
            <result>a diffusion rate</result>
          </documentation>
        </facet>
        <facet name="radius" omissible="false" optional="true" type="int">
          <documentation>
            <result>a diffusion radius</result>
          </documentation>
        </facet>
        <facet name="cycle_length" omissible="false" optional="true" type="int">
          <documentation>
            <result>the number of diffusion operation applied in one simulation step</result>
          </documentation>
        </facet>
      </facets>
      <documentation>
        <result>This statements allows a value to diffuse among a species on agents (generally on a grid) depending on a given diffusion matrix.</result>
        <usages>
          <usage descUsageElt="A basic example of diffusion of the variable phero defined in the species cells, given a diffusion matrix math_diff is:">
            <examples>
              <example code="matrix&lt;float&gt; math_diff &lt;- matrix([[1/9,1/9,1/9],[1/9,1/9,1/9],[1/9,1/9,1/9]]);" isExecutable="false" isTestOnly="false" test="false" />
              <example code="diffusion var: phero on: cells mat_diffu: math_diff;" isExecutable="false" isTestOnly="false" test="false" />
            </examples>
          </usage>
          <usage descUsageElt="The diffusion can be masked by obstacles, created from a bitmap image:">
            <examples>
              <example code="diffusion var: phero on: cells mat_diffu: math_diff mask: mymask;" isExecutable="false" isTestOnly="false" test="false" />
            </examples>
          </usage>
          <usage descUsageElt="A convenient way to have an uniform diffusion in a given radius is (which is equivalent to the above diffusion):">
            <examples>
              <example code="diffusion var: phero on: cells proportion: 1/9 radius: 1;" isExecutable="false" isTestOnly="false" test="false" />
            </examples>
          </usage>
        </usages>
      </documentation>
      <inside>
        <symbols />
        <kinds>
          <kind>Behavior</kind>
          <kind>Sequence of statements or action</kind>
        </kinds>
      </inside>
    </statement>
    <statement id="solve" kind="Single statement" name="solve" projectName="ummisco.gaml.extensions.maths">
      <facets>
        <facet name="equation" omissible="true" optional="false" type="an identifier">
          <documentation>
            <result>the equation system identifier to be numerically solved</result>
          </documentation>
        </facet>
        <facet name="method" omissible="false" optional="true" type="an identifier" values=", takes values in: {rk4, dp853}">
          <documentation>
            <result>integrate method (can be only "rk4" or "dp853") (default value: "rk4")</result>
          </documentation>
        </facet>
        <facet name="integrated_times" omissible="false" optional="true" type="list">
          <documentation>
            <result>time interval inside integration process</result>
          </documentation>
        </facet>
        <facet name="integrated_values" omissible="false" optional="true" type="list">
          <documentation>
            <result>list of variables's value inside integration process</result>
          </documentation>
        </facet>
        <facet name="discretizing_step" omissible="false" optional="true" type="int">
          <documentation>
            <result>number of discret beside 2 step of simulation (default value: 0)</result>
          </documentation>
        </facet>
        <facet name="time_initial" omissible="false" optional="true" type="float">
          <documentation>
            <result>initial time</result>
          </documentation>
        </facet>
        <facet name="time_final" omissible="false" optional="true" type="float">
          <documentation>
            <result>target time for the integration (can be set to a value smaller than t0 for backward integration)</result>
          </documentation>
        </facet>
        <facet name="cycle_length" omissible="false" optional="true" type="int">
          <documentation>
            <result>length of simulation cycle which will be synchronize with step of integrator (default value: 1)</result>
          </documentation>
        </facet>
        <facet name="step" omissible="false" optional="true" type="float">
          <documentation>
            <result>integration step, use with most integrator methods (default value: 1)</result>
          </documentation>
        </facet>
        <facet name="min_step" omissible="false" optional="true" type="float">
          <documentation>
            <result>minimal step, (used with dp853 method only), (sign is irrelevant, regardless of integration direction, forward or backward), the last step can be smaller than this value</result>
          </documentation>
        </facet>
        <facet name="max_step" omissible="false" optional="true" type="float">
          <documentation>
            <result>maximal step, (used with dp853 method only), (sign is irrelevant, regardless of integration direction, forward or backward), the last step can be smaller than this value</result>
          </documentation>
        </facet>
        <facet name="scalAbsoluteTolerance" omissible="false" optional="true" type="float">
          <documentation>
            <result>allowed absolute error (used with dp853 method only)</result>
          </documentation>
        </facet>
        <facet name="scalRelativeTolerance" omissible="false" optional="true" type="float">
          <documentation>
            <result>allowed relative error (used with dp853 method only)</result>
          </documentation>
        </facet>
      </facets>
      <documentation>
        <result>Solves all equations which matched the given name, with all systems of agents that should solved simultaneously.</result>
        <usagesExamples>
          <usage>
            <examples>
              <example code="solve SIR method: &quot;rk4&quot; step:0.001;" isExecutable="false" isTestOnly="false" test="false" />
            </examples>
          </usage>
        </usagesExamples>
      </documentation>
      <inside>
        <symbols />
        <kinds>
          <kind>Behavior</kind>
          <kind>Sequence of statements or action</kind>
        </kinds>
      </inside>
    </statement>
    <statement id="equation" kind="Sequence of statements or action" name="equation" projectName="ummisco.gaml.extensions.maths">
      <facets>
        <facet name="name" omissible="true" optional="false" type="an identifier">
          <documentation>
            <result>the equation identifier</result>
          </documentation>
        </facet>
        <facet name="type" omissible="false" optional="true" type="an identifier" values=", takes values in: {SI, SIS, SIR, SIRS, SEIR, LV}">
          <documentation>
            <result>the choice of one among classical models (SI, SIS, SIR, SIRS, SEIR, LV)</result>
          </documentation>
        </facet>
        <facet name="vars" omissible="false" optional="true" type="list">
          <documentation>
            <result>the list of variables used in predefined equation systems</result>
          </documentation>
        </facet>
        <facet name="params" omissible="false" optional="true" type="list">
          <documentation>
            <result>the list of pramameters used in predefined equation systems</result>
          </documentation>
        </facet>
        <facet name="simultaneously" omissible="false" optional="true" type="list">
          <documentation>
            <result>a list of agents containing a system of equations (all systems will be solved simultaneously)</result>
          </documentation>
        </facet>
      </facets>
      <documentation>
        <result>The equation statement is used to create an equation system from several single equations.</result>
        <seeAlso>
          <see id="=" />
          <see id="solve" />
        </seeAlso>
        <usagesNoExample>
          <usage descUsageElt="If the simultaneously: facet is used, system of all the agents will be solved simultaneously." />
        </usagesNoExample>
        <usages>
          <usage descUsageElt="The basic syntax to define an equation system is:">
            <examples>
              <example code="float t;" isExecutable="false" isTestOnly="false" test="false" />
              <example code="float S;" isExecutable="false" isTestOnly="false" test="false" />
              <example code="float I;" isExecutable="false" isTestOnly="false" test="false" />
              <example code="equation SI { " isExecutable="false" isTestOnly="false" test="false" />
              <example code="   diff(S,t) = (- 0.3 * S * I / 100);" isExecutable="false" isTestOnly="false" test="false" />
              <example code="   diff(I,t) = (0.3 * S * I / 100);" isExecutable="false" isTestOnly="false" test="false" />
              <example code="} " isExecutable="false" isTestOnly="false" test="false" />
            </examples>
          </usage>
          <usage descUsageElt="If the type: facet is used, a predefined equation system is defined using variables vars: and parameters params: in the right order. All possible predefined equation systems are the following ones (see [EquationPresentation161 EquationPresentation161] for precise definition of each classical equation system): ">
            <examples>
              <example code="equation eqSI type: SI vars: [S,I,t] params: [N,beta];" isExecutable="false" isTestOnly="false" test="false" />
              <example code="equation eqSIS type: SIS vars: [S,I,t] params: [N,beta,gamma];" isExecutable="false" isTestOnly="false" test="false" />
              <example code="equation eqSIR type:SIR vars:[S,I,R,t] params:[N,beta,gamma];" isExecutable="false" isTestOnly="false" test="false" />
              <example code="equation eqSIRS type: SIRS vars: [S,I,R,t] params: [N,beta,gamma,omega,mu];" isExecutable="false" isTestOnly="false" test="false" />
              <example code="equation eqSEIR type: SEIR vars: [S,E,I,R,t] params: [N,beta,gamma,sigma,mu];" isExecutable="false" isTestOnly="false" test="false" />
              <example code="equation eqLV type: LV vars: [x,y,t] params: [alpha,beta,delta,gamma] ;" isExecutable="false" isTestOnly="false" test="false" />
            </examples>
          </usage>
        </usages>
      </documentation>
      <inside>
        <symbols />
        <kinds>
          <kind>Species</kind>
          <kind>Model</kind>
        </kinds>
      </inside>
    </statement>
    <statement id="=" kind="Single statement" name="=" projectName="ummisco.gaml.extensions.maths">
      <facets>
        <facet name="left" omissible="false" optional="false" type="any type">
          <documentation>
            <result>the left part of the equation (it should be a variable or a call to the diff() or diff2() operators)</result>
          </documentation>
        </facet>
        <facet name="right" omissible="true" optional="false" type="float">
          <documentation>
            <result>the right part of the equation (it is mandatory that it can be evaluate to a float</result>
          </documentation>
        </facet>
      </facets>
      <documentation>
        <result>Allows to implement an equation in the form function(n, t) = expression. The left function is only here as a placeholder for enabling a simpler syntax and grabbing the variable as its left member.</result>
        <seeAlso>
          <see id="equation" />
          <see id="solve" />
        </seeAlso>
        <usages>
          <usage descUsageElt="The syntax of the = statement is a bit different from the other statements. It hase to be used as follows (in an equation):">
            <examples>
              <example code="float t;" isExecutable="false" isTestOnly="false" test="false" />
              <example code="float S;" isExecutable="false" isTestOnly="false" test="false" />
              <example code="float I;" isExecutable="false" isTestOnly="false" test="false" />
              <example code="equation SI { " isExecutable="false" isTestOnly="false" test="false" />
              <example code="   diff(S,t) = (- 0.3 * S * I / 100);" isExecutable="false" isTestOnly="false" test="false" />
              <example code="   diff(I,t) = (0.3 * S * I / 100);" isExecutable="false" isTestOnly="false" test="false" />
              <example code="} " isExecutable="false" isTestOnly="false" test="false" />
            </examples>
          </usage>
        </usages>
      </documentation>
      <inside>
        <symbols>
          <symbol>equation</symbol>
        </symbols>
        <kinds />
      </inside>
    </statement>
    <statement id="plan" kind="Behavior" name="plan" projectName="msi.gaml.architecture.simplebdi">
      <facets>
        <facet name="when" omissible="false" optional="true" type="boolean" />
        <facet name="finished_when" omissible="false" optional="true" type="boolean" />
        <facet name="priority" omissible="false" optional="true" type="float" />
        <facet name="name" omissible="true" optional="true" type="an identifier" />
        <facet name="intention" omissible="false" optional="true" type="any type" />
        <facet name="instantaneous" omissible="false" optional="true" type="boolean" />
      </facets>
      <inside>
        <symbols />
        <kinds>
          <kind>Species</kind>
        </kinds>
      </inside>
    </statement>
    <statement id="assert" kind="Single statement" name="assert" projectName="irit.gaml.extensions.test">
      <facets>
        <facet name="value" omissible="true" optional="false" type="any type">
          <documentation>
            <result>the value that is evaluated and compared to other facets</result>
          </documentation>
        </facet>
        <facet name="equals" omissible="false" optional="true" type="any type">
          <documentation>
            <result>an expresion, assert tests whether the value is equals to this expression</result>
          </documentation>
        </facet>
        <facet name="is_not" omissible="false" optional="true" type="any type">
          <documentation>
            <result>an expression, assert tests whether the value is not equals to this expression</result>
          </documentation>
        </facet>
        <facet name="raises" omissible="false" optional="true" type="an identifier">
          <documentation>
            <result>"error" or "warning", used in testing what raises the evaluation of the value: expresion</result>
          </documentation>
        </facet>
      </facets>
      <documentation>
        <result>Allows to check whether the evaluation of a given expression fulfils a given condition. If it is not fulfilled, an exception is raised.</result>
        <seeAlso>
          <see id="test" />
          <see id="setup" />
        </seeAlso>
        <usages>
          <usage descUsageElt="if the equals: facet is used, the equality between the evaluation of expressions in the value: and in the equals: facets is tested">
            <examples>
              <example code="assert (2+2) equals: 4;" isExecutable="true" isTestOnly="false" test="true" />
            </examples>
          </usage>
          <usage descUsageElt="if the is_not: facet is used, the inequality between the evaluation of expressions in the value: and in the equals: facets is tested">
            <examples>
              <example code="assert self is_not: nil;" isExecutable="true" isTestOnly="false" test="true" />
            </examples>
          </usage>
          <usage descUsageElt="if the raises: facet is used with either &quot;warning&quot; or &quot;error&quot;, the statement tests whether the evaluation of the value: expression raises an error (resp. a warning)">
            <examples>
              <example code="int z &lt;- 0;" isExecutable="true" isTestOnly="false" test="true" />
              <example code="assert (3/z) raises: &quot;error&quot;;" isExecutable="true" isTestOnly="false" test="true" />
            </examples>
          </usage>
        </usages>
      </documentation>
      <inside>
        <symbols>
          <symbol>test</symbol>
        </symbols>
        <kinds />
      </inside>
    </statement>
    <statement id="test" kind="Behavior" name="test" projectName="irit.gaml.extensions.test">
      <facets>
        <facet name="name" omissible="true" optional="true" type="an identifier">
          <documentation>
            <result>identifier of the test</result>
          </documentation>
        </facet>
      </facets>
      <documentation>
        <result>The test statement allows modeler to define a set of assertions that will be tested. Before the execution of the embeded set of instructions, if a setup is defined in the species, model or experiment, it is executed. In a test, if one assertion fails, the evaluation of other assertions continue (if GAMA is configured in the preferences that the program does not stop at the first exception).</result>
        <seeAlso>
          <see id="setup" />
          <see id="assert" />
        </seeAlso>
        <usages>
          <usage descUsageElt="An example of use:">
            <examples>
              <example code="species Tester {" isExecutable="false" isTestOnly="false" test="false" />
              <example code="    // set of attributes that will be used in test" isExecutable="false" isTestOnly="false" test="false" />
              <example code="" isExecutable="false" isTestOnly="false" test="false" />
              <example code="    setup {" isExecutable="false" isTestOnly="false" test="false" />
              <example code="        // [set of instructions... in particular initializations]" isExecutable="false" isTestOnly="false" test="false" />
              <example code="    }" isExecutable="false" isTestOnly="false" test="false" />
              <example code="" isExecutable="false" isTestOnly="false" test="false" />
              <example code="    test t1 {" isExecutable="false" isTestOnly="false" test="false" />
              <example code="       // [set of instructions, including asserts]" isExecutable="false" isTestOnly="false" test="false" />
              <example code="    }" isExecutable="false" isTestOnly="false" test="false" />
              <example code="}" isExecutable="false" isTestOnly="false" test="false" />
            </examples>
          </usage>
        </usages>
      </documentation>
      <inside>
        <symbols />
        <kinds>
          <kind>Species</kind>
          <kind>Experiment</kind>
          <kind>Model</kind>
        </kinds>
      </inside>
    </statement>
    <statement id="draw" kind="Single statement" name="draw" projectName="msi.gama.core">
      <facets>
        <facet name="geometry" omissible="true" optional="true" type="any type">
          <documentation>
            <result>any type of data (it can be geometry, image, text)</result>
          </documentation>
        </facet>
        <facet name="shape" omissible="false" optional="true" type="any type">
          <documentation>
            <result>the shape to display</result>
          </documentation>
        </facet>
        <facet name="text" omissible="false" optional="true" type="string">
          <documentation>
            <result>the text to draw</result>
          </documentation>
        </facet>
        <facet name="image" omissible="false" optional="true" type="string">
          <documentation>
            <result>path of the icon to draw (JPEG, PNG, GIF)</result>
          </documentation>
        </facet>
        <facet name="texture" omissible="false" optional="true" type="any type in [string, list]">
          <documentation>
            <result>the texture that should be applied to the geometry</result>
          </documentation>
        </facet>
        <facet name="empty" omissible="false" optional="true" type="boolean">
          <documentation>
            <result>a condition specifying whether the geometry is empty or full</result>
          </documentation>
        </facet>
        <facet name="border" omissible="false" optional="true" type="any type in [rgb, boolean]">
          <documentation>
            <result>if used with a color, represents the color of the geometry border. If set to false, expresses that no border should be drawn. If not set, the borders will be drawn using the color of the geometry.</result>
          </documentation>
        </facet>
        <facet name="rounded" omissible="false" optional="true" type="boolean">
          <documentation>
            <result>specify whether the geometry have to be rounded (e.g. for squares)</result>
          </documentation>
        </facet>
        <facet name="at" omissible="false" optional="true" type="point">
          <documentation>
            <result>location where the shape/text/icon is drawn</result>
          </documentation>
        </facet>
        <facet name="size" omissible="false" optional="true" type="float">
          <documentation>
            <result>size of the text/icon (not used in the context of the drawing of a geometry)</result>
          </documentation>
        </facet>
        <facet name="to" omissible="false" optional="true" type="point">
          <documentation>
            <result />
          </documentation>
        </facet>
        <facet name="color" omissible="false" optional="true" type="rgb">
          <documentation>
            <result>the color to use to display the text/icon/geometry</result>
          </documentation>
        </facet>
        <facet name="scale" omissible="false" optional="true" type="float">
          <documentation>
            <result />
          </documentation>
        </facet>
        <facet name="rotate" omissible="false" optional="true" type="any type in [float, int]">
          <documentation>
            <result>orientation of the shape/text/icon</result>
          </documentation>
        </facet>
        <facet name="rotate3D" omissible="false" optional="true" type="pair">
          <documentation>
            <result>orientation of the shape/text/icon</result>
          </documentation>
        </facet>
        <facet name="font" omissible="false" optional="true" type="any type in [19, string]">
          <documentation>
            <result>the font used to draw the text</result>
          </documentation>
        </facet>
        <facet name="bitmap" omissible="false" optional="true" type="boolean">
          <documentation>
            <result />
          </documentation>
        </facet>
        <facet name="depth" omissible="false" optional="true" type="float">
          <documentation>
            <result>(only if the display type is opengl) Add a depth to the geometry previously defined (a line becomes a plan, a circle becomes a cylinder, a square becomes a cube, a polygon becomes a polyhedron with height equal to the depth value). Note: This only works if a the agent has not a point geometry</result>
          </documentation>
        </facet>
        <facet name="begin_arrow" omissible="false" optional="true" type="any type in [int, float]">
          <documentation>
            <result>the size of the arrow, located at the beginning of the drawn geometry</result>
          </documentation>
        </facet>
        <facet name="end_arrow" omissible="false" optional="true" type="any type in [int, float]">
          <documentation>
            <result>the size of the arrow, located at the end of the drawn geometry</result>
          </documentation>
        </facet>
        <facet name="style" omissible="false" optional="true" type="an identifier" values=", takes values in: {plain, bold, italic}">
          <documentation>
            <result>the style used to display text</result>
          </documentation>
        </facet>
      </facets>
      <documentation>
        <result>`draw` is used in an aspect block to expresse how agents of the species will be drawn. It is evaluated each time the agent has to be drawn. It can also be used in the graphics block.</result>
        <usages>
          <usage descUsageElt="Any kind of geometry as any location can be drawn when displaying an agent (independently of his shape)">
            <examples>
              <example code="aspect geometryAspect {" isExecutable="false" isTestOnly="false" test="false" />
              <example code="&#x9;draw circle(1.0) empty: !hasFood color: #orange ;" isExecutable="false" isTestOnly="false" test="false" />
              <example code="}" isExecutable="false" isTestOnly="false" test="false" />
            </examples>
          </usage>
          <usage descUsageElt="Image or text can also be drawn">
            <examples>
              <example code="aspect arrowAspect {" isExecutable="false" isTestOnly="false" test="false" />
              <example code="&#x9;draw &quot;Current state= &quot;+state at: location + {-3,1.5} color: #white font: font('Default', 12, #bold) ;" isExecutable="false" isTestOnly="false" test="false" />
              <example code="&#x9;draw file(ant_shape_full) rotate: heading at: location size: 5" isExecutable="false" isTestOnly="false" test="false" />
              <example code="}" isExecutable="false" isTestOnly="false" test="false" />
            </examples>
          </usage>
          <usage descUsageElt="Arrows can be drawn with any kind of geometry, using begin_arrow and end_arrow facets, combined with the empty: facet to specify whether it is plain or empty">
            <examples>
              <example code="aspect arrowAspect {" isExecutable="false" isTestOnly="false" test="false" />
              <example code="&#x9;draw line([{20, 20}, {40, 40}]) color: #black begin_arrow:5;" isExecutable="false" isTestOnly="false" test="false" />
              <example code="&#x9;draw line([{10, 10},{20, 50}, {40, 70}]) color: #green end_arrow: 2 begin_arrow: 2 empty: true;" isExecutable="false" isTestOnly="false" test="false" />
              <example code="&#x9;draw square(10) at: {80,20} color: #purple begin_arrow: 2 empty: true;" isExecutable="false" isTestOnly="false" test="false" />
              <example code="}" isExecutable="false" isTestOnly="false" test="false" />
            </examples>
          </usage>
        </usages>
      </documentation>
      <inside>
        <symbols>
          <symbol>aspect</symbol>
        </symbols>
        <kinds>
          <kind>Sequence of statements or action</kind>
          <kind>Layer</kind>
        </kinds>
      </inside>
    </statement>
  </statements>
  <constantsCategories />
  <constants />
  <insideStatementKinds>
    <insideStatementKind symbol="Behavior" />
    <insideStatementKind symbol="Sequence of statements or action" />
    <insideStatementKind symbol="Single statement" />
    <insideStatementKind symbol="Species" />
    <insideStatementKind symbol="Model" />
    <insideStatementKind symbol="Experiment" />
    <insideStatementKind symbol="Layer" />
  </insideStatementKinds>
  <insideStatementSymbols>
    <insideStatementSymbol symbol="equation" />
    <insideStatementSymbol symbol="test" />
    <insideStatementSymbol symbol="aspect" />
  </insideStatementSymbols>
  <statementsKinds>
    <kind symbol="Single statement" />
    <kind symbol="Sequence of statements or action" />
    <kind symbol="Behavior" />
  </statementsKinds>
</doc>
