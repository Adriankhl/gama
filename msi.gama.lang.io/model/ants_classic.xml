<?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>
<model name="ants">

	<global>
		<var type="float" name="evaporation_rate" init="0.1" min="0.01"
			max="1" const="false" parameter="Evaporation Rate:" />
		<var type="float" name="diffusion_rate" init="0.5" min="0" max="1"
			const="true" parameter="Diffusion Rate:" />
		<var type="int" name="gridsize" init="75" const="true" />
		<var type="int" name="ants_number" init="100" const="true" min="10"
			max="200" parameter="Number of Ants:" />
		<var type="int" name="food_remaining" value="ant_grid count (each.food > 0)"
			init="10" />
		<var type="point" name="center" init="{int (gridsize / 2), int (gridsize / 2)}"
			const="true" />
		<var type="matrix" name="types"
			init="file '../images/environment75x75_scarce.pgm'" const="true" />

		<reflex name="stop">
			<if condition="(food_remaining &lt; 1) or (time &gt; 1500)">
				<do action="halt" />
			</if>
		</reflex>

		<init>
			<create species="ant" number="ants_number">
				<set var="location" value="center" />
			</create>
		</init>

	</global>

	<environment width="gridsize" height="gridsize">
		<grid name="ant_grid" width="gridsize" height="gridsize"
			neighbours="8">
			<var type="bool" name="multiagent" init="true" const="true" />
			<var type="int" name="type" init="types at {grid_x,grid_y}"
				const="true" />
			<var type="bool" name="isNestLocation" init="(self distance_to center) &lt; 4"
				const="true" />
			<var type="bool" name="isFoodLocation" init="type = 2" const="true" />
			<var type="rgb" name="color"
				init="[road &gt; 15 ? 255 : (isNestLocation ? 125:0),road * 30, road &gt; 15 ? 255 : food * 50]" />
			<var type="int" name="food" init="isFoodLocation ? 5 : 0" />
			<var type="int" name="nest" init="300 - (self distance_to center)"
				const="true" />
		</grid>
	</environment>

	<entities>
		<species name="ant" skills="moving, visible">
			<var type="rgb" name="color" init="'red'" const="true" />
			<var type="ant_grid" name="place" value="ant_grid location" />
			<var type="string" name="shape" init="'dot'" />
			<var type="bool" name="hasFood" init="false" />
			<var type="signal" name="road" value=" hasFood ? 240 : 0" decay="evaporation_rate"
				proportion="diffusion_rate" environment="ant_grid" />
			<var type="bool" name="hasRoad" init="false" value="place.road &gt; 0.05" />

			<reflex name="wandering" when="(!hasFood) and (!hasRoad) and (place.food = 0)">
				<do action="wander">
					<arg type="int" name="amplitude" value="120" />
				</do>
			</reflex>

			<reflex name="looking" when="(!hasFood) and (hasRoad) and (place.food = 0)">
				<let var="list_places" value="place.neighbours" />
				<let var="goal" value="list_places first_with (each.food > 0)" />
				<if condition="goal != nil">
					<set var="location" value="goal" />
					<else>
						<let var="min_nest" value=" (list_places min_of (each.nest))" />
						<set var="list_places"
							value="list_places sort ((each.nest = min_nest) ? each.road :  0.0)" />
						<set var="location" value="point last list_places" />
					</else>
				</if>
			</reflex>

			<reflex name="taking" when="(!hasFood) and (place.food &gt; 0)">
				<set var="shape" value="'dot'" />
				<set var="hasFood" value="true" />
				<set var="place.food" value="place.food - 1" />
			</reflex>

			<reflex name="homing" when="(hasFood) and (!place.isNestLocation)">
				<do action="goto">
					<arg type="ant_grid" name="target" value="center" />
				</do>
			</reflex>

			<reflex name="dropping" when="(hasFood) and (place.isNestLocation)">
				<set var="hasFood" value="false" />
				<set var="shape" value="'circle'" />
				<set var="heading" value="heading - 180" />
			</reflex>
		</species>
	</entities>

	<output>
		<display name="Ants" refresh_every="2">
			<grid name="ant_grid" />
			<species name="ant" />
		</display>
	</output>

</model>
